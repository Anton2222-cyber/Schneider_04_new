***********************************************************************
*
*	CODE GENERATION LISTING FOR: 04
*	COMPILER VERSION: 6.0.0.52
*
***********************************************************************

**************************************************
	CODE GENERATOR SUBROUTINES
**************************************************

$$MOD:
A1804500  FB90 F3F1		sdiv r3, r0, r1
A1804504  4359     		mul r1, r1, r3
A1804506  EBC1 0000		rsb r0, r1, r0
A180450A  4770     		bx lr

$$MOD_U:
A180450C  FBB0 F3F1		udiv r3, r0, r1
A1804510  4359     		mul r1, r1, r3
A1804512  EBC1 0000		rsb r0, r1, r0
A1804516  4770     		bx lr

**************************************************
	List function block: R_TRIG
**************************************************

FUNCTION_BLOCK R_TRIG

	{ DE:"<HTML>The output Q will remain FALSE as long as the input variable CLK is FALSE.<br>
As soon as CLK returns TRUE, Q will first return TRUE.<br><br>
This means each time the function is called up, Q will return FALSE until CLK has falling edge followed by an rising edge.<br><br>
<img src= r_trig.png>" }

        VAR_INPUT
clk : BOOL;	{ DE:"Input for edge detection" }
	END_VAR

        VAR_OUTPUT
q : BOOL;	{ DE:"Raising edge output" }
	END_VAR

        VAR
m : BOOL := FALSE;
	END_VAR

END_FUNCTION_BLOCK

A1804518  E92D 4040		stmdb sp!, { r6, lr }
A180451C  462E     		mov r6, r5

#0		{SRC:R_TRIG}
#1		
#2			LD		clk
(*) UNDEF
A180451E  F8DF 7028		ldr r7, [pc, #+40] ; 0x1
A1804522  5DF0     		ldrb r0, [r6, +r7]

#3			ANDN	m
(*) BOOL
A1804524  7837     		ldrb r7, [r6]
A1804526  2F00     		cmp r7, #0
A1804528  BF08 2701		eqmov r7, #1
A180452C  BF18 2700		nemov r7, #0
A1804530  4038     		and r0, r0, r7

#4			ST		q
(*) BOOL
A1804532  F8DF 7018		ldr r7, [pc, #+24] ; 0x2
A1804536  55F0     		strb r0, [r6, +r7]

#5		
#6			LD		clk
(*) UNDEF
A1804538  F8DF 700C		ldr r7, [pc, #+12] ; 0x1
A180453C  5DF0     		ldrb r0, [r6, +r7]

#7			ST		m
(-) BOOL
A180453E  7030     		strb r0, [r6]

A1804540  E8BD 4040		ldmia sp!, { r6, lr }

A1804544  4770     		bx lr

A1804548  00000001		; 0x00000001
A180454C  00000002		; 0x00000002


Frame allocation (hex):

	0000 bit  0: VAR m
	0001 bit  0: VAR clk
	0002 bit  0: VAR q

END_FUNCTION_BLOCK
**************************************************
	List function block: TON
**************************************************

FUNCTION_BLOCK TON

	{ DE:"<HTML>The TON block produces a delayed output Q of the input IN. The delay time is expressed in milliseconds on the PT input.</br></br>
<img src= tonscheme.png>
<ul>
<li>if IN is FALSE Q is false</li>
<li>Q becomes TRUE as IN remains TRUE for PT milliseconds</li>
<li>Q remains TRUE until IN remains TRUE</li>
</ul>" }

        VAR_INPUT
IN : BOOL;	{ DE:"Timer input source" }
PT : UDINT;	{ DE:"Preset time value (ms)" }
	END_VAR

        VAR_OUTPUT
Q : BOOL;	{ DE:"Timer output" }
ET : UDINT;	{ DE:"Timer current value (ms)" }
	END_VAR

        VAR_EXTERNAL
	{G:"System_Timers"}
sysTimer AT %MD0.0 : UDINT;	{ DE:"System timer [ms]" }
	END_VAR

        VAR
timStart : UDINT;	{ DE:"Time value at start of counting" }
	END_VAR

END_FUNCTION_BLOCK

A1804550  E92D 4040		stmdb sp!, { r6, lr }
A1804554  462E     		mov r6, r5

#0		{SRC:TON}
#1		
#2			(*	Check if in counting	*)
#3		
#4			LD		IN
(*) UNDEF
A1804556  F8DF 7084		ldr r7, [pc, #+132] ; 0x4
A180455A  5DF0     		ldrb r0, [r6, +r7]

#5			JMPCN	lReset
(-) BOOL
A180455C  2800     		cmp r0, #0
A180455E  D031     		beq #98 ; 0xA18045C4


#6		
#7			(*	Check if Q is TRUE *)
#8			LD		Q
(*) UNDEF
A1804562  F8DF 7080		ldr r7, [pc, #+128] ; 0xC
A1804566  5DF0     		ldrb r0, [r6, +r7]

#9			RETC
#10			
(-) BOOL
A1804568  2800     		cmp r0, #0
A180456A  D134     		bne #104 ; 0xA18045D6


#11			(*	Check if already in counting *)
#12			LD		timStart
(-) UNDEF
A180456E  6830     		ldr r0, [r6]

#13			EQ		0
(*) UDINT
A1804570  2800     		cmp r0, #0
A1804572  BF18 2000		nemov r0, #0
A1804576  BF08 2001		eqmov r0, #1

#14			JMPCN	lUpdate
(-) BOOL
A180457A  2800     		cmp r0, #0
A180457C  D004     		beq #8 ; 0xA1804588


#15		
#16			(*	Start of counting *)
#17			LD		sysTimer
(*) UNDEF
A1804580  F8DF 7068		ldr r7, [pc, #+104] ; 0x1000052C
A1804584  6838     		ldr r0, [r7]

#18			ST		timStart
(-) UDINT
A1804586  6030     		str r0, [r6]

#19			
#20		lUpdate:
#21		
#22			(*	Update timer and check if time elapsed *)
#23			LD		sysTimer
(*) UNDEF
A1804588  F8DF 7060		ldr r7, [pc, #+96] ; 0x1000052C
A180458C  6838     		ldr r0, [r7]

#24			SUB		timStart
(*) UDINT
A180458E  6837     		ldr r7, [r6]
A1804590  1BC0     		sub r0, r0, r7

#25			ST		ET
(*) UDINT
A1804592  F8DF 7054		ldr r7, [pc, #+84] ; 0x10
A1804596  51F0     		str r0, [r6, +r7]

#26			GE		PT
(*) UDINT
A1804598  F8DF 7044		ldr r7, [pc, #+68] ; 0x8
A180459C  59F7     		ldr r7, [r6, +r7]
A180459E  42B8     		cmp r0, r7
A18045A0  BF38 2000		lomov r0, #0
A18045A4  BF28 2001		hsmov r0, #1

#27			ST		Q
(*) BOOL
A18045A8  F8DF 7038		ldr r7, [pc, #+56] ; 0xC
A18045AC  55F0     		strb r0, [r6, +r7]

#28			RETCN
#29		
(-) BOOL
A18045AE  2800     		cmp r0, #0
A18045B0  D011     		beq #34 ; 0xA18045D6


#30			(*	Limit actual time value *)
#31			LD		PT
(*) UNDEF
A18045B4  F8DF 7028		ldr r7, [pc, #+40] ; 0x8
A18045B8  59F0     		ldr r0, [r6, +r7]

#32			ST		ET
(*) UDINT
A18045BA  F8DF 702C		ldr r7, [pc, #+44] ; 0x10
A18045BE  51F0     		str r0, [r6, +r7]

#33			RET
#34		
(-) UDINT
A18045C0  E009     		b #18 ; 0xA18045D6


#35		lReset:
#36		
#37			(*	Reset status *)
#38			LD		0
(-) UNDEF
A18045C4  2000     		mov r0, #0 ; 0

#39			ST		ET
(*) USINT
A18045C6  F8DF 7020		ldr r7, [pc, #+32] ; 0x10
A18045CA  51F0     		str r0, [r6, +r7]

#40			ST		timStart
(-) UDINT
A18045CC  6030     		str r0, [r6]

#41			LD		FALSE
(-) UNDEF
A18045CE  2000     		mov r0, #0 ; 0

#42			ST		Q
(*) BOOL
A18045D0  F8DF 7010		ldr r7, [pc, #+16] ; 0xC
A18045D4  55F0     		strb r0, [r6, +r7]

A18045D6  E8BD 4040		ldmia sp!, { r6, lr }

A18045DA  4770     		bx lr

A18045DC  00000004		; 0x00000004
A18045E0  00000008		; 0x00000008
A18045E4  0000000C		; 0x0000000C
A18045E8  00000010		; 0x00000010
A18045EC  FFFFFFFF		; 0x1000052C


Frame allocation (hex):

	0000       : VAR timStart
	0004 bit  0: VAR IN
	0008       : VAR PT
	000C bit  0: VAR Q
	0010       : VAR ET

END_FUNCTION_BLOCK
**************************************************
	List program: main
**************************************************

PROGRAM main

END_PROGRAM

A18045F0  B082     		sub sp, sp, #8
A18045F2  F8CD E000		str lr, [sp]
A18045F6  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

#0		{SRC:main}
#1		(*$WAITSWITCH$*)
#2		
#3			(* cnt := cnt + 1; *)
#4			LD		cnt	{LNXT:2|2|-1}
(*) UNDEF
A18045FA  F8DF 701C		ldr r7, [pc, #+28] ; 0xA1A000DC
A18045FE  F9B7 0000		ldrsh r0, [r7]

#5			ADD		1	{LNXT:2|2|-1}
(-) INT
A1804602  1C40     		add r0, r0, #1

#6			ST		cnt	{LNXT:2|2|-1}
(*) INT
A1804604  F8DF 7010		ldr r7, [pc, #+16] ; 0xA1A000DC
A1804608  8038     		strh r0, [r7]

A180460A  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
A180460E  F8DD E000		ldr lr, [sp]
A1804612  B002     		add sp, sp, #8

A1804614  4770     		bx lr

A1804618  A1A000DC		; 0xA1A000DC

END_PROGRAM


**************************************************
	Target variable image generation
**************************************************


*** INPUT:
A180461C  B082     		sub sp, sp, #8
A180461E  F8CD E000		str lr, [sp]
A1804622  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

A1804626  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
A180462A  F8DD E000		ldr lr, [sp]
A180462E  B002     		add sp, sp, #8

A1804630  4770     		bx lr


*** OUTPUT:
A1804632  B082     		sub sp, sp, #8
A1804634  F8CD E000		str lr, [sp]
A1804638  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

A180463C  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
A1804640  F8DD E000		ldr lr, [sp]
A1804644  B002     		add sp, sp, #8

A1804646  4770     		bx lr



**************************************************
	Task Background init code
**************************************************

A1804648  B082     		sub sp, sp, #8
A180464A  F8CD E000		str lr, [sp]
A180464E  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

A1804652  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
A1804656  F8DD E000		ldr lr, [sp]
A180465A  B002     		add sp, sp, #8

A180465C  4770     		bx lr

**************************************************
	List program: DownloadData
**************************************************

PROGRAM DownloadData

END_PROGRAM

A1804670  B082     		sub sp, sp, #8
A1804672  F8CD E000		str lr, [sp]
A1804676  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

#0		{SRC:DownloadData}
#1		(*$WAITSWITCH$*)
#2		
#3			(* level_min:=ep_level_min; *)
#4			MOVE		ep_level_min,level_min	{LNXT:1|2|-1}
(*) UDINT
A180467A  F8DF 705C		ldr r7, [pc, #+92] ; 0xA00017F6
A180467E  F9B7 0000		ldrsh r0, [r7]
A1804682  F8DF 705C		ldr r7, [pc, #+92] ; 0xA0003F04
A1804686  8038     		strh r0, [r7]

#5		
#6			(* Level_1:=ep_level_1; *)
#7			MOVE		ep_level_1,Level_1	{LNXT:2|3|-1}
(*) INT
A1804688  F8DF 7040		ldr r7, [pc, #+64] ; 0xA00017F0
A180468C  F9B7 0000		ldrsh r0, [r7]
A1804690  F8DF 7050		ldr r7, [pc, #+80] ; 0xA0003F06
A1804694  8038     		strh r0, [r7]

#8		
#9			(* Level_2:=ep_level_2; *)
#10			MOVE		ep_level_2,Level_2	{LNXT:3|4|-1}
(*) INT
A1804696  F8DF 7038		ldr r7, [pc, #+56] ; 0xA00017F2
A180469A  F9B7 0000		ldrsh r0, [r7]
A180469E  F8DF 7048		ldr r7, [pc, #+72] ; 0xA0003F08
A18046A2  8038     		strh r0, [r7]

#11		
#12			(* Level_3:=ep_level_3; *)
#13			MOVE		ep_level_3,Level_3	{LNXT:4|5|-1}
(*) INT
A18046A4  F8DF 702C		ldr r7, [pc, #+44] ; 0xA00017F4
A18046A8  F9B7 0000		ldrsh r0, [r7]
A18046AC  F8DF 703C		ldr r7, [pc, #+60] ; 0xA0003F0A
A18046B0  8038     		strh r0, [r7]

#14		
#15			(* Rotation:=ep_rotation; *)
#16			MOVE		ep_rotation,Rotation	{LNXT:5|1|-1}
(*) INT
A18046B2  F8DF 7028		ldr r7, [pc, #+40] ; 0xA00017F8
A18046B6  7838     		ldrb r0, [r7]
A18046B8  F8DF 7034		ldr r7, [pc, #+52] ; 0xA0003F10
A18046BC  7038     		strb r0, [r7]

A18046BE  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
A18046C2  F8DD E000		ldr lr, [sp]
A18046C6  B002     		add sp, sp, #8

A18046C8  4770     		bx lr

A18046CC  FFFFFFFF		; 0xA00017F0
A18046D0  FFFFFFFF		; 0xA00017F2
A18046D4  FFFFFFFF		; 0xA00017F4
A18046D8  FFFFFFFF		; 0xA00017F6
A18046DC  FFFFFFFF		; 0xA00017F8
A18046E0  FFFFFFFF		; 0xA0003F04
A18046E4  FFFFFFFF		; 0xA0003F06
A18046E8  FFFFFFFF		; 0xA0003F08
A18046EC  FFFFFFFF		; 0xA0003F0A
A18046F0  FFFFFFFF		; 0xA0003F10

END_PROGRAM


**************************************************
	Target variable image generation
**************************************************


*** INPUT:
A18046F4  4770     		bx lr


*** OUTPUT:
A18046F6  4770     		bx lr



**************************************************
	Task Boot init code
**************************************************

A18046F8  B082     		sub sp, sp, #8
A18046FA  F8CD E000		str lr, [sp]
A18046FE  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

A1804702  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
A1804706  F8DD E000		ldr lr, [sp]
A180470A  B002     		add sp, sp, #8

A180470C  4770     		bx lr

**************************************************
	List program: ParCheck
**************************************************

PROGRAM ParCheck

END_PROGRAM

A1804720  B082     		sub sp, sp, #8
A1804722  F8CD E000		str lr, [sp]
A1804726  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

#0		{SRC:ParCheck}
#1		(*$WAITSWITCH$*)
#2		
#3		
#4			(* IF Par_POLI AND 16#fc00) <> 2048 *)
#5			LD		Par_POLI	{LNXT:2|-1|-1}
(*) UNDEF
A180472A  F8DF 7034		ldr r7, [pc, #+52] ; 0x10000182
A180472E  8838     		ldrh r0, [r7]

#6			AND		16#fc00	{LNXT:2|-1|-1}
(*) UINT
A1804730  F44F 477C		mov r7, #64512 ; 64512
A1804734  4038     		and r0, r0, r7

#7			NE		2048	{LNXT:2|-1|-1}
(*) UINT
A1804736  F44F 6700		mov r7, #2048 ; 2048
A180473A  42B8     		cmp r0, r7
A180473C  BF08 2000		eqmov r0, #0
A1804740  BF18 2001		nemov r0, #1

#8			JMPCN	$label0	{LNXT:2|3|2}
(-) BOOL
A1804744  2800     		cmp r0, #0
A1804746  D005     		beq #10 ; 0xA1804754


#9		
#10			(* THEN *)
#11		
#12				(* WHILE TRUE *)
#13		$label1:
#14				LD		TRUE	{LNXT:3|-1|-1}
(-) UNDEF
A180474A  2001     		mov r0, #1 ; 1

#15				JMPCN		$label2	{LNXT:3|2|2}
(-) BOOL
A180474C  2800     		cmp r0, #0
A180474E  D001     		beq #2 ; 0xA1804754


#16		
#17				(* DO *)
#18					JMP		$label1	{LNXT:3|2|2}
(-) BOOL
A1804752  E7FA     		b #-12 ; 0xA180474A

A1804754  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
A1804758  F8DD E000		ldr lr, [sp]
A180475C  B002     		add sp, sp, #8

A180475E  4770     		bx lr

A1804760  FFFFFFFF		; 0x10000182

END_PROGRAM


**************************************************
	Target variable image generation
**************************************************


*** INPUT:
A1804764  4770     		bx lr


*** OUTPUT:
A1804766  4770     		bx lr



**************************************************
	Task Init init code
**************************************************

A1804768  B082     		sub sp, sp, #8
A180476A  F8CD E000		str lr, [sp]
A180476E  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

A1804772  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
A1804776  F8DD E000		ldr lr, [sp]
A180477A  B002     		add sp, sp, #8

A180477C  4770     		bx lr

**************************************************
	List program: InitParDB
**************************************************

PROGRAM InitParDB

        VAR
warningsKiller : USINT;
dummyCrc32 : UDINT;
	END_VAR

END_PROGRAM

A1804790  B082     		sub sp, sp, #8
A1804792  F8CD E000		str lr, [sp]
A1804796  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

#0		{SRC:InitParDB}
#1		(*$WAITSWITCH$*)
#2		
#3			(* dummyCrc32 := 3717425634; *)
#4			MOVE		3717425634,dummyCrc32	{LNXT:3|5|-1}
(*) UDINT
A180479A  F8DF 7040		ldr r7, [pc, #+64] ; 0xDD9369E2
A180479E  4638     		mov r0, r7
A18047A0  F8DF 7030		ldr r7, [pc, #+48] ; 0xA1A0000C
A18047A4  6038     		str r0, [r7]

#5		
#6			(* warningsKiller := sysDBase_SetExtTable( ADR( $$ParDB ), $$ParDBLength ); *)
#7			ADR		$$ParDB	{LNXT:5|3|-1}
(*) UDINT
A18047A6  F8DF 0028		ldr r0, [pc, #+40] ; 0xA1800100

#8			sysDBase_SetExtTable		$$ParDBLength	{LNXT:5|3|-1}
(*) @USINT
A18047AA  4607     		mov r7, r0
A18047AC  4638     		mov r0, r7
A18047AE  271A     		mov r7, #26 ; 26
A18047B0  4639     		mov r1, r7
A18047B2  F8DF 402C		ldr r4, [pc, #+44] ; 0x139A5
A18047B6  F044 0401		orr r4, r4, #1
A18047BA  47A0     		blx r4

#9			ST		warningsKiller	{LNXT:5|3|-1}
(*) USINT
A18047BC  F8DF 7018		ldr r7, [pc, #+24] ; 0xA1A00010
A18047C0  7038     		strb r0, [r7]

A18047C2  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
A18047C6  F8DD E000		ldr lr, [sp]
A18047CA  B002     		add sp, sp, #8

A18047CC  4770     		bx lr

A18047D0  A1800100		; 0xA1800100
A18047D4  A1A0000C		; 0xA1A0000C
A18047D8  A1A00010		; 0xA1A00010
A18047DC  DD9369E2		; 0xDD9369E2
A18047E0  FFFFFFFF		; 0x000139A5

END_PROGRAM


**************************************************
	Target variable image generation
**************************************************


*** INPUT:
A18047E4  4770     		bx lr


*** OUTPUT:
A18047E6  4770     		bx lr



**************************************************
	Task Serv init code
**************************************************

A18047E8  B082     		sub sp, sp, #8
A18047EA  F8CD E000		str lr, [sp]
A18047EE  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

A18047F2  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
A18047F6  F8DD E000		ldr lr, [sp]
A18047FA  B002     		add sp, sp, #8

A18047FC  4770     		bx lr

**************************************************
	List program: LVL
**************************************************

PROGRAM LVL

        VAR
Rotationnumber : INT := 1;	{ DE:"Номер в ротації" }
FastRunMode : BOOL := FALSE;	{ DE:"Локальна змінна Прогонка 0-вимкнена" }
RunTime_START : TIME;	{ DE:"Час роботи двигуна A" }
CurrentMotor : INT := 1;
ErrorCode : INT := 0;
PumpIntervalTimer_1 : TON;	{ DE:"інтервал для запуску прогонки" }
PumpRunTimer_1 : TON;	{ DE:"Час прогонки" }
TestRunActive_1 : BOOL := FALSE;	{ DE:"Тригер готовності прогонки" }
TestRunRunning_1 : BOOL := FALSE;	{ DE:"Прогонка виконується" }
PumpIntervalTimer_2 : TON;	{ DE:"інтервал для запуску прогонки" }
PumpRunTimer_2 : TON;	{ DE:"Час прогонки" }
TestRunActive_2 : BOOL := FALSE;	{ DE:"Тригер готовності прогонки" }
TestRunRunning_2 : BOOL := FALSE;	{ DE:"Прогонка виконується" }
PumpIntervalTimer_3 : TON;	{ DE:"інтервал для запуску прогонки" }
PumpRunTimer_3 : TON;	{ DE:"Час прогонки" }
TestRunActive_3 : BOOL := FALSE;	{ DE:"Тригер готовності прогонки" }
TestRunRunning_3 : BOOL := FALSE;	{ DE:"Прогонка виконується" }
CurrentPump : INT := 1;
ErrorTimer_A_Start : TON;
ErrorTimer_B_Start : TON;
ErrorTimer_C_Start : TON;
TM_WAIT_Start : INT := 2000;
	END_VAR

END_PROGRAM

A1804810  B082     		sub sp, sp, #8
A1804812  F8CD E000		str lr, [sp]
A1804816  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

#0		{SRC:LVL}
#1		(*$WAITSWITCH$*)
#2		
#3			(* o_tank_lvl:= Tank_Level; *)
#4			MOVE		Tank_Level,o_tank_lvl	{LNXT:5|7|-1}
(*) UDINT
A180481A  F8DF 7870		ldr r7, [pc, #+2160] ; 0xA1A00012
A180481E  F9B7 0000		ldrsh r0, [r7]
A1804822  F8DF 78C4		ldr r7, [pc, #+2244] ; 0x10000436
A1804826  8038     		strh r0, [r7]

#5		
#6		
#7			(* IF level_min <> ep_level_min *)
#8			LD		level_min	{LNXT:7|-1|-1}
(*) UNDEF
A1804828  F8DF 7800		ldr r7, [pc, #+2048] ; 0xA0003F04
A180482C  F9B7 0000		ldrsh r0, [r7]

#9			NE		ep_level_min	{LNXT:7|-1|-1}
(*) INT
A1804830  F8DF 77F0		ldr r7, [pc, #+2032] ; 0xA00017F6
A1804834  F9B7 7000		ldrsh r7, [r7]
A1804838  42B8     		cmp r0, r7
A180483A  BF08 2000		eqmov r0, #0
A180483E  BF18 2001		nemov r0, #1

#10			JMPCN	$label0	{LNXT:7|8|11}
(-) BOOL
A1804842  2800     		cmp r0, #0
A1804844  D007     		beq #14 ; 0xA1804856


#11		
#12			(* THEN *)
#13		
#14				(* level_min := ep_level_min; *)
#15				MOVE		ep_level_min,level_min	{LNXT:8|11|-1}
(*) BOOL
A1804848  F8DF 77D8		ldr r7, [pc, #+2008] ; 0xA00017F6
A180484C  F9B7 0000		ldrsh r0, [r7]
A1804850  F8DF 77D8		ldr r7, [pc, #+2008] ; 0xA0003F04
A1804854  8038     		strh r0, [r7]

#16		
#17		$label0:
#18			(* END_IF *)
#19		
#20		
#21			(* IF Level_1 <> ep_level_1 *)
#22			LD		Level_1	{LNXT:11|-1|-1}
(*) UNDEF
A1804856  F8DF 77D8		ldr r7, [pc, #+2008] ; 0xA0003F06
A180485A  F9B7 0000		ldrsh r0, [r7]

#23			NE		ep_level_1	{LNXT:11|-1|-1}
(*) INT
A180485E  F8DF 77B8		ldr r7, [pc, #+1976] ; 0xA00017F0
A1804862  F9B7 7000		ldrsh r7, [r7]
A1804866  42B8     		cmp r0, r7
A1804868  BF08 2000		eqmov r0, #0
A180486C  BF18 2001		nemov r0, #1

#24			JMPCN	$label1	{LNXT:11|12|15}
(-) BOOL
A1804870  2800     		cmp r0, #0
A1804872  D007     		beq #14 ; 0xA1804884


#25		
#26			(* THEN *)
#27		
#28				(* Level_1 := ep_level_1; *)
#29				MOVE		ep_level_1,Level_1	{LNXT:12|15|-1}
(*) BOOL
A1804876  F8DF 77A0		ldr r7, [pc, #+1952] ; 0xA00017F0
A180487A  F9B7 0000		ldrsh r0, [r7]
A180487E  F8DF 77B0		ldr r7, [pc, #+1968] ; 0xA0003F06
A1804882  8038     		strh r0, [r7]

#30		
#31		$label1:
#32			(* END_IF *)
#33		
#34		
#35			(* IF Level_2 <> ep_level_2 *)
#36			LD		Level_2	{LNXT:15|-1|-1}
(*) UNDEF
A1804884  F8DF 77AC		ldr r7, [pc, #+1964] ; 0xA0003F08
A1804888  F9B7 0000		ldrsh r0, [r7]

#37			NE		ep_level_2	{LNXT:15|-1|-1}
(*) INT
A180488C  F8DF 778C		ldr r7, [pc, #+1932] ; 0xA00017F2
A1804890  F9B7 7000		ldrsh r7, [r7]
A1804894  42B8     		cmp r0, r7
A1804896  BF08 2000		eqmov r0, #0
A180489A  BF18 2001		nemov r0, #1

#38			JMPCN	$label2	{LNXT:15|16|19}
(-) BOOL
A180489E  2800     		cmp r0, #0
A18048A0  D007     		beq #14 ; 0xA18048B2


#39		
#40			(* THEN *)
#41		
#42				(* Level_2 := ep_level_2; *)
#43				MOVE		ep_level_2,Level_2	{LNXT:16|19|-1}
(*) BOOL
A18048A4  F8DF 7774		ldr r7, [pc, #+1908] ; 0xA00017F2
A18048A8  F9B7 0000		ldrsh r0, [r7]
A18048AC  F8DF 7784		ldr r7, [pc, #+1924] ; 0xA0003F08
A18048B0  8038     		strh r0, [r7]

#44		
#45		$label2:
#46			(* END_IF *)
#47		
#48		
#49			(* IF Level_3 <> ep_level_3 *)
#50			LD		Level_3	{LNXT:19|-1|-1}
(*) UNDEF
A18048B2  F8DF 7784		ldr r7, [pc, #+1924] ; 0xA0003F0A
A18048B6  F9B7 0000		ldrsh r0, [r7]

#51			NE		ep_level_3	{LNXT:19|-1|-1}
(*) INT
A18048BA  F8DF 7764		ldr r7, [pc, #+1892] ; 0xA00017F4
A18048BE  F9B7 7000		ldrsh r7, [r7]
A18048C2  42B8     		cmp r0, r7
A18048C4  BF08 2000		eqmov r0, #0
A18048C8  BF18 2001		nemov r0, #1

#52			JMPCN	$label3	{LNXT:19|20|23}
(-) BOOL
A18048CC  2800     		cmp r0, #0
A18048CE  D007     		beq #14 ; 0xA18048E0


#53		
#54			(* THEN *)
#55		
#56				(* Level_3 := ep_level_3; *)
#57				MOVE		ep_level_3,Level_3	{LNXT:20|23|-1}
(*) BOOL
A18048D2  F8DF 774C		ldr r7, [pc, #+1868] ; 0xA00017F4
A18048D6  F9B7 0000		ldrsh r0, [r7]
A18048DA  F8DF 775C		ldr r7, [pc, #+1884] ; 0xA0003F0A
A18048DE  8038     		strh r0, [r7]

#58		
#59		$label3:
#60			(* END_IF *)
#61		
#62		
#63			(* IF Rotation <> ep_rotation *)
#64			LD		Rotation	{LNXT:23|-1|-1}
(*) UNDEF
A18048E0  F8DF 775C		ldr r7, [pc, #+1884] ; 0xA0003F10
A18048E4  7838     		ldrb r0, [r7]

#65			NE		ep_rotation	{LNXT:23|-1|-1}
(*) BOOL
A18048E6  F8DF 7740		ldr r7, [pc, #+1856] ; 0xA00017F8
A18048EA  783F     		ldrb r7, [r7]
A18048EC  42B8     		cmp r0, r7
A18048EE  BF08 2000		eqmov r0, #0
A18048F2  BF18 2001		nemov r0, #1

#66			JMPCN	$label4	{LNXT:23|24|27}
(-) BOOL
A18048F6  2800     		cmp r0, #0
A18048F8  D006     		beq #12 ; 0xA1804908


#67		
#68			(* THEN *)
#69		
#70				(* Rotation := ep_rotation; *)
#71				MOVE		ep_rotation,Rotation	{LNXT:24|27|-1}
(*) BOOL
A18048FC  F8DF 7728		ldr r7, [pc, #+1832] ; 0xA00017F8
A1804900  7838     		ldrb r0, [r7]
A1804902  F8DF 773C		ldr r7, [pc, #+1852] ; 0xA0003F10
A1804906  7038     		strb r0, [r7]

#72		
#73		$label4:
#74			(* END_IF *)
#75		
#76		
#77			(* IF Rotation *)
#78			LD		Rotation	{LNXT:27|-1|-1}
(*) UNDEF
A1804908  F8DF 7734		ldr r7, [pc, #+1844] ; 0xA0003F10
A180490C  7838     		ldrb r0, [r7]

#79			JMPCN	$label5	{LNXT:27|28|30}
(-) BOOL
A180490E  2800     		cmp r0, #0
A1804910  D017     		beq #46 ; 0xA1804942


#80		
#81			(* THEN *)
#82		
#83				(* rotation_state := 'On'; *)
#84				MOVE		'On',rotation_state	{LNXT:28|33|-1}
(*) BOOL
A1804914  F8DF 7750		ldr r7, [pc, #+1872] ; 0xA18044C0
A1804918  4638     		mov r0, r7
A180491A  B082     		sub sp, sp, #8
A180491C  F8CD 0000		str r0, [sp]
A1804920  E92D 0006		stmdb sp!, { r1, r2 }
A1804924  2205     		mov r2, #5 ; 5
A1804926  F8DF 173C		ldr r1, [pc, #+1852] ; 0xA0003FBA
A180492A  F8DF 47B8		ldr r4, [pc, #+1976] ; 0x1133D
A180492E  F044 0401		orr r4, r4, #1
A1804932  47A0     		blx r4
A1804934  E8BD 0006		ldmia sp!, { r1, r2 }
A1804938  F8DD 0000		ldr r0, [sp]
A180493C  B002     		add sp, sp, #8

#85				JMP		$label6	{LNXT:27|28|30}
(-) STRING
A180493E  E015     		b #42 ; 0xA180496C


#86		$label5:
#87		
#88			(* ELSE *)
#89		
#90				(* rotation_state := 'Off'; *)
#91				MOVE		'Off',rotation_state	{LNXT:30|33|-1}
(*) STRING
A1804942  F8DF 7728		ldr r7, [pc, #+1832] ; 0xA18044C4
A1804946  4638     		mov r0, r7
A1804948  B082     		sub sp, sp, #8
A180494A  F8CD 0000		str r0, [sp]
A180494E  E92D 0006		stmdb sp!, { r1, r2 }
A1804952  2205     		mov r2, #5 ; 5
A1804954  F8DF 170C		ldr r1, [pc, #+1804] ; 0xA0003FBA
A1804958  F8DF 4788		ldr r4, [pc, #+1928] ; 0x1133D
A180495C  F044 0401		orr r4, r4, #1
A1804960  47A0     		blx r4
A1804962  E8BD 0006		ldmia sp!, { r1, r2 }
A1804966  F8DD 0000		ldr r0, [sp]
A180496A  B002     		add sp, sp, #8

#92		
#93		$label6:
#94			(* END_IF *)
#95		
#96		
#97			(* IF di_flooding *)
#98			LD		di_flooding	{LNXT:33|-1|-1}
(*) UNDEF
A180496C  F8DF 7718		ldr r7, [pc, #+1816] ; 0xA1A00011
A1804970  7838     		ldrb r0, [r7]

#99			JMPCN	$label7	{LNXT:33|34|36}
(-) BOOL
A1804972  2800     		cmp r0, #0
A1804974  D017     		beq #46 ; 0xA18049A6


#100		
#101			(* THEN *)
#102		
#103				(* flooding_state := 'Yes'; *)
#104				MOVE		'Yes',flooding_state	{LNXT:34|40|-1}
(*) BOOL
A1804978  F8DF 76F4		ldr r7, [pc, #+1780] ; 0xA18044CC
A180497C  4638     		mov r0, r7
A180497E  B082     		sub sp, sp, #8
A1804980  F8CD 0000		str r0, [sp]
A1804984  E92D 0006		stmdb sp!, { r1, r2 }
A1804988  2214     		mov r2, #20 ; 20
A180498A  F8DF 16D4		ldr r1, [pc, #+1748] ; 0xA0003FA4
A180498E  F8DF 4754		ldr r4, [pc, #+1876] ; 0x1133D
A1804992  F044 0401		orr r4, r4, #1
A1804996  47A0     		blx r4
A1804998  E8BD 0006		ldmia sp!, { r1, r2 }
A180499C  F8DD 0000		ldr r0, [sp]
A18049A0  B002     		add sp, sp, #8

#105				JMP		$label8	{LNXT:33|34|36}
(-) STRING
A18049A2  E015     		b #42 ; 0xA18049D0


#106		$label7:
#107		
#108			(* ELSE *)
#109		
#110				(* flooding_state := 'No'; *)
#111				MOVE		'No',flooding_state	{LNXT:36|40|-1}
(*) STRING
A18049A6  F8DF 76CC		ldr r7, [pc, #+1740] ; 0xA18044D4
A18049AA  4638     		mov r0, r7
A18049AC  B082     		sub sp, sp, #8
A18049AE  F8CD 0000		str r0, [sp]
A18049B2  E92D 0006		stmdb sp!, { r1, r2 }
A18049B6  2214     		mov r2, #20 ; 20
A18049B8  F8DF 16A4		ldr r1, [pc, #+1700] ; 0xA0003FA4
A18049BC  F8DF 4724		ldr r4, [pc, #+1828] ; 0x1133D
A18049C0  F044 0401		orr r4, r4, #1
A18049C4  47A0     		blx r4
A18049C6  E8BD 0006		ldmia sp!, { r1, r2 }
A18049CA  F8DD 0000		ldr r0, [sp]
A18049CE  B002     		add sp, sp, #8

#112		
#113		$label8:
#114			(* END_IF *)
#115		
#116			(* ErrorTimer_A_Start *)
#117			MOVE		Motor_A,ErrorTimer_A_Start.IN	{LNXT:40|-1|-1}
(*) STRING
A18049D0  F8DF 7718		ldr r7, [pc, #+1816] ; 0x100004AC
A18049D4  7838     		ldrb r0, [r7]
A18049D6  F8DF 76BC		ldr r7, [pc, #+1724] ; 0xA1A00018
A18049DA  7038     		strb r0, [r7]

#118			MOVE		TM_WAIT_Start,ErrorTimer_A_Start.PT	{LNXT:40|-1|-1}
(*) BOOL
A18049DC  F8DF 76C0		ldr r7, [pc, #+1728] ; 0xA1A00028
A18049E0  F9B7 0000		ldrsh r0, [r7]
A18049E4  F8DF 76B0		ldr r7, [pc, #+1712] ; 0xA1A0001C
A18049E8  6038     		str r0, [r7]

#119			CAL		ErrorTimer_A_Start	{LNXT:40|41|-1}
(*) UDINT
A18049EA  E92D 0021		stmdb sp!, { r0, r5 }
A18049EE  F8DF 56A0		ldr r5, [pc, #+1696] ; 0xA1A00014
A18049F2  F8DF 4690		ldr r4, [pc, #+1680] ; 0xA1804550
A18049F6  F044 0401		orr r4, r4, #1
A18049FA  47A0     		blx r4
A18049FC  E8BD 0021		ldmia sp!, { r0, r5 }

#120		
#121		
#122			(* IF ErrorTimer_A_Start.Q *)
#123			LD		ErrorTimer_A_Start.Q	{LNXT:41|-1|-1}
(*) UNDEF
A1804A00  F8DF 7698		ldr r7, [pc, #+1688] ; 0xA1A00020
A1804A04  7838     		ldrb r0, [r7]

#124			JMPCN	$label9	{LNXT:41|42|52}
(-) BOOL
A1804A06  2800     		cmp r0, #0
A1804A08  D032     		beq #100 ; 0xA1804A70


#125		
#126			(* THEN *)
#127		
#128		
#129				(* IF ALM_A or NOT Avto_A *)
#130				LD		Avto_A	{LNXT:42|-1|-1}
(*) UNDEF
A1804A0C  F8DF 7694		ldr r7, [pc, #+1684] ; 0xA1A0002A
A1804A10  7838     		ldrb r0, [r7]

#131				NOT	{LNXT:42|-1|-1}
(*) BOOL
A1804A12  2800     		cmp r0, #0
A1804A14  BF08 2001		eqmov r0, #1
A1804A18  BF18 2000		nemov r0, #0

#132				OR		ALM_A	{LNXT:42|-1|-1}
(*) BOOL
A1804A1C  F8DF 7688		ldr r7, [pc, #+1672] ; 0xA1A0002B
A1804A20  783F     		ldrb r7, [r7]
A1804A22  4338     		orr r0, r0, r7

#133				JMPCN	$label10	{LNXT:42|44|52}
(-) BOOL
A1804A24  2800     		cmp r0, #0
A1804A26  D023     		beq #70 ; 0xA1804A70


#134		
#135				(* THEN *)
#136		
#137		
#138					(* IF ALM_B and Avto_B *)
#139					LD		ALM_B	{LNXT:44|-1|-1}
(*) UNDEF
A1804A2A  F8DF 7680		ldr r7, [pc, #+1664] ; 0xA1A0002C
A1804A2E  7838     		ldrb r0, [r7]

#140					NOT	{LNXT:44|-1|-1}
(*) BOOL
A1804A30  2800     		cmp r0, #0
A1804A32  BF08 2001		eqmov r0, #1
A1804A36  BF18 2000		nemov r0, #0

#141					AND		Avto_B	{LNXT:44|-1|-1}
(*) BOOL
A1804A3A  F8DF 7674		ldr r7, [pc, #+1652] ; 0xA1A0002D
A1804A3E  783F     		ldrb r7, [r7]
A1804A40  4038     		and r0, r0, r7

#142					JMPCN	$label11	{LNXT:44|45|46}
(-) BOOL
A1804A42  2800     		cmp r0, #0
A1804A44  D006     		beq #12 ; 0xA1804A54


#143		
#144					(* THEN *)
#145		
#146						(* Priority := 1; *)
#147						MOVE		1,Priority	{LNXT:45|52|-1}
(*) BOOL
A1804A48  2001     		mov r0, #1 ; 1
A1804A4A  F8DF 75F0		ldr r7, [pc, #+1520] ; 0xA0003F0C
A1804A4E  8038     		strh r0, [r7]

#148						JMP		$label12	{LNXT:44|45|46}
(-) INT
A1804A50  E00E     		b #28 ; 0xA1804A70


#149		$label11:
#150		
#151					(* ELSIF ALM_C and Avto_C *)
#152					LD		ALM_C	{LNXT:46|-1|-1}
(*) UNDEF
A1804A54  F8DF 765C		ldr r7, [pc, #+1628] ; 0xA1A0002E
A1804A58  7838     		ldrb r0, [r7]

#153					AND		Avto_C	{LNXT:46|-1|-1}
(*) BOOL
A1804A5A  F8DF 765C		ldr r7, [pc, #+1628] ; 0xA1A0002F
A1804A5E  783F     		ldrb r7, [r7]
A1804A60  4038     		and r0, r0, r7

#154					JMPCN	$label12	{LNXT:46|47|52}
(-) BOOL
A1804A62  2800     		cmp r0, #0
A1804A64  D004     		beq #8 ; 0xA1804A70


#155		
#156					(* THEN *)
#157		
#158						(* Priority := 2; *)
#159						MOVE		2,Priority	{LNXT:47|52|-1}
(*) BOOL
A1804A68  2002     		mov r0, #2 ; 2
A1804A6A  F8DF 75D0		ldr r7, [pc, #+1488] ; 0xA0003F0C
A1804A6E  8038     		strh r0, [r7]

#160		
#161		$label12:
#162					(* END_IF *)
#163		
#164		$label10:
#165				(* END_IF *)
#166		
#167		$label9:
#168			(* END_IF *)
#169		
#170			(* ErrorTimer_B_Start *)
#171			MOVE		Motor_B,ErrorTimer_B_Start.IN	{LNXT:52|-1|-1}
(*) INT
A1804A70  F8DF 767C		ldr r7, [pc, #+1660] ; 0x100004AD
A1804A74  7838     		ldrb r0, [r7]
A1804A76  F8DF 7648		ldr r7, [pc, #+1608] ; 0xA1A00034
A1804A7A  7038     		strb r0, [r7]

#172			MOVE		TM_WAIT_Start,ErrorTimer_B_Start.PT	{LNXT:52|-1|-1}
(*) BOOL
A1804A7C  F8DF 7620		ldr r7, [pc, #+1568] ; 0xA1A00028
A1804A80  F9B7 0000		ldrsh r0, [r7]
A1804A84  F8DF 763C		ldr r7, [pc, #+1596] ; 0xA1A00038
A1804A88  6038     		str r0, [r7]

#173			CAL		ErrorTimer_B_Start	{LNXT:52|53|-1}
(*) UDINT
A1804A8A  E92D 0021		stmdb sp!, { r0, r5 }
A1804A8E  F8DF 562C		ldr r5, [pc, #+1580] ; 0xA1A00030
A1804A92  F8DF 45F0		ldr r4, [pc, #+1520] ; 0xA1804550
A1804A96  F044 0401		orr r4, r4, #1
A1804A9A  47A0     		blx r4
A1804A9C  E8BD 0021		ldmia sp!, { r0, r5 }

#174		
#175		
#176			(* IF ErrorTimer_B_Start.Q *)
#177			LD		ErrorTimer_B_Start.Q	{LNXT:53|-1|-1}
(*) UNDEF
A1804AA0  F8DF 7624		ldr r7, [pc, #+1572] ; 0xA1A0003C
A1804AA4  7838     		ldrb r0, [r7]

#178			JMPCN	$label13	{LNXT:53|54|64}
(-) BOOL
A1804AA6  2800     		cmp r0, #0
A1804AA8  D032     		beq #100 ; 0xA1804B10


#179		
#180			(* THEN *)
#181		
#182		
#183				(* IF ALM_B or NOT Avto_B *)
#184				LD		Avto_B	{LNXT:54|-1|-1}
(*) UNDEF
A1804AAC  F8DF 7600		ldr r7, [pc, #+1536] ; 0xA1A0002D
A1804AB0  7838     		ldrb r0, [r7]

#185				NOT	{LNXT:54|-1|-1}
(*) BOOL
A1804AB2  2800     		cmp r0, #0
A1804AB4  BF08 2001		eqmov r0, #1
A1804AB8  BF18 2000		nemov r0, #0

#186				OR		ALM_B	{LNXT:54|-1|-1}
(*) BOOL
A1804ABC  F8DF 75EC		ldr r7, [pc, #+1516] ; 0xA1A0002C
A1804AC0  783F     		ldrb r7, [r7]
A1804AC2  4338     		orr r0, r0, r7

#187				JMPCN	$label14	{LNXT:54|56|64}
(-) BOOL
A1804AC4  2800     		cmp r0, #0
A1804AC6  D023     		beq #70 ; 0xA1804B10


#188		
#189				(* THEN *)
#190		
#191		
#192					(* IF ALM_A and Avto_A *)
#193					LD		ALM_A	{LNXT:56|-1|-1}
(*) UNDEF
A1804ACA  F8DF 75DC		ldr r7, [pc, #+1500] ; 0xA1A0002B
A1804ACE  7838     		ldrb r0, [r7]

#194					NOT	{LNXT:56|-1|-1}
(*) BOOL
A1804AD0  2800     		cmp r0, #0
A1804AD2  BF08 2001		eqmov r0, #1
A1804AD6  BF18 2000		nemov r0, #0

#195					AND		Avto_A	{LNXT:56|-1|-1}
(*) BOOL
A1804ADA  F8DF 75C8		ldr r7, [pc, #+1480] ; 0xA1A0002A
A1804ADE  783F     		ldrb r7, [r7]
A1804AE0  4038     		and r0, r0, r7

#196					JMPCN	$label15	{LNXT:56|57|58}
(-) BOOL
A1804AE2  2800     		cmp r0, #0
A1804AE4  D006     		beq #12 ; 0xA1804AF4


#197		
#198					(* THEN *)
#199		
#200						(* Priority := 0; *)
#201						MOVE		0,Priority	{LNXT:57|64|-1}
(*) BOOL
A1804AE8  2000     		mov r0, #0 ; 0
A1804AEA  F8DF 7550		ldr r7, [pc, #+1360] ; 0xA0003F0C
A1804AEE  8038     		strh r0, [r7]

#202						JMP		$label16	{LNXT:56|57|58}
(-) INT
A1804AF0  E00E     		b #28 ; 0xA1804B10


#203		$label15:
#204		
#205					(* ELSIF ALM_C and Avto_C *)
#206					LD		ALM_C	{LNXT:58|-1|-1}
(*) UNDEF
A1804AF4  F8DF 75BC		ldr r7, [pc, #+1468] ; 0xA1A0002E
A1804AF8  7838     		ldrb r0, [r7]

#207					AND		Avto_C	{LNXT:58|-1|-1}
(*) BOOL
A1804AFA  F8DF 75BC		ldr r7, [pc, #+1468] ; 0xA1A0002F
A1804AFE  783F     		ldrb r7, [r7]
A1804B00  4038     		and r0, r0, r7

#208					JMPCN	$label16	{LNXT:58|59|64}
(-) BOOL
A1804B02  2800     		cmp r0, #0
A1804B04  D004     		beq #8 ; 0xA1804B10


#209		
#210					(* THEN *)
#211		
#212						(* Priority := 2; *)
#213						MOVE		2,Priority	{LNXT:59|64|-1}
(*) BOOL
A1804B08  2002     		mov r0, #2 ; 2
A1804B0A  F8DF 7530		ldr r7, [pc, #+1328] ; 0xA0003F0C
A1804B0E  8038     		strh r0, [r7]

#214		
#215		$label16:
#216					(* END_IF *)
#217		
#218		$label14:
#219				(* END_IF *)
#220		
#221		$label13:
#222			(* END_IF *)
#223		
#224			(* ErrorTimer_C_Start *)
#225			MOVE		Motor_C,ErrorTimer_C_Start.IN	{LNXT:64|-1|-1}
(*) INT
A1804B10  F8DF 75E0		ldr r7, [pc, #+1504] ; 0x100004AE
A1804B14  7838     		ldrb r0, [r7]
A1804B16  F8DF 75B8		ldr r7, [pc, #+1464] ; 0xA1A00048
A1804B1A  7038     		strb r0, [r7]

#226			MOVE		TM_WAIT_Start,ErrorTimer_C_Start.PT	{LNXT:64|-1|-1}
(*) BOOL
A1804B1C  F8DF 7580		ldr r7, [pc, #+1408] ; 0xA1A00028
A1804B20  F9B7 0000		ldrsh r0, [r7]
A1804B24  F8DF 75AC		ldr r7, [pc, #+1452] ; 0xA1A0004C
A1804B28  6038     		str r0, [r7]

#227			CAL		ErrorTimer_C_Start	{LNXT:64|65|-1}
(*) UDINT
A1804B2A  E92D 0021		stmdb sp!, { r0, r5 }
A1804B2E  F8DF 559C		ldr r5, [pc, #+1436] ; 0xA1A00044
A1804B32  F8DF 4550		ldr r4, [pc, #+1360] ; 0xA1804550
A1804B36  F044 0401		orr r4, r4, #1
A1804B3A  47A0     		blx r4
A1804B3C  E8BD 0021		ldmia sp!, { r0, r5 }

#228		
#229		
#230			(* IF ErrorTimer_C_Start.Q *)
#231			LD		ErrorTimer_C_Start.Q	{LNXT:65|-1|-1}
(*) UNDEF
A1804B40  F8DF 7594		ldr r7, [pc, #+1428] ; 0xA1A00050
A1804B44  7838     		ldrb r0, [r7]

#232			JMPCN	$label17	{LNXT:65|66|83}
(-) BOOL
A1804B46  2800     		cmp r0, #0
A1804B48  D032     		beq #100 ; 0xA1804BB0


#233		
#234			(* THEN *)
#235		
#236		
#237				(* IF ALM_C or NOT Avto_C *)
#238				LD		Avto_C	{LNXT:66|-1|-1}
(*) UNDEF
A1804B4C  F8DF 7568		ldr r7, [pc, #+1384] ; 0xA1A0002F
A1804B50  7838     		ldrb r0, [r7]

#239				NOT	{LNXT:66|-1|-1}
(*) BOOL
A1804B52  2800     		cmp r0, #0
A1804B54  BF08 2001		eqmov r0, #1
A1804B58  BF18 2000		nemov r0, #0

#240				OR		ALM_C	{LNXT:66|-1|-1}
(*) BOOL
A1804B5C  F8DF 7554		ldr r7, [pc, #+1364] ; 0xA1A0002E
A1804B60  783F     		ldrb r7, [r7]
A1804B62  4338     		orr r0, r0, r7

#241				JMPCN	$label18	{LNXT:66|68|83}
(-) BOOL
A1804B64  2800     		cmp r0, #0
A1804B66  D023     		beq #70 ; 0xA1804BB0


#242		
#243				(* THEN *)
#244		
#245		
#246					(* IF ALM_A and Avto_A *)
#247					LD		ALM_A	{LNXT:68|-1|-1}
(*) UNDEF
A1804B6A  F8DF 753C		ldr r7, [pc, #+1340] ; 0xA1A0002B
A1804B6E  7838     		ldrb r0, [r7]

#248					NOT	{LNXT:68|-1|-1}
(*) BOOL
A1804B70  2800     		cmp r0, #0
A1804B72  BF08 2001		eqmov r0, #1
A1804B76  BF18 2000		nemov r0, #0

#249					AND		Avto_A	{LNXT:68|-1|-1}
(*) BOOL
A1804B7A  F8DF 7528		ldr r7, [pc, #+1320] ; 0xA1A0002A
A1804B7E  783F     		ldrb r7, [r7]
A1804B80  4038     		and r0, r0, r7

#250					JMPCN	$label19	{LNXT:68|69|70}
(-) BOOL
A1804B82  2800     		cmp r0, #0
A1804B84  D006     		beq #12 ; 0xA1804B94


#251		
#252					(* THEN *)
#253		
#254						(* Priority := 0; *)
#255						MOVE		0,Priority	{LNXT:69|83|-1}
(*) BOOL
A1804B88  2000     		mov r0, #0 ; 0
A1804B8A  F8DF 74B0		ldr r7, [pc, #+1200] ; 0xA0003F0C
A1804B8E  8038     		strh r0, [r7]

#256						JMP		$label20	{LNXT:68|69|70}
(-) INT
A1804B90  E00E     		b #28 ; 0xA1804BB0


#257		$label19:
#258		
#259					(* ELSIF ALM_B and Avto_B *)
#260					LD		ALM_B	{LNXT:70|-1|-1}
(*) UNDEF
A1804B94  F8DF 7514		ldr r7, [pc, #+1300] ; 0xA1A0002C
A1804B98  7838     		ldrb r0, [r7]

#261					AND		Avto_B	{LNXT:70|-1|-1}
(*) BOOL
A1804B9A  F8DF 7514		ldr r7, [pc, #+1300] ; 0xA1A0002D
A1804B9E  783F     		ldrb r7, [r7]
A1804BA0  4038     		and r0, r0, r7

#262					JMPCN	$label20	{LNXT:70|71|83}
(-) BOOL
A1804BA2  2800     		cmp r0, #0
A1804BA4  D004     		beq #8 ; 0xA1804BB0


#263		
#264					(* THEN *)
#265		
#266						(* Priority := 1; *)
#267						MOVE		1,Priority	{LNXT:71|83|-1}
(*) BOOL
A1804BA8  2001     		mov r0, #1 ; 1
A1804BAA  F8DF 7490		ldr r7, [pc, #+1168] ; 0xA0003F0C
A1804BAE  8038     		strh r0, [r7]

#268		
#269		$label20:
#270					(* END_IF *)
#271		
#272		$label18:
#273				(* END_IF *)
#274		
#275		$label17:
#276			(* END_IF *)
#277		
#278		
#279			(* IF FastRun <> FastRunMode *)
#280			LD		FastRun	{LNXT:83|-1|-1}
(*) UNDEF
A1804BB0  F8DF 7490		ldr r7, [pc, #+1168] ; 0xA0003F12
A1804BB4  7838     		ldrb r0, [r7]

#281			NE		FastRunMode	{LNXT:83|-1|-1}
(*) BOOL
A1804BB6  F8DF 7524		ldr r7, [pc, #+1316] ; 0xA1A00058
A1804BBA  783F     		ldrb r7, [r7]
A1804BBC  42B8     		cmp r0, r7
A1804BBE  BF08 2000		eqmov r0, #0
A1804BC2  BF18 2001		nemov r0, #1

#282			JMPCN	$label21	{LNXT:83|84|90}
(-) BOOL
A1804BC6  2800     		cmp r0, #0
A1804BC8  D006     		beq #12 ; 0xA1804BD8


#283		
#284			(* THEN *)
#285		
#286				(* FastRunMode := FastRun; *)
#287				MOVE		FastRun,FastRunMode	{LNXT:84|90|-1}
(*) BOOL
A1804BCC  F8DF 7474		ldr r7, [pc, #+1140] ; 0xA0003F12
A1804BD0  7838     		ldrb r0, [r7]
A1804BD2  F8DF 7508		ldr r7, [pc, #+1288] ; 0xA1A00058
A1804BD6  7038     		strb r0, [r7]

#288		
#289		$label21:
#290			(* END_IF *)
#291		
#292		
#293			(* IF Motor_A *)
#294			LD		Motor_A	{LNXT:90|-1|-1}
(*) UNDEF
A1804BD8  F8DF 7510		ldr r7, [pc, #+1296] ; 0x100004AC
A1804BDC  7838     		ldrb r0, [r7]

#295			JMPCN	$label22	{LNXT:90|91|93}
(-) BOOL
A1804BDE  2800     		cmp r0, #0
A1804BE0  D017     		beq #46 ; 0xA1804C12


#296		
#297			(* THEN *)
#298		
#299				(* state_motor_1 := 'On'; *)
#300				MOVE		'On',state_motor_1	{LNXT:91|96|-1}
(*) BOOL
A1804BE4  F8DF 7480		ldr r7, [pc, #+1152] ; 0xA18044C0
A1804BE8  4638     		mov r0, r7
A1804BEA  B082     		sub sp, sp, #8
A1804BEC  F8CD 0000		str r0, [sp]
A1804BF0  E92D 0006		stmdb sp!, { r1, r2 }
A1804BF4  221F     		mov r2, #31 ; 31
A1804BF6  F8DF 1450		ldr r1, [pc, #+1104] ; 0xA0003F20
A1804BFA  F8DF 44E8		ldr r4, [pc, #+1256] ; 0x1133D
A1804BFE  F044 0401		orr r4, r4, #1
A1804C02  47A0     		blx r4
A1804C04  E8BD 0006		ldmia sp!, { r1, r2 }
A1804C08  F8DD 0000		ldr r0, [sp]
A1804C0C  B002     		add sp, sp, #8

#301				JMP		$label23	{LNXT:90|91|93}
(-) STRING
A1804C0E  E015     		b #42 ; 0xA1804C3C


#302		$label22:
#303		
#304			(* ELSE *)
#305		
#306				(* state_motor_1 := 'Off'; *)
#307				MOVE		'Off',state_motor_1	{LNXT:93|96|-1}
(*) STRING
A1804C12  F8DF 7458		ldr r7, [pc, #+1112] ; 0xA18044C4
A1804C16  4638     		mov r0, r7
A1804C18  B082     		sub sp, sp, #8
A1804C1A  F8CD 0000		str r0, [sp]
A1804C1E  E92D 0006		stmdb sp!, { r1, r2 }
A1804C22  221F     		mov r2, #31 ; 31
A1804C24  F8DF 1420		ldr r1, [pc, #+1056] ; 0xA0003F20
A1804C28  F8DF 44B8		ldr r4, [pc, #+1208] ; 0x1133D
A1804C2C  F044 0401		orr r4, r4, #1
A1804C30  47A0     		blx r4
A1804C32  E8BD 0006		ldmia sp!, { r1, r2 }
A1804C36  F8DD 0000		ldr r0, [sp]
A1804C3A  B002     		add sp, sp, #8

#308		
#309		$label23:
#310			(* END_IF *)
#311		
#312		
#313			(* IF Motor_B *)
#314			LD		Motor_B	{LNXT:96|-1|-1}
(*) UNDEF
A1804C3C  F8DF 74B0		ldr r7, [pc, #+1200] ; 0x100004AD
A1804C40  7838     		ldrb r0, [r7]

#315			JMPCN	$label24	{LNXT:96|97|99}
(-) BOOL
A1804C42  2800     		cmp r0, #0
A1804C44  D017     		beq #46 ; 0xA1804C76


#316		
#317			(* THEN *)
#318		
#319				(* state_motor_2 := 'On'; *)
#320				MOVE		'On',state_motor_2	{LNXT:97|102|-1}
(*) BOOL
A1804C48  F8DF 741C		ldr r7, [pc, #+1052] ; 0xA18044C0
A1804C4C  4638     		mov r0, r7
A1804C4E  B082     		sub sp, sp, #8
A1804C50  F8CD 0000		str r0, [sp]
A1804C54  E92D 0006		stmdb sp!, { r1, r2 }
A1804C58  221F     		mov r2, #31 ; 31
A1804C5A  F8DF 13F0		ldr r1, [pc, #+1008] ; 0xA0003F40
A1804C5E  F8DF 4484		ldr r4, [pc, #+1156] ; 0x1133D
A1804C62  F044 0401		orr r4, r4, #1
A1804C66  47A0     		blx r4
A1804C68  E8BD 0006		ldmia sp!, { r1, r2 }
A1804C6C  F8DD 0000		ldr r0, [sp]
A1804C70  B002     		add sp, sp, #8

#321				JMP		$label25	{LNXT:96|97|99}
(-) STRING
A1804C72  E015     		b #42 ; 0xA1804CA0


#322		$label24:
#323		
#324			(* ELSE *)
#325		
#326				(* state_motor_2 := 'Off'; *)
#327				MOVE		'Off',state_motor_2	{LNXT:99|102|-1}
(*) STRING
A1804C76  F8DF 73F4		ldr r7, [pc, #+1012] ; 0xA18044C4
A1804C7A  4638     		mov r0, r7
A1804C7C  B082     		sub sp, sp, #8
A1804C7E  F8CD 0000		str r0, [sp]
A1804C82  E92D 0006		stmdb sp!, { r1, r2 }
A1804C86  221F     		mov r2, #31 ; 31
A1804C88  F8DF 13C0		ldr r1, [pc, #+960] ; 0xA0003F40
A1804C8C  F8DF 4454		ldr r4, [pc, #+1108] ; 0x1133D
A1804C90  F044 0401		orr r4, r4, #1
A1804C94  47A0     		blx r4
A1804C96  E8BD 0006		ldmia sp!, { r1, r2 }
A1804C9A  F8DD 0000		ldr r0, [sp]
A1804C9E  B002     		add sp, sp, #8

#328		
#329		$label25:
#330			(* END_IF *)
#331		
#332		
#333			(* IF Motor_C *)
#334			LD		Motor_C	{LNXT:102|-1|-1}
(*) UNDEF
A1804CA0  F8DF 7450		ldr r7, [pc, #+1104] ; 0x100004AE
A1804CA4  7838     		ldrb r0, [r7]

#335			JMPCN	$label26	{LNXT:102|103|105}
(-) BOOL
A1804CA6  2800     		cmp r0, #0
A1804CA8  D017     		beq #46 ; 0xA1804CDA


#336		
#337			(* THEN *)
#338		
#339				(* state_motor_3 := 'On'; *)
#340				MOVE		'On',state_motor_3	{LNXT:103|109|-1}
(*) BOOL
A1804CAC  F8DF 73B8		ldr r7, [pc, #+952] ; 0xA18044C0
A1804CB0  4638     		mov r0, r7
A1804CB2  B082     		sub sp, sp, #8
A1804CB4  F8CD 0000		str r0, [sp]
A1804CB8  E92D 0006		stmdb sp!, { r1, r2 }
A1804CBC  221F     		mov r2, #31 ; 31
A1804CBE  F8DF 1390		ldr r1, [pc, #+912] ; 0xA0003F60
A1804CC2  F8DF 4420		ldr r4, [pc, #+1056] ; 0x1133D
A1804CC6  F044 0401		orr r4, r4, #1
A1804CCA  47A0     		blx r4
A1804CCC  E8BD 0006		ldmia sp!, { r1, r2 }
A1804CD0  F8DD 0000		ldr r0, [sp]
A1804CD4  B002     		add sp, sp, #8

#341				JMP		$label27	{LNXT:102|103|105}
(-) STRING
A1804CD6  E015     		b #42 ; 0xA1804D04


#342		$label26:
#343		
#344			(* ELSE *)
#345		
#346				(* state_motor_3 := 'Off'; *)
#347				MOVE		'Off',state_motor_3	{LNXT:105|109|-1}
(*) STRING
A1804CDA  F8DF 7390		ldr r7, [pc, #+912] ; 0xA18044C4
A1804CDE  4638     		mov r0, r7
A1804CE0  B082     		sub sp, sp, #8
A1804CE2  F8CD 0000		str r0, [sp]
A1804CE6  E92D 0006		stmdb sp!, { r1, r2 }
A1804CEA  221F     		mov r2, #31 ; 31
A1804CEC  F8DF 1360		ldr r1, [pc, #+864] ; 0xA0003F60
A1804CF0  F8DF 43F0		ldr r4, [pc, #+1008] ; 0x1133D
A1804CF4  F044 0401		orr r4, r4, #1
A1804CF8  47A0     		blx r4
A1804CFA  E8BD 0006		ldmia sp!, { r1, r2 }
A1804CFE  F8DD 0000		ldr r0, [sp]
A1804D02  B002     		add sp, sp, #8

#348		
#349		$label27:
#350			(* END_IF *)
#351		
#352		
#353			(* IF Avto_A *)
#354			LD		Avto_A	{LNXT:109|-1|-1}
(*) UNDEF
A1804D04  F8DF 739C		ldr r7, [pc, #+924] ; 0xA1A0002A
A1804D08  7838     		ldrb r0, [r7]

#355			JMPCN	$label28	{LNXT:109|110|112}
(-) BOOL
A1804D0A  2800     		cmp r0, #0
A1804D0C  D017     		beq #46 ; 0xA1804D3E


#356		
#357			(* THEN *)
#358		
#359				(* auto_state_1 := 'Auto'; *)
#360				MOVE		'Auto',auto_state_1	{LNXT:110|115|-1}
(*) BOOL
A1804D10  F8DF 7364		ldr r7, [pc, #+868] ; 0xA18044D8
A1804D14  4638     		mov r0, r7
A1804D16  B082     		sub sp, sp, #8
A1804D18  F8CD 0000		str r0, [sp]
A1804D1C  E92D 0006		stmdb sp!, { r1, r2 }
A1804D20  220A     		mov r2, #10 ; 10
A1804D22  F8DF 1330		ldr r1, [pc, #+816] ; 0xA0003F80
A1804D26  F8DF 43BC		ldr r4, [pc, #+956] ; 0x1133D
A1804D2A  F044 0401		orr r4, r4, #1
A1804D2E  47A0     		blx r4
A1804D30  E8BD 0006		ldmia sp!, { r1, r2 }
A1804D34  F8DD 0000		ldr r0, [sp]
A1804D38  B002     		add sp, sp, #8

#361				JMP		$label29	{LNXT:109|110|112}
(-) STRING
A1804D3A  E015     		b #42 ; 0xA1804D68


#362		$label28:
#363		
#364			(* ELSE *)
#365		
#366				(* auto_state_1 := 'Hand'; *)
#367				MOVE		'Hand',auto_state_1	{LNXT:112|115|-1}
(*) STRING
A1804D3E  F8DF 733C		ldr r7, [pc, #+828] ; 0xA18044E0
A1804D42  4638     		mov r0, r7
A1804D44  B082     		sub sp, sp, #8
A1804D46  F8CD 0000		str r0, [sp]
A1804D4A  E92D 0006		stmdb sp!, { r1, r2 }
A1804D4E  220A     		mov r2, #10 ; 10
A1804D50  F8DF 1300		ldr r1, [pc, #+768] ; 0xA0003F80
A1804D54  F8DF 438C		ldr r4, [pc, #+908] ; 0x1133D
A1804D58  F044 0401		orr r4, r4, #1
A1804D5C  47A0     		blx r4
A1804D5E  E8BD 0006		ldmia sp!, { r1, r2 }
A1804D62  F8DD 0000		ldr r0, [sp]
A1804D66  B002     		add sp, sp, #8

#368		
#369		$label29:
#370			(* END_IF *)
#371		
#372		
#373			(* IF Avto_B *)
#374			LD		Avto_B	{LNXT:115|-1|-1}
(*) UNDEF
A1804D68  F8DF 7344		ldr r7, [pc, #+836] ; 0xA1A0002D
A1804D6C  7838     		ldrb r0, [r7]

#375			JMPCN	$label30	{LNXT:115|116|118}
(-) BOOL
A1804D6E  2800     		cmp r0, #0
A1804D70  D017     		beq #46 ; 0xA1804DA2


#376		
#377			(* THEN *)
#378		
#379				(* auto_state_2 := 'Auto'; *)
#380				MOVE		'Auto',auto_state_2	{LNXT:116|121|-1}
(*) BOOL
A1804D74  F8DF 7300		ldr r7, [pc, #+768] ; 0xA18044D8
A1804D78  4638     		mov r0, r7
A1804D7A  B082     		sub sp, sp, #8
A1804D7C  F8CD 0000		str r0, [sp]
A1804D80  E92D 0006		stmdb sp!, { r1, r2 }
A1804D84  220A     		mov r2, #10 ; 10
A1804D86  F8DF 12D0		ldr r1, [pc, #+720] ; 0xA0003F8C
A1804D8A  F8DF 4358		ldr r4, [pc, #+856] ; 0x1133D
A1804D8E  F044 0401		orr r4, r4, #1
A1804D92  47A0     		blx r4
A1804D94  E8BD 0006		ldmia sp!, { r1, r2 }
A1804D98  F8DD 0000		ldr r0, [sp]
A1804D9C  B002     		add sp, sp, #8

#381				JMP		$label31	{LNXT:115|116|118}
(-) STRING
A1804D9E  E015     		b #42 ; 0xA1804DCC


#382		$label30:
#383		
#384			(* ELSE *)
#385		
#386				(* auto_state_2 := 'Hand'; *)
#387				MOVE		'Hand',auto_state_2	{LNXT:118|121|-1}
(*) STRING
A1804DA2  F8DF 72D8		ldr r7, [pc, #+728] ; 0xA18044E0
A1804DA6  4638     		mov r0, r7
A1804DA8  B082     		sub sp, sp, #8
A1804DAA  F8CD 0000		str r0, [sp]
A1804DAE  E92D 0006		stmdb sp!, { r1, r2 }
A1804DB2  220A     		mov r2, #10 ; 10
A1804DB4  F8DF 12A0		ldr r1, [pc, #+672] ; 0xA0003F8C
A1804DB8  F8DF 4328		ldr r4, [pc, #+808] ; 0x1133D
A1804DBC  F044 0401		orr r4, r4, #1
A1804DC0  47A0     		blx r4
A1804DC2  E8BD 0006		ldmia sp!, { r1, r2 }
A1804DC6  F8DD 0000		ldr r0, [sp]
A1804DCA  B002     		add sp, sp, #8

#388		
#389		$label31:
#390			(* END_IF *)
#391		
#392		
#393			(* IF Avto_C *)
#394			LD		Avto_C	{LNXT:121|-1|-1}
(*) UNDEF
A1804DCC  F8DF 72E8		ldr r7, [pc, #+744] ; 0xA1A0002F
A1804DD0  7838     		ldrb r0, [r7]

#395			JMPCN	$label32	{LNXT:121|122|124}
(-) BOOL
A1804DD2  2800     		cmp r0, #0
A1804DD4  D017     		beq #46 ; 0xA1804E06


#396		
#397			(* THEN *)
#398		
#399				(* auto_state_3 := 'Auto'; *)
#400				MOVE		'Auto',auto_state_3	{LNXT:122|130|-1}
(*) BOOL
A1804DD8  F8DF 729C		ldr r7, [pc, #+668] ; 0xA18044D8
A1804DDC  4638     		mov r0, r7
A1804DDE  B082     		sub sp, sp, #8
A1804DE0  F8CD 0000		str r0, [sp]
A1804DE4  E92D 0006		stmdb sp!, { r1, r2 }
A1804DE8  220A     		mov r2, #10 ; 10
A1804DEA  F8DF 1270		ldr r1, [pc, #+624] ; 0xA0003F98
A1804DEE  F8DF 42F4		ldr r4, [pc, #+756] ; 0x1133D
A1804DF2  F044 0401		orr r4, r4, #1
A1804DF6  47A0     		blx r4
A1804DF8  E8BD 0006		ldmia sp!, { r1, r2 }
A1804DFC  F8DD 0000		ldr r0, [sp]
A1804E00  B002     		add sp, sp, #8

#401				JMP		$label33	{LNXT:121|122|124}
(-) STRING
A1804E02  E015     		b #42 ; 0xA1804E30


#402		$label32:
#403		
#404			(* ELSE *)
#405		
#406				(* auto_state_3 := 'Hand'; *)
#407				MOVE		'Hand',auto_state_3	{LNXT:124|130|-1}
(*) STRING
A1804E06  F8DF 7274		ldr r7, [pc, #+628] ; 0xA18044E0
A1804E0A  4638     		mov r0, r7
A1804E0C  B082     		sub sp, sp, #8
A1804E0E  F8CD 0000		str r0, [sp]
A1804E12  E92D 0006		stmdb sp!, { r1, r2 }
A1804E16  220A     		mov r2, #10 ; 10
A1804E18  F8DF 1240		ldr r1, [pc, #+576] ; 0xA0003F98
A1804E1C  F8DF 42C4		ldr r4, [pc, #+708] ; 0x1133D
A1804E20  F044 0401		orr r4, r4, #1
A1804E24  47A0     		blx r4
A1804E26  E8BD 0006		ldmia sp!, { r1, r2 }
A1804E2A  F8DD 0000		ldr r0, [sp]
A1804E2E  B002     		add sp, sp, #8

#408		
#409		$label33:
#410			(* END_IF *)
#411		
#412		
#413			(* IF Tank_Level >= Level_1 and Rotation *)
#414			LD		Tank_Level	{LNXT:130|-1|-1}
(*) UNDEF
A1804E30  F8DF 7258		ldr r7, [pc, #+600] ; 0xA1A00012
A1804E34  F9B7 0000		ldrsh r0, [r7]

#415			GE		Level_1	{LNXT:130|-1|-1}
(*) INT
A1804E38  F8DF 71F4		ldr r7, [pc, #+500] ; 0xA0003F06
A1804E3C  F9B7 7000		ldrsh r7, [r7]
A1804E40  42B8     		cmp r0, r7
A1804E42  BFB8 2000		ltmov r0, #0
A1804E46  BFA8 2001		gemov r0, #1

#416			AND		Rotation	{LNXT:130|-1|-1}
(*) BOOL
A1804E4A  F8DF 71F4		ldr r7, [pc, #+500] ; 0xA0003F10
A1804E4E  783F     		ldrb r7, [r7]
A1804E50  4038     		and r0, r0, r7

#417			JMPCN	$label34	{LNXT:130|133|188}
(-) BOOL
A1804E52  2800     		cmp r0, #0
A1804E54  F000 82E2		beq #1476 ; 0xA180541C


#418		
#419			(* THEN *)
#420		
#421		
#422				(* CASE Rotationnumber OF *)
#423		
#424				(* 0: *)
#425				LD		Rotationnumber	{LNXT:133|-1|-1}
(*) UNDEF
A1804E58  F8DF 7284		ldr r7, [pc, #+644] ; 0xA1A0005A
A1804E5C  F9B7 0000		ldrsh r0, [r7]

#426				EQ		0	{LNXT:133|-1|-1}
(*) INT
A1804E60  2800     		cmp r0, #0
A1804E62  BF18 2000		nemov r0, #0
A1804E66  BF08 2001		eqmov r0, #1

#427				JMPC		$label36	{LNXT:133|134|150}
(-) BOOL
A1804E6A  2800     		cmp r0, #0
A1804E6C  D11A     		bne #52 ; 0xA1804EA4


#428		
#429				(* 1: *)
#430				LD		Rotationnumber	{LNXT:150|-1|-1}
(*) UNDEF
A1804E70  F8DF 726C		ldr r7, [pc, #+620] ; 0xA1A0005A
A1804E74  F9B7 0000		ldrsh r0, [r7]

#431				EQ		1	{LNXT:150|-1|-1}
(*) INT
A1804E78  2801     		cmp r0, #1
A1804E7A  BF18 2000		nemov r0, #0
A1804E7E  BF08 2001		eqmov r0, #1

#432				JMPC		$label37	{LNXT:150|151|167}
(-) BOOL
A1804E82  2800     		cmp r0, #0
A1804E84  F040 8144		bne #648 ; 0xA1805110


#433		
#434				(* 2: *)
#435				LD		Rotationnumber	{LNXT:167|-1|-1}
(*) UNDEF
A1804E88  F8DF 7254		ldr r7, [pc, #+596] ; 0xA1A0005A
A1804E8C  F9B7 0000		ldrsh r0, [r7]

#436				EQ		2	{LNXT:167|-1|-1}
(*) INT
A1804E90  2802     		cmp r0, #2
A1804E92  BF18 2000		nemov r0, #0
A1804E96  BF08 2001		eqmov r0, #1

#437				JMPC		$label38	{LNXT:167|168|188}
(-) BOOL
A1804E9A  2800     		cmp r0, #0
A1804E9C  F040 81FC		bne #1016 ; 0xA1805298


#438				JMP		$label35	{LNXT:167|168|188}
(-) BOOL
A1804EA0  E2BC     		b #1400 ; 0xA180541C


#439		
#440				(* Istruzioni di ciascun CASE: *)
#441		
#442		$label36:
#443		
#444					(* IF ALM_A AND Avto_A AND NOT Motor_B AND NOT Motor_C *)
#445					LD		Motor_C	{LNXT:134|-1|-1}
(*) UNDEF
A1804EA4  F8DF 724C		ldr r7, [pc, #+588] ; 0x100004AE
A1804EA8  7838     		ldrb r0, [r7]

#446					NOT	{LNXT:134|-1|-1}
(*) BOOL
A1804EAA  2800     		cmp r0, #0
A1804EAC  BF08 2001		eqmov r0, #1
A1804EB0  BF18 2000		nemov r0, #0

#447					AND(		Motor_B	{LNXT:134|-1|-1}
(*) BOOL
A1804EB4  B082     		sub sp, sp, #8
A1804EB6  F8CD 0000		str r0, [sp]
A1804EBA  F8DF 7234		ldr r7, [pc, #+564] ; 0x100004AD
A1804EBE  7838     		ldrb r0, [r7]

#448					NOT	{LNXT:134|-1|-1}
(*) BOOL
A1804EC0  2800     		cmp r0, #0
A1804EC2  BF08 2001		eqmov r0, #1
A1804EC6  BF18 2000		nemov r0, #0

#449					AND(		ALM_A	{LNXT:134|-1|-1}
(*) BOOL
A1804ECA  B082     		sub sp, sp, #8
A1804ECC  F8CD 0000		str r0, [sp]
A1804ED0  F8DF 71D4		ldr r7, [pc, #+468] ; 0xA1A0002B
A1804ED4  7838     		ldrb r0, [r7]

#450					NOT	{LNXT:134|-1|-1}
(*) BOOL
A1804ED6  2800     		cmp r0, #0
A1804ED8  BF08 2001		eqmov r0, #1
A1804EDC  BF18 2000		nemov r0, #0

#451					AND		Avto_A	{LNXT:134|-1|-1}
(*) BOOL
A1804EE0  F8DF 71C0		ldr r7, [pc, #+448] ; 0xA1A0002A
A1804EE4  783F     		ldrb r7, [r7]
A1804EE6  4038     		and r0, r0, r7

#452					)	{LNXT:134|-1|-1}
(*) BOOL
A1804EE8  4607     		mov r7, r0
A1804EEA  F8DD 0000		ldr r0, [sp]
A1804EEE  B002     		add sp, sp, #8
A1804EF0  4038     		and r0, r0, r7

#453					)	{LNXT:134|-1|-1}
(*) BOOL
A1804EF2  4607     		mov r7, r0
A1804EF4  F8DD 0000		ldr r0, [sp]
A1804EF8  B002     		add sp, sp, #8
A1804EFA  4038     		and r0, r0, r7

#454					JMPCN	$label39	{LNXT:134|135|138}
(-) BOOL
A1804EFC  2800     		cmp r0, #0
A1804EFE  D014     		beq #40 ; 0xA1804F2A


#455		
#456					(* THEN *)
#457		
#458						(* Motor_A := TRUE; *)
#459						MOVE		TRUE,Motor_A	{LNXT:135|136|-1}
(*) BOOL
A1804F02  2001     		mov r0, #1 ; 1
A1804F04  F8DF 71E4		ldr r7, [pc, #+484] ; 0x100004AC
A1804F08  7038     		strb r0, [r7]

#460		
#461						(* Rotationnumber := (Rotationnumber + 1) MOD 3; *)
#462						LD		Rotationnumber	{LNXT:136|188|-1}
(*) UNDEF
A1804F0A  F8DF 71D4		ldr r7, [pc, #+468] ; 0xA1A0005A
A1804F0E  F9B7 0000		ldrsh r0, [r7]

#463						ADD		1	{LNXT:136|188|-1}
(-) INT
A1804F12  1C40     		add r0, r0, #1

#464						MOD		3	{LNXT:136|188|-1}
(*) INT
A1804F14  2103     		mov r1, #3 ; 3
A1804F16  F8DF 4168		ldr r4, [pc, #+360] ; 0xA1804500
A1804F1A  F044 0401		orr r4, r4, #1
A1804F1E  47A0     		blx r4

#465						ST		Rotationnumber	{LNXT:136|188|-1}
(*) INT
A1804F20  F8DF 71BC		ldr r7, [pc, #+444] ; 0xA1A0005A
A1804F24  8038     		strh r0, [r7]

#466						JMP		$label40	{LNXT:134|135|138}
(-) INT
A1804F26  E0F1     		b #482 ; 0xA180510C


#467		$label39:
#468		
#469					(* ELSIF ALM_A AND NOT Avto_A AND NOT Motor_B AND NOT Motor_C *)
#470					LD		Motor_C	{LNXT:138|-1|-1}
(*) UNDEF
A1804F2A  F8DF 71C8		ldr r7, [pc, #+456] ; 0x100004AE
A1804F2E  7838     		ldrb r0, [r7]

#471					NOT	{LNXT:138|-1|-1}
(*) BOOL
A1804F30  2800     		cmp r0, #0
A1804F32  BF08 2001		eqmov r0, #1
A1804F36  BF18 2000		nemov r0, #0

#472					AND(		Motor_B	{LNXT:138|-1|-1}
(*) BOOL
A1804F3A  B082     		sub sp, sp, #8
A1804F3C  F8CD 0000		str r0, [sp]
A1804F40  F8DF 71AC		ldr r7, [pc, #+428] ; 0x100004AD
A1804F44  7838     		ldrb r0, [r7]

#473					NOT	{LNXT:138|-1|-1}
(*) BOOL
A1804F46  2800     		cmp r0, #0
A1804F48  BF08 2001		eqmov r0, #1
A1804F4C  BF18 2000		nemov r0, #0

#474					AND(		Avto_A	{LNXT:138|-1|-1}
(*) BOOL
A1804F50  B082     		sub sp, sp, #8
A1804F52  F8CD 0000		str r0, [sp]
A1804F56  F8DF 714C		ldr r7, [pc, #+332] ; 0xA1A0002A
A1804F5A  7838     		ldrb r0, [r7]

#475					NOT	{LNXT:138|-1|-1}
(*) BOOL
A1804F5C  2800     		cmp r0, #0
A1804F5E  BF08 2001		eqmov r0, #1
A1804F62  BF18 2000		nemov r0, #0

#476					AND(		ALM_A	{LNXT:138|-1|-1}
(*) BOOL
A1804F66  B082     		sub sp, sp, #8
A1804F68  F8CD 0000		str r0, [sp]
A1804F6C  F8DF 7138		ldr r7, [pc, #+312] ; 0xA1A0002B
A1804F70  7838     		ldrb r0, [r7]

#477					NOT	{LNXT:138|-1|-1}
(*) BOOL
A1804F72  2800     		cmp r0, #0
A1804F74  BF08 2001		eqmov r0, #1
A1804F78  BF18 2000		nemov r0, #0

#478					)	{LNXT:138|-1|-1}
(*) BOOL
A1804F7C  4607     		mov r7, r0
A1804F7E  F8DD 0000		ldr r0, [sp]
A1804F82  B002     		add sp, sp, #8
A1804F84  4038     		and r0, r0, r7

#479					)	{LNXT:138|-1|-1}
(*) BOOL
A1804F86  4607     		mov r7, r0
A1804F88  F8DD 0000		ldr r0, [sp]
A1804F8C  B002     		add sp, sp, #8
A1804F8E  4038     		and r0, r0, r7

#480					)	{LNXT:138|-1|-1}
(*) BOOL
A1804F90  4607     		mov r7, r0
A1804F92  F8DD 0000		ldr r0, [sp]
A1804F96  B002     		add sp, sp, #8
A1804F98  4038     		and r0, r0, r7

#481					JMPCN	$label40	{LNXT:138|140|188}
(-) BOOL
A1804F9A  2800     		cmp r0, #0
A1804F9C  F000 80B6		beq #364 ; 0xA180510C


#482		
#483					(* THEN *)
#484		
#485		
#486						(* IF ALM_B AND Avto_B *)
#487						LD		ALM_B	{LNXT:140|-1|-1}
(*) UNDEF
A1804FA0  F8DF 7108		ldr r7, [pc, #+264] ; 0xA1A0002C
A1804FA4  7838     		ldrb r0, [r7]

#488						NOT	{LNXT:140|-1|-1}
(*) BOOL
A1804FA6  2800     		cmp r0, #0
A1804FA8  BF08 2001		eqmov r0, #1
A1804FAC  BF18 2000		nemov r0, #0

#489						AND		Avto_B	{LNXT:140|-1|-1}
(*) BOOL
A1804FB0  F8DF 70FC		ldr r7, [pc, #+252] ; 0xA1A0002D
A1804FB4  783F     		ldrb r7, [r7]
A1804FB6  4038     		and r0, r0, r7

#490						JMPCN	$label41	{LNXT:140|141|144}
(-) BOOL
A1804FB8  2800     		cmp r0, #0
A1804FBA  D014     		beq #40 ; 0xA1804FE6


#491		
#492						(* THEN *)
#493		
#494							(* Motor_B := TRUE; *)
#495							MOVE		TRUE,Motor_B	{LNXT:141|142|-1}
(*) BOOL
A1804FBE  2001     		mov r0, #1 ; 1
A1804FC0  F8DF 712C		ldr r7, [pc, #+300] ; 0x100004AD
A1804FC4  7038     		strb r0, [r7]

#496		
#497							(* Rotationnumber := (Rotationnumber + 1) MOD 3; *)
#498							LD		Rotationnumber	{LNXT:142|188|-1}
(*) UNDEF
A1804FC6  F8DF 7118		ldr r7, [pc, #+280] ; 0xA1A0005A
A1804FCA  F9B7 0000		ldrsh r0, [r7]

#499							ADD		1	{LNXT:142|188|-1}
(-) INT
A1804FCE  1C40     		add r0, r0, #1

#500							MOD		3	{LNXT:142|188|-1}
(*) INT
A1804FD0  2103     		mov r1, #3 ; 3
A1804FD2  F8DF 40AC		ldr r4, [pc, #+172] ; 0xA1804500
A1804FD6  F044 0401		orr r4, r4, #1
A1804FDA  47A0     		blx r4

#501							ST		Rotationnumber	{LNXT:142|188|-1}
(*) INT
A1804FDC  F8DF 7100		ldr r7, [pc, #+256] ; 0xA1A0005A
A1804FE0  8038     		strh r0, [r7]

#502							JMP		$label42	{LNXT:140|141|144}
(-) INT
A1804FE2  E093     		b #294 ; 0xA180510C


#503		$label41:
#504		
#505						(* ELSIF ALM_C AND Avto_C *)
#506						LD		ALM_C	{LNXT:144|-1|-1}
(*) UNDEF
A1804FE6  F8DF 70CC		ldr r7, [pc, #+204] ; 0xA1A0002E
A1804FEA  7838     		ldrb r0, [r7]

#507						NOT	{LNXT:144|-1|-1}
(*) BOOL
A1804FEC  2800     		cmp r0, #0
A1804FEE  BF08 2001		eqmov r0, #1
A1804FF2  BF18 2000		nemov r0, #0

#508						AND		Avto_C	{LNXT:144|-1|-1}
(*) BOOL
A1804FF6  F8DF 70C0		ldr r7, [pc, #+192] ; 0xA1A0002F
A1804FFA  783F     		ldrb r7, [r7]
A1804FFC  4038     		and r0, r0, r7

#509						JMPCN	$label42	{LNXT:144|145|188}
(-) BOOL
A1804FFE  2800     		cmp r0, #0
A1805000  F000 8084		beq #264 ; 0xA180510C


#510		
#511						(* THEN *)
#512		
#513							(* Motor_C := TRUE; *)
#514							MOVE		TRUE,Motor_C	{LNXT:145|146|-1}
(*) BOOL
A1805004  2001     		mov r0, #1 ; 1
A1805006  F8DF 70EC		ldr r7, [pc, #+236] ; 0x100004AE
A180500A  7038     		strb r0, [r7]

#515		
#516							(* Rotationnumber := (Rotationnumber + 2) MOD 3; *)
#517							LD		Rotationnumber	{LNXT:146|188|-1}
(*) UNDEF
A180500C  F8DF 70D0		ldr r7, [pc, #+208] ; 0xA1A0005A
A1805010  F9B7 0000		ldrsh r0, [r7]

A1805014  E070     		b #224

A1805018  FFFFFFFF		; 0xA00017F0
A180501C  FFFFFFFF		; 0xA00017F2
A1805020  FFFFFFFF		; 0xA00017F4
A1805024  FFFFFFFF		; 0xA00017F6
A1805028  FFFFFFFF		; 0xA00017F8
A180502C  FFFFFFFF		; 0xA0003F04
A1805030  FFFFFFFF		; 0xA0003F06
A1805034  FFFFFFFF		; 0xA0003F08
A1805038  FFFFFFFF		; 0xA0003F0A
A180503C  FFFFFFFF		; 0xA0003F0C
A1805040  FFFFFFFF		; 0xA0003F10
A1805044  FFFFFFFF		; 0xA0003F12
A1805048  FFFFFFFF		; 0xA0003F20
A180504C  FFFFFFFF		; 0xA0003F40
A1805050  FFFFFFFF		; 0xA0003F60
A1805054  FFFFFFFF		; 0xA0003F80
A1805058  FFFFFFFF		; 0xA0003F8C
A180505C  FFFFFFFF		; 0xA0003F98
A1805060  FFFFFFFF		; 0xA0003FA4
A1805064  FFFFFFFF		; 0xA0003FBA
A1805068  A18044C0		; 0xA18044C0
A180506C  A18044C4		; 0xA18044C4
A1805070  A18044CC		; 0xA18044CC
A1805074  A18044D4		; 0xA18044D4
A1805078  A18044D8		; 0xA18044D8
A180507C  A18044E0		; 0xA18044E0
A1805080  A1804500		; 0xA1804500
A1805084  A1804550		; 0xA1804550
A1805088  A1A00011		; 0xA1A00011
A180508C  A1A00012		; 0xA1A00012
A1805090  A1A00014		; 0xA1A00014
A1805094  A1A00018		; 0xA1A00018
A1805098  A1A0001C		; 0xA1A0001C
A180509C  A1A00020		; 0xA1A00020
A18050A0  A1A00028		; 0xA1A00028
A18050A4  A1A0002A		; 0xA1A0002A
A18050A8  A1A0002B		; 0xA1A0002B
A18050AC  A1A0002C		; 0xA1A0002C
A18050B0  A1A0002D		; 0xA1A0002D
A18050B4  A1A0002E		; 0xA1A0002E
A18050B8  A1A0002F		; 0xA1A0002F
A18050BC  A1A00030		; 0xA1A00030
A18050C0  A1A00034		; 0xA1A00034
A18050C4  A1A00038		; 0xA1A00038
A18050C8  A1A0003C		; 0xA1A0003C
A18050CC  A1A00044		; 0xA1A00044
A18050D0  A1A00048		; 0xA1A00048
A18050D4  A1A0004C		; 0xA1A0004C
A18050D8  A1A00050		; 0xA1A00050
A18050DC  A1A00058		; 0xA1A00058
A18050E0  A1A0005A		; 0xA1A0005A
A18050E4  FFFFFFFF		; 0x0001133D
A18050E8  FFFFFFFF		; 0x10000436
A18050EC  FFFFFFFF		; 0x100004AC
A18050F0  FFFFFFFF		; 0x100004AD
A18050F4  FFFFFFFF		; 0x100004AE

#518							ADD		2	{LNXT:146|188|-1}
(-) INT
A18050F8  1C80     		add r0, r0, #2

#519							MOD		3	{LNXT:146|188|-1}
(*) INT
A18050FA  2103     		mov r1, #3 ; 3
A18050FC  F85F 4080		ldr r4, [pc, #-128] ; 0xA1804500
A1805100  F044 0401		orr r4, r4, #1
A1805104  47A0     		blx r4

#520							ST		Rotationnumber	{LNXT:146|188|-1}
(*) INT
A1805106  F85F 7028		ldr r7, [pc, #-40] ; 0xA1A0005A
A180510A  8038     		strh r0, [r7]

#521		
#522		$label42:
#523						(* END_IF *)
#524		
#525		$label40:
#526					(* END_IF *)
#527					JMP		$label35	{LNXT:1|188|-1}
(-) INT
A180510C  E186     		b #780 ; 0xA180541C


#528		
#529		$label37:
#530		
#531					(* IF ALM_B AND Avto_B AND NOT Motor_A AND NOT Motor_C *)
#532					LD		Motor_C	{LNXT:151|-1|-1}
(*) UNDEF
A1805110  F85F 7020		ldr r7, [pc, #-32] ; 0x100004AE
A1805114  7838     		ldrb r0, [r7]

#533					NOT	{LNXT:151|-1|-1}
(*) BOOL
A1805116  2800     		cmp r0, #0
A1805118  BF08 2001		eqmov r0, #1
A180511C  BF18 2000		nemov r0, #0

#534					AND(		Motor_A	{LNXT:151|-1|-1}
(*) BOOL
A1805120  B082     		sub sp, sp, #8
A1805122  F8CD 0000		str r0, [sp]
A1805126  F85F 703C		ldr r7, [pc, #-60] ; 0x100004AC
A180512A  7838     		ldrb r0, [r7]

#535					NOT	{LNXT:151|-1|-1}
(*) BOOL
A180512C  2800     		cmp r0, #0
A180512E  BF08 2001		eqmov r0, #1
A1805132  BF18 2000		nemov r0, #0

#536					AND(		ALM_B	{LNXT:151|-1|-1}
(*) BOOL
A1805136  B082     		sub sp, sp, #8
A1805138  F8CD 0000		str r0, [sp]
A180513C  F85F 7094		ldr r7, [pc, #-148] ; 0xA1A0002C
A1805140  7838     		ldrb r0, [r7]

#537					NOT	{LNXT:151|-1|-1}
(*) BOOL
A1805142  2800     		cmp r0, #0
A1805144  BF08 2001		eqmov r0, #1
A1805148  BF18 2000		nemov r0, #0

#538					AND		Avto_B	{LNXT:151|-1|-1}
(*) BOOL
A180514C  F85F 70A0		ldr r7, [pc, #-160] ; 0xA1A0002D
A1805150  783F     		ldrb r7, [r7]
A1805152  4038     		and r0, r0, r7

#539					)	{LNXT:151|-1|-1}
(*) BOOL
A1805154  4607     		mov r7, r0
A1805156  F8DD 0000		ldr r0, [sp]
A180515A  B002     		add sp, sp, #8
A180515C  4038     		and r0, r0, r7

#540					)	{LNXT:151|-1|-1}
(*) BOOL
A180515E  4607     		mov r7, r0
A1805160  F8DD 0000		ldr r0, [sp]
A1805164  B002     		add sp, sp, #8
A1805166  4038     		and r0, r0, r7

#541					JMPCN	$label43	{LNXT:151|152|155}
(-) BOOL
A1805168  2800     		cmp r0, #0
A180516A  D014     		beq #40 ; 0xA1805196


#542		
#543					(* THEN *)
#544		
#545						(* Motor_B := TRUE; *)
#546						MOVE		TRUE,Motor_B	{LNXT:152|153|-1}
(*) BOOL
A180516E  2001     		mov r0, #1 ; 1
A1805170  F85F 7084		ldr r7, [pc, #-132] ; 0x100004AD
A1805174  7038     		strb r0, [r7]

#547		
#548						(* Rotationnumber := (Rotationnumber + 1) MOD 3; *)
#549						LD		Rotationnumber	{LNXT:153|188|-1}
(*) UNDEF
A1805176  F85F 7098		ldr r7, [pc, #-152] ; 0xA1A0005A
A180517A  F9B7 0000		ldrsh r0, [r7]

#550						ADD		1	{LNXT:153|188|-1}
(-) INT
A180517E  1C40     		add r0, r0, #1

#551						MOD		3	{LNXT:153|188|-1}
(*) INT
A1805180  2103     		mov r1, #3 ; 3
A1805182  F85F 4104		ldr r4, [pc, #-260] ; 0xA1804500
A1805186  F044 0401		orr r4, r4, #1
A180518A  47A0     		blx r4

#552						ST		Rotationnumber	{LNXT:153|188|-1}
(*) INT
A180518C  F85F 70B0		ldr r7, [pc, #-176] ; 0xA1A0005A
A1805190  8038     		strh r0, [r7]

#553						JMP		$label44	{LNXT:151|152|155}
(-) INT
A1805192  E07F     		b #254 ; 0xA1805294


#554		$label43:
#555		
#556					(* ELSIF ALM_B AND NOT Avto_B AND NOT Motor_A AND NOT Motor_C *)
#557					LD		Motor_C	{LNXT:155|-1|-1}
(*) UNDEF
A1805196  F85F 70A4		ldr r7, [pc, #-164] ; 0x100004AE
A180519A  7838     		ldrb r0, [r7]

#558					NOT	{LNXT:155|-1|-1}
(*) BOOL
A180519C  2800     		cmp r0, #0
A180519E  BF08 2001		eqmov r0, #1
A18051A2  BF18 2000		nemov r0, #0

#559					AND(		Motor_A	{LNXT:155|-1|-1}
(*) BOOL
A18051A6  B082     		sub sp, sp, #8
A18051A8  F8CD 0000		str r0, [sp]
A18051AC  F85F 70C4		ldr r7, [pc, #-196] ; 0x100004AC
A18051B0  7838     		ldrb r0, [r7]

#560					NOT	{LNXT:155|-1|-1}
(*) BOOL
A18051B2  2800     		cmp r0, #0
A18051B4  BF08 2001		eqmov r0, #1
A18051B8  BF18 2000		nemov r0, #0

#561					AND(		Avto_B	{LNXT:155|-1|-1}
(*) BOOL
A18051BC  B082     		sub sp, sp, #8
A18051BE  F8CD 0000		str r0, [sp]
A18051C2  F85F 7114		ldr r7, [pc, #-276] ; 0xA1A0002D
A18051C6  7838     		ldrb r0, [r7]

#562					NOT	{LNXT:155|-1|-1}
(*) BOOL
A18051C8  2800     		cmp r0, #0
A18051CA  BF08 2001		eqmov r0, #1
A18051CE  BF18 2000		nemov r0, #0

#563					AND(		ALM_B	{LNXT:155|-1|-1}
(*) BOOL
A18051D2  B082     		sub sp, sp, #8
A18051D4  F8CD 0000		str r0, [sp]
A18051D8  F85F 7130		ldr r7, [pc, #-304] ; 0xA1A0002C
A18051DC  7838     		ldrb r0, [r7]

#564					NOT	{LNXT:155|-1|-1}
(*) BOOL
A18051DE  2800     		cmp r0, #0
A18051E0  BF08 2001		eqmov r0, #1
A18051E4  BF18 2000		nemov r0, #0

#565					)	{LNXT:155|-1|-1}
(*) BOOL
A18051E8  4607     		mov r7, r0
A18051EA  F8DD 0000		ldr r0, [sp]
A18051EE  B002     		add sp, sp, #8
A18051F0  4038     		and r0, r0, r7

#566					)	{LNXT:155|-1|-1}
(*) BOOL
A18051F2  4607     		mov r7, r0
A18051F4  F8DD 0000		ldr r0, [sp]
A18051F8  B002     		add sp, sp, #8
A18051FA  4038     		and r0, r0, r7

#567					)	{LNXT:155|-1|-1}
(*) BOOL
A18051FC  4607     		mov r7, r0
A18051FE  F8DD 0000		ldr r0, [sp]
A1805202  B002     		add sp, sp, #8
A1805204  4038     		and r0, r0, r7

#568					JMPCN	$label44	{LNXT:155|157|188}
(-) BOOL
A1805206  2800     		cmp r0, #0
A1805208  D044     		beq #136 ; 0xA1805294


#569		
#570					(* THEN *)
#571		
#572		
#573						(* IF ALM_A AND Avto_A *)
#574						LD		ALM_A	{LNXT:157|-1|-1}
(*) UNDEF
A180520C  F85F 7168		ldr r7, [pc, #-360] ; 0xA1A0002B
A1805210  7838     		ldrb r0, [r7]

#575						NOT	{LNXT:157|-1|-1}
(*) BOOL
A1805212  2800     		cmp r0, #0
A1805214  BF08 2001		eqmov r0, #1
A1805218  BF18 2000		nemov r0, #0

#576						AND		Avto_A	{LNXT:157|-1|-1}
(*) BOOL
A180521C  F85F 717C		ldr r7, [pc, #-380] ; 0xA1A0002A
A1805220  783F     		ldrb r7, [r7]
A1805222  4038     		and r0, r0, r7

#577						JMPCN	$label45	{LNXT:157|158|161}
(-) BOOL
A1805224  2800     		cmp r0, #0
A1805226  D014     		beq #40 ; 0xA1805252


#578		
#579						(* THEN *)
#580		
#581							(* Motor_A := TRUE; *)
#582							MOVE		TRUE,Motor_A	{LNXT:158|159|-1}
(*) BOOL
A180522A  2001     		mov r0, #1 ; 1
A180522C  F85F 7144		ldr r7, [pc, #-324] ; 0x100004AC
A1805230  7038     		strb r0, [r7]

#583		
#584							(* Rotationnumber := (Rotationnumber - 1) MOD 3; *)
#585							LD		Rotationnumber	{LNXT:159|188|-1}
(*) UNDEF
A1805232  F85F 7154		ldr r7, [pc, #-340] ; 0xA1A0005A
A1805236  F9B7 0000		ldrsh r0, [r7]

#586							SUB		1	{LNXT:159|188|-1}
(-) INT
A180523A  1E40     		sub r0, r0, #1

#587							MOD		3	{LNXT:159|188|-1}
(*) INT
A180523C  2103     		mov r1, #3 ; 3
A180523E  F85F 41C0		ldr r4, [pc, #-448] ; 0xA1804500
A1805242  F044 0401		orr r4, r4, #1
A1805246  47A0     		blx r4

#588							ST		Rotationnumber	{LNXT:159|188|-1}
(*) INT
A1805248  F85F 716C		ldr r7, [pc, #-364] ; 0xA1A0005A
A180524C  8038     		strh r0, [r7]

#589							JMP		$label46	{LNXT:157|158|161}
(-) INT
A180524E  E021     		b #66 ; 0xA1805294


#590		$label45:
#591		
#592						(* ELSIF ALM_C AND Avto_C *)
#593						LD		ALM_C	{LNXT:161|-1|-1}
(*) UNDEF
A1805252  F85F 71A0		ldr r7, [pc, #-416] ; 0xA1A0002E
A1805256  7838     		ldrb r0, [r7]

#594						NOT	{LNXT:161|-1|-1}
(*) BOOL
A1805258  2800     		cmp r0, #0
A180525A  BF08 2001		eqmov r0, #1
A180525E  BF18 2000		nemov r0, #0

#595						AND		Avto_C	{LNXT:161|-1|-1}
(*) BOOL
A1805262  F85F 71AC		ldr r7, [pc, #-428] ; 0xA1A0002F
A1805266  783F     		ldrb r7, [r7]
A1805268  4038     		and r0, r0, r7

#596						JMPCN	$label46	{LNXT:161|162|188}
(-) BOOL
A180526A  2800     		cmp r0, #0
A180526C  D012     		beq #36 ; 0xA1805294


#597		
#598						(* THEN *)
#599		
#600							(* Motor_C := TRUE; *)
#601							MOVE		TRUE,Motor_C	{LNXT:162|163|-1}
(*) BOOL
A1805270  2001     		mov r0, #1 ; 1
A1805272  F85F 7180		ldr r7, [pc, #-384] ; 0x100004AE
A1805276  7038     		strb r0, [r7]

#602		
#603							(* Rotationnumber := (Rotationnumber + 1) MOD 3; *)
#604							LD		Rotationnumber	{LNXT:163|188|-1}
(*) UNDEF
A1805278  F85F 719C		ldr r7, [pc, #-412] ; 0xA1A0005A
A180527C  F9B7 0000		ldrsh r0, [r7]

#605							ADD		1	{LNXT:163|188|-1}
(-) INT
A1805280  1C40     		add r0, r0, #1

#606							MOD		3	{LNXT:163|188|-1}
(*) INT
A1805282  2103     		mov r1, #3 ; 3
A1805284  F85F 4208		ldr r4, [pc, #-520] ; 0xA1804500
A1805288  F044 0401		orr r4, r4, #1
A180528C  47A0     		blx r4

#607							ST		Rotationnumber	{LNXT:163|188|-1}
(*) INT
A180528E  F85F 71B0		ldr r7, [pc, #-432] ; 0xA1A0005A
A1805292  8038     		strh r0, [r7]

#608		
#609		$label46:
#610						(* END_IF *)
#611		
#612		$label44:
#613					(* END_IF *)
#614					JMP		$label35	{LNXT:1|188|-1}
(-) INT
A1805294  E0C2     		b #388 ; 0xA180541C


#615		
#616		$label38:
#617		
#618					(* IF ALM_C AND Avto_C AND NOT Motor_A AND NOT Motor_B *)
#619					LD		Motor_B	{LNXT:168|-1|-1}
(*) UNDEF
A1805298  F85F 71AC		ldr r7, [pc, #-428] ; 0x100004AD
A180529C  7838     		ldrb r0, [r7]

#620					NOT	{LNXT:168|-1|-1}
(*) BOOL
A180529E  2800     		cmp r0, #0
A18052A0  BF08 2001		eqmov r0, #1
A18052A4  BF18 2000		nemov r0, #0

#621					AND(		Motor_A	{LNXT:168|-1|-1}
(*) BOOL
A18052A8  B082     		sub sp, sp, #8
A18052AA  F8CD 0000		str r0, [sp]
A18052AE  F85F 71C4		ldr r7, [pc, #-452] ; 0x100004AC
A18052B2  7838     		ldrb r0, [r7]

#622					NOT	{LNXT:168|-1|-1}
(*) BOOL
A18052B4  2800     		cmp r0, #0
A18052B6  BF08 2001		eqmov r0, #1
A18052BA  BF18 2000		nemov r0, #0

#623					AND(		ALM_C	{LNXT:168|-1|-1}
(*) BOOL
A18052BE  B082     		sub sp, sp, #8
A18052C0  F8CD 0000		str r0, [sp]
A18052C4  F85F 7214		ldr r7, [pc, #-532] ; 0xA1A0002E
A18052C8  7838     		ldrb r0, [r7]

#624					NOT	{LNXT:168|-1|-1}
(*) BOOL
A18052CA  2800     		cmp r0, #0
A18052CC  BF08 2001		eqmov r0, #1
A18052D0  BF18 2000		nemov r0, #0

#625					AND		Avto_C	{LNXT:168|-1|-1}
(*) BOOL
A18052D4  F85F 7220		ldr r7, [pc, #-544] ; 0xA1A0002F
A18052D8  783F     		ldrb r7, [r7]
A18052DA  4038     		and r0, r0, r7

#626					)	{LNXT:168|-1|-1}
(*) BOOL
A18052DC  4607     		mov r7, r0
A18052DE  F8DD 0000		ldr r0, [sp]
A18052E2  B002     		add sp, sp, #8
A18052E4  4038     		and r0, r0, r7

#627					)	{LNXT:168|-1|-1}
(*) BOOL
A18052E6  4607     		mov r7, r0
A18052E8  F8DD 0000		ldr r0, [sp]
A18052EC  B002     		add sp, sp, #8
A18052EE  4038     		and r0, r0, r7

#628					JMPCN	$label47	{LNXT:168|169|172}
(-) BOOL
A18052F0  2800     		cmp r0, #0
A18052F2  D014     		beq #40 ; 0xA180531E


#629		
#630					(* THEN *)
#631		
#632						(* Motor_C := TRUE; *)
#633						MOVE		TRUE,Motor_C	{LNXT:169|170|-1}
(*) BOOL
A18052F6  2001     		mov r0, #1 ; 1
A18052F8  F85F 7208		ldr r7, [pc, #-520] ; 0x100004AE
A18052FC  7038     		strb r0, [r7]

#634		
#635						(* Rotationnumber := (Rotationnumber + 1) MOD 3; *)
#636						LD		Rotationnumber	{LNXT:170|188|-1}
(*) UNDEF
A18052FE  F85F 7220		ldr r7, [pc, #-544] ; 0xA1A0005A
A1805302  F9B7 0000		ldrsh r0, [r7]

#637						ADD		1	{LNXT:170|188|-1}
(-) INT
A1805306  1C40     		add r0, r0, #1

#638						MOD		3	{LNXT:170|188|-1}
(*) INT
A1805308  2103     		mov r1, #3 ; 3
A180530A  F85F 428C		ldr r4, [pc, #-652] ; 0xA1804500
A180530E  F044 0401		orr r4, r4, #1
A1805312  47A0     		blx r4

#639						ST		Rotationnumber	{LNXT:170|188|-1}
(*) INT
A1805314  F85F 7238		ldr r7, [pc, #-568] ; 0xA1A0005A
A1805318  8038     		strh r0, [r7]

#640						JMP		$label48	{LNXT:168|169|172}
(-) INT
A180531A  E07F     		b #254 ; 0xA180541C


#641		$label47:
#642		
#643					(* ELSIF ALM_C AND NOT Avto_C AND NOT Motor_A AND NOT Motor_B *)
#644					LD		Motor_B	{LNXT:172|-1|-1}
(*) UNDEF
A180531E  F85F 7230		ldr r7, [pc, #-560] ; 0x100004AD
A1805322  7838     		ldrb r0, [r7]

#645					NOT	{LNXT:172|-1|-1}
(*) BOOL
A1805324  2800     		cmp r0, #0
A1805326  BF08 2001		eqmov r0, #1
A180532A  BF18 2000		nemov r0, #0

#646					AND(		Motor_A	{LNXT:172|-1|-1}
(*) BOOL
A180532E  B082     		sub sp, sp, #8
A1805330  F8CD 0000		str r0, [sp]
A1805334  F85F 724C		ldr r7, [pc, #-588] ; 0x100004AC
A1805338  7838     		ldrb r0, [r7]

#647					NOT	{LNXT:172|-1|-1}
(*) BOOL
A180533A  2800     		cmp r0, #0
A180533C  BF08 2001		eqmov r0, #1
A1805340  BF18 2000		nemov r0, #0

#648					AND(		Avto_C	{LNXT:172|-1|-1}
(*) BOOL
A1805344  B082     		sub sp, sp, #8
A1805346  F8CD 0000		str r0, [sp]
A180534A  F85F 7294		ldr r7, [pc, #-660] ; 0xA1A0002F
A180534E  7838     		ldrb r0, [r7]

#649					NOT	{LNXT:172|-1|-1}
(*) BOOL
A1805350  2800     		cmp r0, #0
A1805352  BF08 2001		eqmov r0, #1
A1805356  BF18 2000		nemov r0, #0

#650					AND(		ALM_C	{LNXT:172|-1|-1}
(*) BOOL
A180535A  B082     		sub sp, sp, #8
A180535C  F8CD 0000		str r0, [sp]
A1805360  F85F 72B0		ldr r7, [pc, #-688] ; 0xA1A0002E
A1805364  7838     		ldrb r0, [r7]

#651					NOT	{LNXT:172|-1|-1}
(*) BOOL
A1805366  2800     		cmp r0, #0
A1805368  BF08 2001		eqmov r0, #1
A180536C  BF18 2000		nemov r0, #0

#652					)	{LNXT:172|-1|-1}
(*) BOOL
A1805370  4607     		mov r7, r0
A1805372  F8DD 0000		ldr r0, [sp]
A1805376  B002     		add sp, sp, #8
A1805378  4038     		and r0, r0, r7

#653					)	{LNXT:172|-1|-1}
(*) BOOL
A180537A  4607     		mov r7, r0
A180537C  F8DD 0000		ldr r0, [sp]
A1805380  B002     		add sp, sp, #8
A1805382  4038     		and r0, r0, r7

#654					)	{LNXT:172|-1|-1}
(*) BOOL
A1805384  4607     		mov r7, r0
A1805386  F8DD 0000		ldr r0, [sp]
A180538A  B002     		add sp, sp, #8
A180538C  4038     		and r0, r0, r7

#655					JMPCN	$label48	{LNXT:172|174|188}
(-) BOOL
A180538E  2800     		cmp r0, #0
A1805390  D044     		beq #136 ; 0xA180541C


#656		
#657					(* THEN *)
#658		
#659		
#660						(* IF ALM_A AND Avto_A *)
#661						LD		ALM_A	{LNXT:174|-1|-1}
(*) UNDEF
A1805394  F85F 72F0		ldr r7, [pc, #-752] ; 0xA1A0002B
A1805398  7838     		ldrb r0, [r7]

#662						NOT	{LNXT:174|-1|-1}
(*) BOOL
A180539A  2800     		cmp r0, #0
A180539C  BF08 2001		eqmov r0, #1
A18053A0  BF18 2000		nemov r0, #0

#663						AND		Avto_A	{LNXT:174|-1|-1}
(*) BOOL
A18053A4  F85F 7304		ldr r7, [pc, #-772] ; 0xA1A0002A
A18053A8  783F     		ldrb r7, [r7]
A18053AA  4038     		and r0, r0, r7

#664						JMPCN	$label49	{LNXT:174|175|178}
(-) BOOL
A18053AC  2800     		cmp r0, #0
A18053AE  D014     		beq #40 ; 0xA18053DA


#665		
#666						(* THEN *)
#667		
#668							(* Motor_A := TRUE; *)
#669							MOVE		TRUE,Motor_A	{LNXT:175|176|-1}
(*) BOOL
A18053B2  2001     		mov r0, #1 ; 1
A18053B4  F85F 72CC		ldr r7, [pc, #-716] ; 0x100004AC
A18053B8  7038     		strb r0, [r7]

#670		
#671							(* Rotationnumber := (Rotationnumber + 1) MOD 3; *)
#672							LD		Rotationnumber	{LNXT:176|188|-1}
(*) UNDEF
A18053BA  F85F 72DC		ldr r7, [pc, #-732] ; 0xA1A0005A
A18053BE  F9B7 0000		ldrsh r0, [r7]

#673							ADD		1	{LNXT:176|188|-1}
(-) INT
A18053C2  1C40     		add r0, r0, #1

#674							MOD		3	{LNXT:176|188|-1}
(*) INT
A18053C4  2103     		mov r1, #3 ; 3
A18053C6  F85F 4348		ldr r4, [pc, #-840] ; 0xA1804500
A18053CA  F044 0401		orr r4, r4, #1
A18053CE  47A0     		blx r4

#675							ST		Rotationnumber	{LNXT:176|188|-1}
(*) INT
A18053D0  F85F 72F4		ldr r7, [pc, #-756] ; 0xA1A0005A
A18053D4  8038     		strh r0, [r7]

#676							JMP		$label50	{LNXT:174|175|178}
(-) INT
A18053D6  E021     		b #66 ; 0xA180541C


#677		$label49:
#678		
#679						(* ELSIF ALM_B AND Avto_B *)
#680						LD		ALM_B	{LNXT:178|-1|-1}
(*) UNDEF
A18053DA  F85F 7330		ldr r7, [pc, #-816] ; 0xA1A0002C
A18053DE  7838     		ldrb r0, [r7]

#681						NOT	{LNXT:178|-1|-1}
(*) BOOL
A18053E0  2800     		cmp r0, #0
A18053E2  BF08 2001		eqmov r0, #1
A18053E6  BF18 2000		nemov r0, #0

#682						AND		Avto_B	{LNXT:178|-1|-1}
(*) BOOL
A18053EA  F85F 733C		ldr r7, [pc, #-828] ; 0xA1A0002D
A18053EE  783F     		ldrb r7, [r7]
A18053F0  4038     		and r0, r0, r7

#683						JMPCN	$label50	{LNXT:178|179|188}
(-) BOOL
A18053F2  2800     		cmp r0, #0
A18053F4  D012     		beq #36 ; 0xA180541C


#684		
#685						(* THEN *)
#686		
#687							(* Motor_B := TRUE; *)
#688							MOVE		TRUE,Motor_B	{LNXT:179|180|-1}
(*) BOOL
A18053F8  2001     		mov r0, #1 ; 1
A18053FA  F85F 730C		ldr r7, [pc, #-780] ; 0x100004AD
A18053FE  7038     		strb r0, [r7]

#689		
#690							(* Rotationnumber := (Rotationnumber - 1) MOD 3; *)
#691							LD		Rotationnumber	{LNXT:180|188|-1}
(*) UNDEF
A1805400  F85F 7324		ldr r7, [pc, #-804] ; 0xA1A0005A
A1805404  F9B7 0000		ldrsh r0, [r7]

#692							SUB		1	{LNXT:180|188|-1}
(-) INT
A1805408  1E40     		sub r0, r0, #1

#693							MOD		3	{LNXT:180|188|-1}
(*) INT
A180540A  2103     		mov r1, #3 ; 3
A180540C  F85F 4390		ldr r4, [pc, #-912] ; 0xA1804500
A1805410  F044 0401		orr r4, r4, #1
A1805414  47A0     		blx r4

#694							ST		Rotationnumber	{LNXT:180|188|-1}
(*) INT
A1805416  F85F 7338		ldr r7, [pc, #-824] ; 0xA1A0005A
A180541A  8038     		strh r0, [r7]

#695		
#696		$label50:
#697						(* END_IF *)
#698		
#699		$label48:
#700					(* END_IF *)
#701		
#702		$label35:
#703		
#704				(* END_CASE *)
#705		
#706		$label34:
#707			(* END_IF *)
#708		
#709		
#710			(* IF ALM_A or NOT Avto_A *)
#711			LD		Avto_A	{LNXT:188|-1|-1}
(*) UNDEF
A180541C  F85F 737C		ldr r7, [pc, #-892] ; 0xA1A0002A
A1805420  7838     		ldrb r0, [r7]

#712			NOT	{LNXT:188|-1|-1}
(*) BOOL
A1805422  2800     		cmp r0, #0
A1805424  BF08 2001		eqmov r0, #1
A1805428  BF18 2000		nemov r0, #0

#713			OR		ALM_A	{LNXT:188|-1|-1}
(*) BOOL
A180542C  F85F 7388		ldr r7, [pc, #-904] ; 0xA1A0002B
A1805430  783F     		ldrb r7, [r7]
A1805432  4338     		orr r0, r0, r7

#714			JMPCN	$label51	{LNXT:188|189|191}
(-) BOOL
A1805434  2800     		cmp r0, #0
A1805436  D004     		beq #8 ; 0xA1805442


#715		
#716			(* THEN *)
#717		
#718				(* Motor_A := False; *)
#719				MOVE		False,Motor_A	{LNXT:189|191|-1}
(*) BOOL
A180543A  2000     		mov r0, #0 ; 0
A180543C  F85F 7354		ldr r7, [pc, #-852] ; 0x100004AC
A1805440  7038     		strb r0, [r7]

#720		
#721		$label51:
#722			(* END_IF *)
#723		
#724		
#725			(* IF ALM_B or NOT Avto_B *)
#726			LD		Avto_B	{LNXT:191|-1|-1}
(*) UNDEF
A1805442  F85F 7394		ldr r7, [pc, #-916] ; 0xA1A0002D
A1805446  7838     		ldrb r0, [r7]

#727			NOT	{LNXT:191|-1|-1}
(*) BOOL
A1805448  2800     		cmp r0, #0
A180544A  BF08 2001		eqmov r0, #1
A180544E  BF18 2000		nemov r0, #0

#728			OR		ALM_B	{LNXT:191|-1|-1}
(*) BOOL
A1805452  F85F 73A8		ldr r7, [pc, #-936] ; 0xA1A0002C
A1805456  783F     		ldrb r7, [r7]
A1805458  4338     		orr r0, r0, r7

#729			JMPCN	$label52	{LNXT:191|192|194}
(-) BOOL
A180545A  2800     		cmp r0, #0
A180545C  D004     		beq #8 ; 0xA1805468


#730		
#731			(* THEN *)
#732		
#733				(* Motor_B := False; *)
#734				MOVE		False,Motor_B	{LNXT:192|194|-1}
(*) BOOL
A1805460  2000     		mov r0, #0 ; 0
A1805462  F85F 7374		ldr r7, [pc, #-884] ; 0x100004AD
A1805466  7038     		strb r0, [r7]

#735		
#736		$label52:
#737			(* END_IF *)
#738		
#739		
#740			(* IF ALM_C or NOT Avto_C *)
#741			LD		Avto_C	{LNXT:194|-1|-1}
(*) UNDEF
A1805468  F85F 73B4		ldr r7, [pc, #-948] ; 0xA1A0002F
A180546C  7838     		ldrb r0, [r7]

#742			NOT	{LNXT:194|-1|-1}
(*) BOOL
A180546E  2800     		cmp r0, #0
A1805470  BF08 2001		eqmov r0, #1
A1805474  BF18 2000		nemov r0, #0

#743			OR		ALM_C	{LNXT:194|-1|-1}
(*) BOOL
A1805478  F85F 73C8		ldr r7, [pc, #-968] ; 0xA1A0002E
A180547C  783F     		ldrb r7, [r7]
A180547E  4338     		orr r0, r0, r7

#744			JMPCN	$label53	{LNXT:194|195|205}
(-) BOOL
A1805480  2800     		cmp r0, #0
A1805482  D004     		beq #8 ; 0xA180548E


#745		
#746			(* THEN *)
#747		
#748				(* Motor_C := False; *)
#749				MOVE		False,Motor_C	{LNXT:195|205|-1}
(*) BOOL
A1805486  2000     		mov r0, #0 ; 0
A1805488  F85F 7398		ldr r7, [pc, #-920] ; 0x100004AE
A180548C  7038     		strb r0, [r7]

#750		
#751		$label53:
#752			(* END_IF *)
#753		
#754		
#755			(* IF Tank_Level >= Level_1 AND NOT Rotation AND NOT FastRunMode *)
#756			LD		FastRunMode	{LNXT:205|-1|-1}
(*) UNDEF
A180548E  F85F 73B4		ldr r7, [pc, #-948] ; 0xA1A00058
A1805492  7838     		ldrb r0, [r7]

#757			NOT	{LNXT:205|-1|-1}
(*) BOOL
A1805494  2800     		cmp r0, #0
A1805496  BF08 2001		eqmov r0, #1
A180549A  BF18 2000		nemov r0, #0

#758			AND(		Rotation	{LNXT:205|-1|-1}
(*) BOOL
A180549E  B082     		sub sp, sp, #8
A18054A0  F8CD 0000		str r0, [sp]
A18054A4  F85F 7468		ldr r7, [pc, #-1128] ; 0xA0003F10
A18054A8  7838     		ldrb r0, [r7]

#759			NOT	{LNXT:205|-1|-1}
(*) BOOL
A18054AA  2800     		cmp r0, #0
A18054AC  BF08 2001		eqmov r0, #1
A18054B0  BF18 2000		nemov r0, #0

#760			AND(		Tank_Level	{LNXT:205|-1|-1}
(*) BOOL
A18054B4  B082     		sub sp, sp, #8
A18054B6  F8CD 0000		str r0, [sp]
A18054BA  F85F 7430		ldr r7, [pc, #-1072] ; 0xA1A00012
A18054BE  F9B7 0000		ldrsh r0, [r7]

#761			GE		Level_1	{LNXT:205|-1|-1}
(*) INT
A18054C2  F85F 7494		ldr r7, [pc, #-1172] ; 0xA0003F06
A18054C6  F9B7 7000		ldrsh r7, [r7]
A18054CA  42B8     		cmp r0, r7
A18054CC  BFB8 2000		ltmov r0, #0
A18054D0  BFA8 2001		gemov r0, #1

#762			)	{LNXT:205|-1|-1}
(*) BOOL
A18054D4  4607     		mov r7, r0
A18054D6  F8DD 0000		ldr r0, [sp]
A18054DA  B002     		add sp, sp, #8
A18054DC  4038     		and r0, r0, r7

#763			)	{LNXT:205|-1|-1}
(*) BOOL
A18054DE  4607     		mov r7, r0
A18054E0  F8DD 0000		ldr r0, [sp]
A18054E4  B002     		add sp, sp, #8
A18054E6  4038     		and r0, r0, r7

#764			JMPCN	$label54	{LNXT:205|208|274}
(-) BOOL
A18054E8  2800     		cmp r0, #0
A18054EA  F000 81A7		beq #846 ; 0xA180583C


#765		
#766			(* THEN *)
#767		
#768		
#769				(* CASE Priority OF *)
#770		
#771				(* 0: *)
#772				LD		Priority	{LNXT:208|-1|-1}
(*) UNDEF
A18054EE  F85F 74B4		ldr r7, [pc, #-1204] ; 0xA0003F0C
A18054F2  F9B7 0000		ldrsh r0, [r7]

#773				EQ		0	{LNXT:208|-1|-1}
(*) INT
A18054F6  2800     		cmp r0, #0
A18054F8  BF18 2000		nemov r0, #0
A18054FC  BF08 2001		eqmov r0, #1

#774				JMPC		$label56	{LNXT:208|209|229}
(-) BOOL
A1805500  2800     		cmp r0, #0
A1805502  D11A     		bne #52 ; 0xA180553A


#775		
#776				(* 1: *)
#777				LD		Priority	{LNXT:229|-1|-1}
(*) UNDEF
A1805506  F85F 74CC		ldr r7, [pc, #-1228] ; 0xA0003F0C
A180550A  F9B7 0000		ldrsh r0, [r7]

#778				EQ		1	{LNXT:229|-1|-1}
(*) INT
A180550E  2801     		cmp r0, #1
A1805510  BF18 2000		nemov r0, #0
A1805514  BF08 2001		eqmov r0, #1

#779				JMPC		$label57	{LNXT:229|230|249}
(-) BOOL
A1805518  2800     		cmp r0, #0
A180551A  F040 808F		bne #286 ; 0xA180563C


#780		
#781				(* 2: *)
#782				LD		Priority	{LNXT:249|-1|-1}
(*) UNDEF
A180551E  F85F 74E4		ldr r7, [pc, #-1252] ; 0xA0003F0C
A1805522  F9B7 0000		ldrsh r0, [r7]

#783				EQ		2	{LNXT:249|-1|-1}
(*) INT
A1805526  2802     		cmp r0, #2
A1805528  BF18 2000		nemov r0, #0
A180552C  BF08 2001		eqmov r0, #1

#784				JMPC		$label58	{LNXT:249|250|274}
(-) BOOL
A1805530  2800     		cmp r0, #0
A1805532  F040 8104		bne #520 ; 0xA180573E


#785				JMP		$label55	{LNXT:249|250|274}
(-) BOOL
A1805536  E181     		b #770 ; 0xA180583C


#786		
#787				(* Istruzioni di ciascun CASE: *)
#788		
#789		$label56:
#790		
#791					(* IF Motor_B AND NOT Motor_C *)
#792					LD		Motor_C	{LNXT:209|-1|-1}
(*) UNDEF
A180553A  F85F 7448		ldr r7, [pc, #-1096] ; 0x100004AE
A180553E  7838     		ldrb r0, [r7]

#793					NOT	{LNXT:209|-1|-1}
(*) BOOL
A1805540  2800     		cmp r0, #0
A1805542  BF08 2001		eqmov r0, #1
A1805546  BF18 2000		nemov r0, #0

#794					AND(		Motor_B	{LNXT:209|-1|-1}
(*) BOOL
A180554A  B082     		sub sp, sp, #8
A180554C  F8CD 0000		str r0, [sp]
A1805550  F85F 7464		ldr r7, [pc, #-1124] ; 0x100004AD
A1805554  7838     		ldrb r0, [r7]

#795					NOT	{LNXT:209|-1|-1}
(*) BOOL
A1805556  2800     		cmp r0, #0
A1805558  BF08 2001		eqmov r0, #1
A180555C  BF18 2000		nemov r0, #0

#796					)	{LNXT:209|-1|-1}
(*) BOOL
A1805560  4607     		mov r7, r0
A1805562  F8DD 0000		ldr r0, [sp]
A1805566  B002     		add sp, sp, #8
A1805568  4038     		and r0, r0, r7

#797					JMPCN	$label59	{LNXT:209|210|274}
(-) BOOL
A180556A  2800     		cmp r0, #0
A180556C  D064     		beq #200 ; 0xA1805638


#798		
#799					(* THEN *)
#800		
#801		
#802						(* IF ALM_A AND Avto_A *)
#803						LD		ALM_A	{LNXT:210|-1|-1}
(*) UNDEF
A1805570  F85F 74CC		ldr r7, [pc, #-1228] ; 0xA1A0002B
A1805574  7838     		ldrb r0, [r7]

#804						NOT	{LNXT:210|-1|-1}
(*) BOOL
A1805576  2800     		cmp r0, #0
A1805578  BF08 2001		eqmov r0, #1
A180557C  BF18 2000		nemov r0, #0

#805						AND		Avto_A	{LNXT:210|-1|-1}
(*) BOOL
A1805580  F85F 74E0		ldr r7, [pc, #-1248] ; 0xA1A0002A
A1805584  783F     		ldrb r7, [r7]
A1805586  4038     		and r0, r0, r7

#806						JMPCN	$label60	{LNXT:210|211|215}
(-) BOOL
A1805588  2800     		cmp r0, #0
A180558A  D00A     		beq #20 ; 0xA18055A2


#807		
#808						(* THEN *)
#809		
#810							(* Priority := 0; *)
#811							MOVE		0,Priority	{LNXT:211|212|-1}
(*) BOOL
A180558E  2000     		mov r0, #0 ; 0
A1805590  F85F 7558		ldr r7, [pc, #-1368] ; 0xA0003F0C
A1805594  8038     		strh r0, [r7]

#812		
#813							(* Motor_A := TRUE; *)
#814							MOVE		TRUE,Motor_A	{LNXT:212|274|-1}
(*) INT
A1805596  2001     		mov r0, #1 ; 1
A1805598  F85F 74B0		ldr r7, [pc, #-1200] ; 0x100004AC
A180559C  7038     		strb r0, [r7]

#815							JMP		$label61	{LNXT:210|211|215}
(-) BOOL
A180559E  E04B     		b #150 ; 0xA1805638


#816		$label60:
#817		
#818						(* ELSIF ALM_A AND Not Avto_A *)
#819						LD		Avto_A	{LNXT:215|-1|-1}
(*) UNDEF
A18055A2  F85F 7500		ldr r7, [pc, #-1280] ; 0xA1A0002A
A18055A6  7838     		ldrb r0, [r7]

#820						NOT	{LNXT:215|-1|-1}
(*) BOOL
A18055A8  2800     		cmp r0, #0
A18055AA  BF08 2001		eqmov r0, #1
A18055AE  BF18 2000		nemov r0, #0

#821						AND(		ALM_A	{LNXT:215|-1|-1}
(*) BOOL
A18055B2  B082     		sub sp, sp, #8
A18055B4  F8CD 0000		str r0, [sp]
A18055B8  F85F 7514		ldr r7, [pc, #-1300] ; 0xA1A0002B
A18055BC  7838     		ldrb r0, [r7]

#822						NOT	{LNXT:215|-1|-1}
(*) BOOL
A18055BE  2800     		cmp r0, #0
A18055C0  BF08 2001		eqmov r0, #1
A18055C4  BF18 2000		nemov r0, #0

#823						)	{LNXT:215|-1|-1}
(*) BOOL
A18055C8  4607     		mov r7, r0
A18055CA  F8DD 0000		ldr r0, [sp]
A18055CE  B002     		add sp, sp, #8
A18055D0  4038     		and r0, r0, r7

#824						JMPCN	$label61	{LNXT:215|217|274}
(-) BOOL
A18055D2  2800     		cmp r0, #0
A18055D4  D030     		beq #96 ; 0xA1805638


#825		
#826						(* THEN *)
#827		
#828		
#829							(* IF ALM_B AND Avto_B *)
#830							LD		ALM_B	{LNXT:217|-1|-1}
(*) UNDEF
A18055D8  F85F 7530		ldr r7, [pc, #-1328] ; 0xA1A0002C
A18055DC  7838     		ldrb r0, [r7]

#831							NOT	{LNXT:217|-1|-1}
(*) BOOL
A18055DE  2800     		cmp r0, #0
A18055E0  BF08 2001		eqmov r0, #1
A18055E4  BF18 2000		nemov r0, #0

#832							AND		Avto_B	{LNXT:217|-1|-1}
(*) BOOL
A18055E8  F85F 753C		ldr r7, [pc, #-1340] ; 0xA1A0002D
A18055EC  783F     		ldrb r7, [r7]
A18055EE  4038     		and r0, r0, r7

#833							JMPCN	$label62	{LNXT:217|218|221}
(-) BOOL
A18055F0  2800     		cmp r0, #0
A18055F2  D00A     		beq #20 ; 0xA180560A


#834		
#835							(* THEN *)
#836		
#837								(* Priority := 1; *)
#838								MOVE		1,Priority	{LNXT:218|219|-1}
(*) BOOL
A18055F6  2001     		mov r0, #1 ; 1
A18055F8  F85F 75C0		ldr r7, [pc, #-1472] ; 0xA0003F0C
A18055FC  8038     		strh r0, [r7]

#839		
#840								(* Motor_B := TRUE; *)
#841								MOVE		TRUE,Motor_B	{LNXT:219|274|-1}
(*) INT
A18055FE  2001     		mov r0, #1 ; 1
A1805600  F85F 7514		ldr r7, [pc, #-1300] ; 0x100004AD
A1805604  7038     		strb r0, [r7]

#842								JMP		$label63	{LNXT:217|218|221}
(-) BOOL
A1805606  E017     		b #46 ; 0xA1805638


#843		$label62:
#844		
#845							(* ELSIF ALM_C AND Avto_C *)
#846							LD		ALM_C	{LNXT:221|-1|-1}
(*) UNDEF
A180560A  F85F 7558		ldr r7, [pc, #-1368] ; 0xA1A0002E
A180560E  7838     		ldrb r0, [r7]

#847							NOT	{LNXT:221|-1|-1}
(*) BOOL
A1805610  2800     		cmp r0, #0
A1805612  BF08 2001		eqmov r0, #1
A1805616  BF18 2000		nemov r0, #0

#848							AND		Avto_C	{LNXT:221|-1|-1}
(*) BOOL
A180561A  F85F 7564		ldr r7, [pc, #-1380] ; 0xA1A0002F
A180561E  783F     		ldrb r7, [r7]
A1805620  4038     		and r0, r0, r7

#849							JMPCN	$label63	{LNXT:221|222|274}
(-) BOOL
A1805622  2800     		cmp r0, #0
A1805624  D008     		beq #16 ; 0xA1805638


#850		
#851							(* THEN *)
#852		
#853								(* Priority := 2; *)
#854								MOVE		2,Priority	{LNXT:222|223|-1}
(*) BOOL
A1805628  2002     		mov r0, #2 ; 2
A180562A  F85F 75F0		ldr r7, [pc, #-1520] ; 0xA0003F0C
A180562E  8038     		strh r0, [r7]

#855		
#856								(* Motor_C := TRUE; *)
#857								MOVE		TRUE,Motor_C	{LNXT:223|274|-1}
(*) INT
A1805630  2001     		mov r0, #1 ; 1
A1805632  F85F 7540		ldr r7, [pc, #-1344] ; 0x100004AE
A1805636  7038     		strb r0, [r7]

#858		
#859		$label63:
#860							(* END_IF *)
#861		
#862		$label61:
#863						(* END_IF *)
#864		
#865		$label59:
#866					(* END_IF *)
#867					JMP		$label55	{LNXT:1|274|-1}
(-) BOOL
A1805638  E100     		b #512 ; 0xA180583C


#868		
#869		$label57:
#870		
#871					(* IF Motor_A AND NOT Motor_C *)
#872					LD		Motor_C	{LNXT:230|-1|-1}
(*) UNDEF
A180563C  F85F 754C		ldr r7, [pc, #-1356] ; 0x100004AE
A1805640  7838     		ldrb r0, [r7]

#873					NOT	{LNXT:230|-1|-1}
(*) BOOL
A1805642  2800     		cmp r0, #0
A1805644  BF08 2001		eqmov r0, #1
A1805648  BF18 2000		nemov r0, #0

#874					AND(		Motor_A	{LNXT:230|-1|-1}
(*) BOOL
A180564C  B082     		sub sp, sp, #8
A180564E  F8CD 0000		str r0, [sp]
A1805652  F85F 7568		ldr r7, [pc, #-1384] ; 0x100004AC
A1805656  7838     		ldrb r0, [r7]

#875					NOT	{LNXT:230|-1|-1}
(*) BOOL
A1805658  2800     		cmp r0, #0
A180565A  BF08 2001		eqmov r0, #1
A180565E  BF18 2000		nemov r0, #0

#876					)	{LNXT:230|-1|-1}
(*) BOOL
A1805662  4607     		mov r7, r0
A1805664  F8DD 0000		ldr r0, [sp]
A1805668  B002     		add sp, sp, #8
A180566A  4038     		and r0, r0, r7

#877					JMPCN	$label64	{LNXT:230|231|274}
(-) BOOL
A180566C  2800     		cmp r0, #0
A180566E  D064     		beq #200 ; 0xA180573A


#878		
#879					(* THEN *)
#880		
#881		
#882						(* IF ALM_B AND Avto_B *)
#883						LD		ALM_B	{LNXT:231|-1|-1}
(*) UNDEF
A1805672  F85F 75C8		ldr r7, [pc, #-1480] ; 0xA1A0002C
A1805676  7838     		ldrb r0, [r7]

#884						NOT	{LNXT:231|-1|-1}
(*) BOOL
A1805678  2800     		cmp r0, #0
A180567A  BF08 2001		eqmov r0, #1
A180567E  BF18 2000		nemov r0, #0

#885						AND		Avto_B	{LNXT:231|-1|-1}
(*) BOOL
A1805682  F85F 75D4		ldr r7, [pc, #-1492] ; 0xA1A0002D
A1805686  783F     		ldrb r7, [r7]
A1805688  4038     		and r0, r0, r7

#886						JMPCN	$label65	{LNXT:231|232|235}
(-) BOOL
A180568A  2800     		cmp r0, #0
A180568C  D00A     		beq #20 ; 0xA18056A4


#887		
#888						(* THEN *)
#889		
#890							(* Priority := 1; *)
#891							MOVE		1,Priority	{LNXT:232|233|-1}
(*) BOOL
A1805690  2001     		mov r0, #1 ; 1
A1805692  F85F 7658		ldr r7, [pc, #-1624] ; 0xA0003F0C
A1805696  8038     		strh r0, [r7]

#892		
#893							(* Motor_B := TRUE; *)
#894							MOVE		TRUE,Motor_B	{LNXT:233|274|-1}
(*) INT
A1805698  2001     		mov r0, #1 ; 1
A180569A  F85F 75AC		ldr r7, [pc, #-1452] ; 0x100004AD
A180569E  7038     		strb r0, [r7]

#895							JMP		$label66	{LNXT:231|232|235}
(-) BOOL
A18056A0  E04B     		b #150 ; 0xA180573A


#896		$label65:
#897		
#898						(* ELSIF ALM_B  AND NOT Avto_B *)
#899						LD		Avto_B	{LNXT:235|-1|-1}
(*) UNDEF
A18056A4  F85F 75F8		ldr r7, [pc, #-1528] ; 0xA1A0002D
A18056A8  7838     		ldrb r0, [r7]

#900						NOT	{LNXT:235|-1|-1}
(*) BOOL
A18056AA  2800     		cmp r0, #0
A18056AC  BF08 2001		eqmov r0, #1
A18056B0  BF18 2000		nemov r0, #0

#901						AND(		ALM_B	{LNXT:235|-1|-1}
(*) BOOL
A18056B4  B082     		sub sp, sp, #8
A18056B6  F8CD 0000		str r0, [sp]
A18056BA  F85F 7610		ldr r7, [pc, #-1552] ; 0xA1A0002C
A18056BE  7838     		ldrb r0, [r7]

#902						NOT	{LNXT:235|-1|-1}
(*) BOOL
A18056C0  2800     		cmp r0, #0
A18056C2  BF08 2001		eqmov r0, #1
A18056C6  BF18 2000		nemov r0, #0

#903						)	{LNXT:235|-1|-1}
(*) BOOL
A18056CA  4607     		mov r7, r0
A18056CC  F8DD 0000		ldr r0, [sp]
A18056D0  B002     		add sp, sp, #8
A18056D2  4038     		and r0, r0, r7

#904						JMPCN	$label66	{LNXT:235|237|274}
(-) BOOL
A18056D4  2800     		cmp r0, #0
A18056D6  D030     		beq #96 ; 0xA180573A


#905		
#906						(* THEN *)
#907		
#908		
#909							(* IF ALM_A AND Avto_A *)
#910							LD		ALM_A	{LNXT:237|-1|-1}
(*) UNDEF
A18056DA  F85F 7634		ldr r7, [pc, #-1588] ; 0xA1A0002B
A18056DE  7838     		ldrb r0, [r7]

#911							NOT	{LNXT:237|-1|-1}
(*) BOOL
A18056E0  2800     		cmp r0, #0
A18056E2  BF08 2001		eqmov r0, #1
A18056E6  BF18 2000		nemov r0, #0

#912							AND		Avto_A	{LNXT:237|-1|-1}
(*) BOOL
A18056EA  F85F 7648		ldr r7, [pc, #-1608] ; 0xA1A0002A
A18056EE  783F     		ldrb r7, [r7]
A18056F0  4038     		and r0, r0, r7

#913							JMPCN	$label67	{LNXT:237|238|241}
(-) BOOL
A18056F2  2800     		cmp r0, #0
A18056F4  D00A     		beq #20 ; 0xA180570C


#914		
#915							(* THEN *)
#916		
#917								(* Priority := 0; *)
#918								MOVE		0,Priority	{LNXT:238|239|-1}
(*) BOOL
A18056F8  2000     		mov r0, #0 ; 0
A18056FA  F85F 76C0		ldr r7, [pc, #-1728] ; 0xA0003F0C
A18056FE  8038     		strh r0, [r7]

#919		
#920								(* Motor_A := TRUE; *)
#921								MOVE		TRUE,Motor_A	{LNXT:239|274|-1}
(*) INT
A1805700  2001     		mov r0, #1 ; 1
A1805702  F85F 7618		ldr r7, [pc, #-1560] ; 0x100004AC
A1805706  7038     		strb r0, [r7]

#922								JMP		$label68	{LNXT:237|238|241}
(-) BOOL
A1805708  E017     		b #46 ; 0xA180573A


#923		$label67:
#924		
#925							(* ELSE *)
#926		
#927		
#928								(* IF ALM_C AND Avto_C *)
#929								LD		ALM_C	{LNXT:241|-1|-1}
(*) UNDEF
A180570C  F85F 765C		ldr r7, [pc, #-1628] ; 0xA1A0002E
A1805710  7838     		ldrb r0, [r7]

#930								NOT	{LNXT:241|-1|-1}
(*) BOOL
A1805712  2800     		cmp r0, #0
A1805714  BF08 2001		eqmov r0, #1
A1805718  BF18 2000		nemov r0, #0

#931								AND		Avto_C	{LNXT:241|-1|-1}
(*) BOOL
A180571C  F85F 7668		ldr r7, [pc, #-1640] ; 0xA1A0002F
A1805720  783F     		ldrb r7, [r7]
A1805722  4038     		and r0, r0, r7

#932								JMPCN	$label69	{LNXT:241|242|274}
(-) BOOL
A1805724  2800     		cmp r0, #0
A1805726  D008     		beq #16 ; 0xA180573A


#933		
#934								(* THEN *)
#935		
#936									(* Priority := 2; *)
#937									MOVE		2,Priority	{LNXT:242|243|-1}
(*) BOOL
A180572A  2002     		mov r0, #2 ; 2
A180572C  F85F 76F4		ldr r7, [pc, #-1780] ; 0xA0003F0C
A1805730  8038     		strh r0, [r7]

#938		
#939									(* Motor_C := TRUE; *)
#940									MOVE		TRUE,Motor_C	{LNXT:243|274|-1}
(*) INT
A1805732  2001     		mov r0, #1 ; 1
A1805734  F85F 7644		ldr r7, [pc, #-1604] ; 0x100004AE
A1805738  7038     		strb r0, [r7]

#941		
#942		$label69:
#943								(* END_IF *)
#944		
#945		$label68:
#946							(* END_IF *)
#947		
#948		$label66:
#949						(* END_IF *)
#950		
#951		$label64:
#952					(* END_IF *)
#953					JMP		$label55	{LNXT:1|274|-1}
(-) BOOL
A180573A  E07F     		b #254 ; 0xA180583C


#954		
#955		$label58:
#956		
#957					(* IF Motor_A AND NOT Motor_B *)
#958					LD		Motor_B	{LNXT:250|-1|-1}
(*) UNDEF
A180573E  F85F 7650		ldr r7, [pc, #-1616] ; 0x100004AD
A1805742  7838     		ldrb r0, [r7]

#959					NOT	{LNXT:250|-1|-1}
(*) BOOL
A1805744  2800     		cmp r0, #0
A1805746  BF08 2001		eqmov r0, #1
A180574A  BF18 2000		nemov r0, #0

#960					AND(		Motor_A	{LNXT:250|-1|-1}
(*) BOOL
A180574E  B082     		sub sp, sp, #8
A1805750  F8CD 0000		str r0, [sp]
A1805754  F85F 766C		ldr r7, [pc, #-1644] ; 0x100004AC
A1805758  7838     		ldrb r0, [r7]

#961					NOT	{LNXT:250|-1|-1}
(*) BOOL
A180575A  2800     		cmp r0, #0
A180575C  BF08 2001		eqmov r0, #1
A1805760  BF18 2000		nemov r0, #0

#962					)	{LNXT:250|-1|-1}
(*) BOOL
A1805764  4607     		mov r7, r0
A1805766  F8DD 0000		ldr r0, [sp]
A180576A  B002     		add sp, sp, #8
A180576C  4038     		and r0, r0, r7

#963					JMPCN	$label70	{LNXT:250|251|274}
(-) BOOL
A180576E  2800     		cmp r0, #0
A1805770  D064     		beq #200 ; 0xA180583C


#964		
#965					(* THEN *)
#966		
#967		
#968						(* IF ALM_C AND Avto_C *)
#969						LD		ALM_C	{LNXT:251|-1|-1}
(*) UNDEF
A1805774  F85F 76C4		ldr r7, [pc, #-1732] ; 0xA1A0002E
A1805778  7838     		ldrb r0, [r7]

#970						NOT	{LNXT:251|-1|-1}
(*) BOOL
A180577A  2800     		cmp r0, #0
A180577C  BF08 2001		eqmov r0, #1
A1805780  BF18 2000		nemov r0, #0

#971						AND		Avto_C	{LNXT:251|-1|-1}
(*) BOOL
A1805784  F85F 76D0		ldr r7, [pc, #-1744] ; 0xA1A0002F
A1805788  783F     		ldrb r7, [r7]
A180578A  4038     		and r0, r0, r7

#972						JMPCN	$label71	{LNXT:251|252|255}
(-) BOOL
A180578C  2800     		cmp r0, #0
A180578E  D00A     		beq #20 ; 0xA18057A6


#973		
#974						(* THEN *)
#975		
#976							(* Priority := 2; *)
#977							MOVE		2,Priority	{LNXT:252|253|-1}
(*) BOOL
A1805792  2002     		mov r0, #2 ; 2
A1805794  F85F 775C		ldr r7, [pc, #-1884] ; 0xA0003F0C
A1805798  8038     		strh r0, [r7]

#978		
#979							(* Motor_C := TRUE; *)
#980							MOVE		TRUE,Motor_C	{LNXT:253|274|-1}
(*) INT
A180579A  2001     		mov r0, #1 ; 1
A180579C  F85F 76AC		ldr r7, [pc, #-1708] ; 0x100004AE
A18057A0  7038     		strb r0, [r7]

#981							JMP		$label72	{LNXT:251|252|255}
(-) BOOL
A18057A2  E04B     		b #150 ; 0xA180583C


#982		$label71:
#983		
#984						(* ELSIF ALM_C AND NOT Avto_C *)
#985						LD		Avto_C	{LNXT:255|-1|-1}
(*) UNDEF
A18057A6  F85F 76F0		ldr r7, [pc, #-1776] ; 0xA1A0002F
A18057AA  7838     		ldrb r0, [r7]

#986						NOT	{LNXT:255|-1|-1}
(*) BOOL
A18057AC  2800     		cmp r0, #0
A18057AE  BF08 2001		eqmov r0, #1
A18057B2  BF18 2000		nemov r0, #0

#987						AND(		ALM_C	{LNXT:255|-1|-1}
(*) BOOL
A18057B6  B082     		sub sp, sp, #8
A18057B8  F8CD 0000		str r0, [sp]
A18057BC  F85F 770C		ldr r7, [pc, #-1804] ; 0xA1A0002E
A18057C0  7838     		ldrb r0, [r7]

#988						NOT	{LNXT:255|-1|-1}
(*) BOOL
A18057C2  2800     		cmp r0, #0
A18057C4  BF08 2001		eqmov r0, #1
A18057C8  BF18 2000		nemov r0, #0

#989						)	{LNXT:255|-1|-1}
(*) BOOL
A18057CC  4607     		mov r7, r0
A18057CE  F8DD 0000		ldr r0, [sp]
A18057D2  B002     		add sp, sp, #8
A18057D4  4038     		and r0, r0, r7

#990						JMPCN	$label72	{LNXT:255|257|274}
(-) BOOL
A18057D6  2800     		cmp r0, #0
A18057D8  D030     		beq #96 ; 0xA180583C


#991		
#992						(* THEN *)
#993		
#994		
#995							(* IF ALM_A AND Avto_A *)
#996							LD		ALM_A	{LNXT:257|-1|-1}
(*) UNDEF
A18057DC  F85F 7738		ldr r7, [pc, #-1848] ; 0xA1A0002B
A18057E0  7838     		ldrb r0, [r7]

#997							NOT	{LNXT:257|-1|-1}
(*) BOOL
A18057E2  2800     		cmp r0, #0
A18057E4  BF08 2001		eqmov r0, #1
A18057E8  BF18 2000		nemov r0, #0

#998							AND		Avto_A	{LNXT:257|-1|-1}
(*) BOOL
A18057EC  F85F 774C		ldr r7, [pc, #-1868] ; 0xA1A0002A
A18057F0  783F     		ldrb r7, [r7]
A18057F2  4038     		and r0, r0, r7

#999							JMPCN	$label73	{LNXT:257|258|261}
(-) BOOL
A18057F4  2800     		cmp r0, #0
A18057F6  D00A     		beq #20 ; 0xA180580E


#1000		
#1001							(* THEN *)
#1002		
#1003								(* Priority := 0; *)
#1004								MOVE		0,Priority	{LNXT:258|259|-1}
(*) BOOL
A18057FA  2000     		mov r0, #0 ; 0
A18057FC  F85F 77C4		ldr r7, [pc, #-1988] ; 0xA0003F0C
A1805800  8038     		strh r0, [r7]

#1005		
#1006								(* Motor_A := TRUE; *)
#1007								MOVE		TRUE,Motor_A	{LNXT:259|274|-1}
(*) INT
A1805802  2001     		mov r0, #1 ; 1
A1805804  F85F 771C		ldr r7, [pc, #-1820] ; 0x100004AC
A1805808  7038     		strb r0, [r7]

#1008								JMP		$label74	{LNXT:257|258|261}
(-) BOOL
A180580A  E017     		b #46 ; 0xA180583C


#1009		$label73:
#1010		
#1011							(* ELSIF ALM_B AND Avto_B *)
#1012							LD		ALM_B	{LNXT:261|-1|-1}
(*) UNDEF
A180580E  F85F 7764		ldr r7, [pc, #-1892] ; 0xA1A0002C
A1805812  7838     		ldrb r0, [r7]

#1013							NOT	{LNXT:261|-1|-1}
(*) BOOL
A1805814  2800     		cmp r0, #0
A1805816  BF08 2001		eqmov r0, #1
A180581A  BF18 2000		nemov r0, #0

#1014							AND		Avto_B	{LNXT:261|-1|-1}
(*) BOOL
A180581E  F85F 7770		ldr r7, [pc, #-1904] ; 0xA1A0002D
A1805822  783F     		ldrb r7, [r7]
A1805824  4038     		and r0, r0, r7

#1015							JMPCN	$label74	{LNXT:261|262|274}
(-) BOOL
A1805826  2800     		cmp r0, #0
A1805828  D008     		beq #16 ; 0xA180583C


#1016		
#1017							(* THEN *)
#1018		
#1019								(* Priority := 1; *)
#1020								MOVE		1,Priority	{LNXT:262|263|-1}
(*) BOOL
A180582C  2001     		mov r0, #1 ; 1
A180582E  F85F 77F4		ldr r7, [pc, #-2036] ; 0xA0003F0C
A1805832  8038     		strh r0, [r7]

#1021		
#1022								(* Motor_B := TRUE; *)
#1023								MOVE		TRUE,Motor_B	{LNXT:263|274|-1}
(*) INT
A1805834  2001     		mov r0, #1 ; 1
A1805836  F85F 7748		ldr r7, [pc, #-1864] ; 0x100004AD
A180583A  7038     		strb r0, [r7]

#1024		
#1025		$label74:
#1026							(* END_IF *)
#1027		
#1028		$label72:
#1029						(* END_IF *)
#1030		
#1031		$label70:
#1032					(* END_IF *)
#1033		
#1034		$label55:
#1035		
#1036				(* END_CASE *)
#1037		
#1038		$label54:
#1039			(* END_IF *)
#1040		
#1041		
#1042			(* IF Rotation AND FastRunMode *)
#1043			LD		Rotation	{LNXT:274|-1|-1}
(*) UNDEF
A180583C  F85F 7800		ldr r7, [pc, #-2048] ; 0xA0003F10
A1805840  7838     		ldrb r0, [r7]

#1044			NOT	{LNXT:274|-1|-1}
(*) BOOL
A1805842  2800     		cmp r0, #0
A1805844  BF08 2001		eqmov r0, #1
A1805848  BF18 2000		nemov r0, #0

#1045			AND		FastRunMode	{LNXT:274|-1|-1}
(*) BOOL
A180584C  F85F 7774		ldr r7, [pc, #-1908] ; 0xA1A00058
A1805850  783F     		ldrb r7, [r7]
A1805852  4038     		and r0, r0, r7

#1046			JMPCN	$label75	{LNXT:274|277|385}
(-) BOOL
A1805854  2800     		cmp r0, #0
A1805856  F000 8370		beq #1760 ; 0xA1805F3A


#1047		
#1048			(* THEN *)
#1049		
#1050		
#1051				(* CASE CurrentPump OF *)
#1052		
#1053				(* 1: *)
#1054				LD		CurrentPump	{LNXT:278|-1|-1}
(*) UNDEF
A180585A  F8DF 70A4		ldr r7, [pc, #+164] ; 0xA1A0005C
A180585E  F9B7 0000		ldrsh r0, [r7]

#1055				EQ		1	{LNXT:278|-1|-1}
(*) INT
A1805862  2801     		cmp r0, #1
A1805864  BF18 2000		nemov r0, #0
A1805868  BF08 2001		eqmov r0, #1

#1056				JMPC		$label77	{LNXT:278|281|313}
(-) BOOL
A180586C  2800     		cmp r0, #0
A180586E  D11A     		bne #52 ; 0xA18058A6


#1057		
#1058				(* 2: *)
#1059				LD		CurrentPump	{LNXT:313|-1|-1}
(*) UNDEF
A1805872  F8DF 708C		ldr r7, [pc, #+140] ; 0xA1A0005C
A1805876  F9B7 0000		ldrsh r0, [r7]

#1060				EQ		2	{LNXT:313|-1|-1}
(*) INT
A180587A  2802     		cmp r0, #2
A180587C  BF18 2000		nemov r0, #0
A1805880  BF08 2001		eqmov r0, #1

#1061				JMPC		$label78	{LNXT:313|314|344}
(-) BOOL
A1805884  2800     		cmp r0, #0
A1805886  F040 812A		bne #596 ; 0xA1805ADE


#1062		
#1063				(* 3: *)
#1064				LD		CurrentPump	{LNXT:344|-1|-1}
(*) UNDEF
A180588A  F8DF 7074		ldr r7, [pc, #+116] ; 0xA1A0005C
A180588E  F9B7 0000		ldrsh r0, [r7]

#1065				EQ		3	{LNXT:344|-1|-1}
(*) INT
A1805892  2803     		cmp r0, #3
A1805894  BF18 2000		nemov r0, #0
A1805898  BF08 2001		eqmov r0, #1

#1066				JMPC		$label79	{LNXT:344|345|385}
(-) BOOL
A180589C  2800     		cmp r0, #0
A180589E  F040 8236		bne #1132 ; 0xA1805D0E


#1067				JMP		$label76	{LNXT:344|345|385}
(-) BOOL
A18058A2  E34A     		b #1684 ; 0xA1805F3A


#1068		
#1069				(* Istruzioni di ciascun CASE: *)
#1070		
#1071		$label77:
#1072		
#1073					(* IF Tank_Level >= Level_1 AND Priority = 0 *)
#1074					LD		Priority	{LNXT:281|-1|-1}
(*) UNDEF
A18058A6  F85F 786C		ldr r7, [pc, #-2156] ; 0xA0003F0C
A18058AA  F9B7 0000		ldrsh r0, [r7]

#1075					EQ		0	{LNXT:281|-1|-1}
(*) INT
A18058AE  2800     		cmp r0, #0
A18058B0  BF18 2000		nemov r0, #0
A18058B4  BF08 2001		eqmov r0, #1

#1076					AND(		Tank_Level	{LNXT:281|-1|-1}
(*) BOOL
A18058B8  B082     		sub sp, sp, #8
A18058BA  F8CD 0000		str r0, [sp]
A18058BE  F85F 7834		ldr r7, [pc, #-2100] ; 0xA1A00012
A18058C2  F9B7 0000		ldrsh r0, [r7]

#1077					GE		Level_1	{LNXT:281|-1|-1}
(*) INT
A18058C6  F85F 7898		ldr r7, [pc, #-2200] ; 0xA0003F06
A18058CA  F9B7 7000		ldrsh r7, [r7]
A18058CE  42B8     		cmp r0, r7
A18058D0  BFB8 2000		ltmov r0, #0
A18058D4  BFA8 2001		gemov r0, #1

#1078					)	{LNXT:281|-1|-1}
(*) BOOL
A18058D8  4607     		mov r7, r0
A18058DA  F8DD 0000		ldr r0, [sp]
A18058DE  B002     		add sp, sp, #8
A18058E0  4038     		and r0, r0, r7

#1079					JMPCN	$label80	{LNXT:281|282|285}
(-) BOOL
A18058E2  2800     		cmp r0, #0
A18058E4  D018     		beq #48 ; 0xA1805918


#1080		
#1081					(* THEN *)
#1082		
#1083						(* CurrentPump := ((CurrentPump) MOD 3) + 1; *)
#1084						LD		CurrentPump	{LNXT:282|283|-1}
(*) UNDEF
A18058E8  F8DF 7014		ldr r7, [pc, #+20] ; 0xA1A0005C
A18058EC  F9B7 0000		ldrsh r0, [r7]

#1085						MOD		3	{LNXT:282|283|-1}
(*) INT
A18058F0  2103     		mov r1, #3 ; 3
A18058F2  F85F 4874		ldr r4, [pc, #-2164] ; 0xA1804500
A18058F6  F044 0401		orr r4, r4, #1
A18058FA  47A0     		blx r4

A18058FC  E002     		b #4

A1805900  A1A0005C		; 0xA1A0005C

#1086						ADD		1	{LNXT:282|283|-1}
(-) INT
A1805904  1C40     		add r0, r0, #1

#1087						ST		CurrentPump	{LNXT:282|283|-1}
(*) INT
A1805906  F85F 7008		ldr r7, [pc, #-8] ; 0xA1A0005C
A180590A  8038     		strh r0, [r7]

#1088		
#1089						(* Motor_A := TRUE; *)
#1090						MOVE		TRUE,Motor_A	{LNXT:283|294|-1}
(*) INT
A180590C  2001     		mov r0, #1 ; 1
A180590E  F85F 7824		ldr r7, [pc, #-2084] ; 0x100004AC
A1805912  7038     		strb r0, [r7]

#1091						JMP		$label81	{LNXT:281|282|285}
(-) BOOL
A1805914  E049     		b #146 ; 0xA18059AA


#1092		$label80:
#1093		
#1094					(* ELSE *)
#1095		
#1096		
#1097						(* IF TestRunActive_1 AND NOT TestRunRunning_1 *)
#1098						LD		TestRunRunning_1	{LNXT:285|-1|-1}
(*) UNDEF
A1805918  F8DF 77F4		ldr r7, [pc, #+2036] ; 0xA1A00059
A180591C  7838     		ldrb r0, [r7]

#1099						NOT	{LNXT:285|-1|-1}
(*) BOOL
A180591E  2800     		cmp r0, #0
A1805920  BF08 2001		eqmov r0, #1
A1805924  BF18 2000		nemov r0, #0

#1100						AND(		TestRunActive_1	{LNXT:285|-1|-1}
(*) BOOL
A1805928  B082     		sub sp, sp, #8
A180592A  F8CD 0000		str r0, [sp]
A180592E  F8DF 77E4		ldr r7, [pc, #+2020] ; 0xA1A0005E
A1805932  7838     		ldrb r0, [r7]

#1101						NOT	{LNXT:285|-1|-1}
(*) BOOL
A1805934  2800     		cmp r0, #0
A1805936  BF08 2001		eqmov r0, #1
A180593A  BF18 2000		nemov r0, #0

#1102						)	{LNXT:285|-1|-1}
(*) BOOL
A180593E  4607     		mov r7, r0
A1805940  F8DD 0000		ldr r0, [sp]
A1805944  B002     		add sp, sp, #8
A1805946  4038     		and r0, r0, r7

#1103						JMPCN	$label82	{LNXT:285|286|294}
(-) BOOL
A1805948  2800     		cmp r0, #0
A180594A  D02E     		beq #92 ; 0xA18059AA


#1104		
#1105						(* THEN *)
#1106		
#1107							(* PumpIntervalTimer_1 *)
#1108							MOVE		TRUE,PumpIntervalTimer_1.IN	{LNXT:286|-1|-1}
(*) BOOL
A180594E  2001     		mov r0, #1 ; 1
A1805950  F8DF 77CC		ldr r7, [pc, #+1996] ; 0xA1A00064
A1805954  7038     		strb r0, [r7]

#1109							MOVE		5000,PumpIntervalTimer_1.PT	{LNXT:286|-1|-1}
(*) BOOL
A1805956  F8DF 7830		ldr r7, [pc, #+2096] ; 0x1388
A180595A  4638     		mov r0, r7
A180595C  F8DF 77C4		ldr r7, [pc, #+1988] ; 0xA1A00068
A1805960  6038     		str r0, [r7]

#1110							CAL		PumpIntervalTimer_1	{LNXT:286|287|-1}
(*) UDINT
A1805962  E92D 0021		stmdb sp!, { r0, r5 }
A1805966  F8DF 57B4		ldr r5, [pc, #+1972] ; 0xA1A00060
A180596A  F85F 48E8		ldr r4, [pc, #-2280] ; 0xA1804550
A180596E  F044 0401		orr r4, r4, #1
A1805972  47A0     		blx r4
A1805974  E8BD 0021		ldmia sp!, { r0, r5 }

#1111		
#1112		
#1113							(* IF PumpIntervalTimer_1.Q *)
#1114							LD		PumpIntervalTimer_1.Q	{LNXT:287|-1|-1}
(*) UNDEF
A1805978  F8DF 77AC		ldr r7, [pc, #+1964] ; 0xA1A0006C
A180597C  7838     		ldrb r0, [r7]

#1115							JMPCN	$label83	{LNXT:287|288|294}
(-) BOOL
A180597E  2800     		cmp r0, #0
A1805980  D013     		beq #38 ; 0xA18059AA


#1116		
#1117							(* THEN *)
#1118		
#1119								(* TestRunActive_1 := TRUE; *)
#1120								MOVE		TRUE,TestRunActive_1	{LNXT:288|289|-1}
(*) BOOL
A1805984  2001     		mov r0, #1 ; 1
A1805986  F8DF 778C		ldr r7, [pc, #+1932] ; 0xA1A0005E
A180598A  7038     		strb r0, [r7]

#1121		
#1122								(* PumpIntervalTimer_1 *)
#1123								MOVE		FALSE,PumpIntervalTimer_1.IN	{LNXT:289|-1|-1}
(*) BOOL
A180598C  2000     		mov r0, #0 ; 0
A180598E  F8DF 7790		ldr r7, [pc, #+1936] ; 0xA1A00064
A1805992  7038     		strb r0, [r7]

#1124								CAL		PumpIntervalTimer_1	{LNXT:289|294|-1}
(*) BOOL
A1805994  E92D 0021		stmdb sp!, { r0, r5 }
A1805998  F8DF 5780		ldr r5, [pc, #+1920] ; 0xA1A00060
A180599C  F85F 491C		ldr r4, [pc, #-2332] ; 0xA1804550
A18059A0  F044 0401		orr r4, r4, #1
A18059A4  47A0     		blx r4
A18059A6  E8BD 0021		ldmia sp!, { r0, r5 }

#1125		
#1126		$label83:
#1127							(* END_IF *)
#1128		
#1129		$label82:
#1130						(* END_IF *)
#1131		
#1132		$label81:
#1133					(* END_IF *)
#1134		
#1135		
#1136					(* IF TestRunActive_1 *)
#1137					LD		TestRunActive_1	{LNXT:294|-1|-1}
(*) UNDEF
A18059AA  F8DF 7768		ldr r7, [pc, #+1896] ; 0xA1A0005E
A18059AE  7838     		ldrb r0, [r7]

#1138					JMPCN	$label84	{LNXT:294|295|385}
(-) BOOL
A18059B0  2800     		cmp r0, #0
A18059B2  F000 8092		beq #292 ; 0xA1805ADA


#1139		
#1140					(* THEN *)
#1141		
#1142		
#1143						(* IF TestRunRunning_1 *)
#1144						LD		TestRunRunning_1	{LNXT:295|-1|-1}
(*) UNDEF
A18059B6  F8DF 7758		ldr r7, [pc, #+1880] ; 0xA1A00059
A18059BA  7838     		ldrb r0, [r7]

#1145						NOT	{LNXT:295|-1|-1}
(*) BOOL
A18059BC  2800     		cmp r0, #0
A18059BE  BF08 2001		eqmov r0, #1
A18059C2  BF18 2000		nemov r0, #0

#1146						JMPCN	$label85	{LNXT:295|296|299}
(-) BOOL
A18059C6  2800     		cmp r0, #0
A18059C8  D004     		beq #8 ; 0xA18059D4


#1147		
#1148						(* THEN *)
#1149		
#1150							(* TestRunRunning_1 := TRUE; *)
#1151							MOVE		TRUE,TestRunRunning_1	{LNXT:296|299|-1}
(*) BOOL
A18059CC  2001     		mov r0, #1 ; 1
A18059CE  F8DF 7740		ldr r7, [pc, #+1856] ; 0xA1A00059
A18059D2  7038     		strb r0, [r7]

#1152		
#1153		$label85:
#1154						(* END_IF *)
#1155		
#1156		
#1157						(* IF TestRunRunning_1 AND Tank_Level < Level_2 And Not ALM_A AND Avto_A *)
#1158						LD		ALM_A	{LNXT:299|-1|-1}
(*) UNDEF
A18059D4  F85F 7930		ldr r7, [pc, #-2352] ; 0xA1A0002B
A18059D8  7838     		ldrb r0, [r7]

#1159						NOT	{LNXT:299|-1|-1}
(*) BOOL
A18059DA  2800     		cmp r0, #0
A18059DC  BF08 2001		eqmov r0, #1
A18059E0  BF18 2000		nemov r0, #0

#1160						AND(		Tank_Level	{LNXT:299|-1|-1}
(*) BOOL
A18059E4  B082     		sub sp, sp, #8
A18059E6  F8CD 0000		str r0, [sp]
A18059EA  F85F 7960		ldr r7, [pc, #-2400] ; 0xA1A00012
A18059EE  F9B7 0000		ldrsh r0, [r7]

#1161						LT		Level_2	{LNXT:299|-1|-1}
(*) INT
A18059F2  F85F 79C0		ldr r7, [pc, #-2496] ; 0xA0003F08
A18059F6  F9B7 7000		ldrsh r7, [r7]
A18059FA  42B8     		cmp r0, r7
A18059FC  BFA8 2000		gemov r0, #0
A1805A00  BFB8 2001		ltmov r0, #1

#1162						AND		TestRunRunning_1	{LNXT:299|-1|-1}
(*) BOOL
A1805A04  F8DF 7708		ldr r7, [pc, #+1800] ; 0xA1A00059
A1805A08  783F     		ldrb r7, [r7]
A1805A0A  4038     		and r0, r0, r7

#1163						)	{LNXT:299|-1|-1}
(*) BOOL
A1805A0C  4607     		mov r7, r0
A1805A0E  F8DD 0000		ldr r0, [sp]
A1805A12  B002     		add sp, sp, #8
A1805A14  4038     		and r0, r0, r7

#1164						AND		Avto_A	{LNXT:299|-1|-1}
(*) BOOL
A1805A16  F85F 7974		ldr r7, [pc, #-2420] ; 0xA1A0002A
A1805A1A  783F     		ldrb r7, [r7]
A1805A1C  4038     		and r0, r0, r7

#1165						JMPCN	$label86	{LNXT:299|300|385}
(-) BOOL
A1805A1E  2800     		cmp r0, #0
A1805A20  D05B     		beq #182 ; 0xA1805ADA


#1166		
#1167						(* THEN *)
#1168		
#1169							(* PumpRunTimer_1 *)
#1170							LD		TestRunActive_1	{LNXT:300|-1|-1}
(*) UNDEF
A1805A24  F8DF 76EC		ldr r7, [pc, #+1772] ; 0xA1A0005E
A1805A28  7838     		ldrb r0, [r7]

#1171							AND		TestRunRunning_1	{LNXT:300|-1|-1}
(*) BOOL
A1805A2A  F8DF 76E4		ldr r7, [pc, #+1764] ; 0xA1A00059
A1805A2E  783F     		ldrb r7, [r7]
A1805A30  4038     		and r0, r0, r7

#1172							ST		PumpRunTimer_1.IN	{LNXT:300|-1|-1}
(*) BOOL
A1805A32  F8DF 76FC		ldr r7, [pc, #+1788] ; 0xA1A00078
A1805A36  7038     		strb r0, [r7]

#1173							MOVE		5000,PumpRunTimer_1.PT	{LNXT:300|-1|-1}
(*) BOOL
A1805A38  F8DF 774C		ldr r7, [pc, #+1868] ; 0x1388
A1805A3C  4638     		mov r0, r7
A1805A3E  F8DF 76F4		ldr r7, [pc, #+1780] ; 0xA1A0007C
A1805A42  6038     		str r0, [r7]

#1174							CAL		PumpRunTimer_1	{LNXT:300|301|-1}
(*) UDINT
A1805A44  E92D 0021		stmdb sp!, { r0, r5 }
A1805A48  F8DF 56E0		ldr r5, [pc, #+1760] ; 0xA1A00074
A1805A4C  F85F 49CC		ldr r4, [pc, #-2508] ; 0xA1804550
A1805A50  F044 0401		orr r4, r4, #1
A1805A54  47A0     		blx r4
A1805A56  E8BD 0021		ldmia sp!, { r0, r5 }

#1175		
#1176		
#1177							(* IF PumpRunTimer_1.Q *)
#1178							LD		PumpRunTimer_1.Q	{LNXT:301|-1|-1}
(*) UNDEF
A1805A5A  F8DF 76DC		ldr r7, [pc, #+1756] ; 0xA1A00080
A1805A5E  7838     		ldrb r0, [r7]

#1179							NOT	{LNXT:301|-1|-1}
(*) BOOL
A1805A60  2800     		cmp r0, #0
A1805A62  BF08 2001		eqmov r0, #1
A1805A66  BF18 2000		nemov r0, #0

#1180							JMPCN	$label87	{LNXT:301|302|304}
(-) BOOL
A1805A6A  2800     		cmp r0, #0
A1805A6C  D006     		beq #12 ; 0xA1805A7C


#1181		
#1182							(* THEN *)
#1183		
#1184								(* Motor_A := TRUE; *)
#1185								MOVE		TRUE,Motor_A	{LNXT:302|385|-1}
(*) BOOL
A1805A70  2001     		mov r0, #1 ; 1
A1805A72  F85F 7988		ldr r7, [pc, #-2440] ; 0x100004AC
A1805A76  7038     		strb r0, [r7]

#1186								JMP		$label88	{LNXT:301|302|304}
(-) BOOL
A1805A78  E02F     		b #94 ; 0xA1805ADA


#1187		$label87:
#1188		
#1189							(* ELSE *)
#1190		
#1191								(* Motor_A := FALSE; *)
#1192								MOVE		FALSE,Motor_A	{LNXT:304|305|-1}
(*) BOOL
A1805A7C  2000     		mov r0, #0 ; 0
A1805A7E  F85F 7994		ldr r7, [pc, #-2452] ; 0x100004AC
A1805A82  7038     		strb r0, [r7]

#1193		
#1194								(* TestRunRunning_1 := FALSE; *)
#1195								MOVE		FALSE,TestRunRunning_1	{LNXT:305|306|-1}
(*) BOOL
A1805A84  2000     		mov r0, #0 ; 0
A1805A86  F8DF 7688		ldr r7, [pc, #+1672] ; 0xA1A00059
A1805A8A  7038     		strb r0, [r7]

#1196		
#1197								(* TestRunActive_1 := FALSE; *)
#1198								MOVE		FALSE,TestRunActive_1	{LNXT:306|307|-1}
(*) BOOL
A1805A8C  2000     		mov r0, #0 ; 0
A1805A8E  F8DF 7684		ldr r7, [pc, #+1668] ; 0xA1A0005E
A1805A92  7038     		strb r0, [r7]

#1199		
#1200								(* PumpRunTimer_1 *)
#1201								MOVE		FALSE,PumpRunTimer_1.IN	{LNXT:307|-1|-1}
(*) BOOL
A1805A94  2000     		mov r0, #0 ; 0
A1805A96  F8DF 7698		ldr r7, [pc, #+1688] ; 0xA1A00078
A1805A9A  7038     		strb r0, [r7]

#1202								MOVE		5000,PumpRunTimer_1.PT	{LNXT:307|-1|-1}
(*) BOOL
A1805A9C  F8DF 76E8		ldr r7, [pc, #+1768] ; 0x1388
A1805AA0  4638     		mov r0, r7
A1805AA2  F8DF 7690		ldr r7, [pc, #+1680] ; 0xA1A0007C
A1805AA6  6038     		str r0, [r7]

#1203								CAL		PumpRunTimer_1	{LNXT:307|308|-1}
(*) UDINT
A1805AA8  E92D 0021		stmdb sp!, { r0, r5 }
A1805AAC  F8DF 567C		ldr r5, [pc, #+1660] ; 0xA1A00074
A1805AB0  F85F 4A30		ldr r4, [pc, #-2608] ; 0xA1804550
A1805AB4  F044 0401		orr r4, r4, #1
A1805AB8  47A0     		blx r4
A1805ABA  E8BD 0021		ldmia sp!, { r0, r5 }

#1204		
#1205								(* CurrentPump := ((CurrentPump) MOD 3) + 1; *)
#1206								LD		CurrentPump	{LNXT:308|385|-1}
(*) UNDEF
A1805ABE  F85F 71C0		ldr r7, [pc, #-448] ; 0xA1A0005C
A1805AC2  F9B7 0000		ldrsh r0, [r7]

#1207								MOD		3	{LNXT:308|385|-1}
(*) INT
A1805AC6  2103     		mov r1, #3 ; 3
A1805AC8  F85F 4A4C		ldr r4, [pc, #-2636] ; 0xA1804500
A1805ACC  F044 0401		orr r4, r4, #1
A1805AD0  47A0     		blx r4

#1208								ADD		1	{LNXT:308|385|-1}
(-) INT
A1805AD2  1C40     		add r0, r0, #1

#1209								ST		CurrentPump	{LNXT:308|385|-1}
(*) INT
A1805AD4  F85F 71D8		ldr r7, [pc, #-472] ; 0xA1A0005C
A1805AD8  8038     		strh r0, [r7]

#1210		
#1211		$label88:
#1212							(* END_IF *)
#1213		
#1214		$label86:
#1215						(* END_IF *)
#1216		
#1217		$label84:
#1218					(* END_IF *)
#1219					JMP		$label76	{LNXT:1|385|-1}
(-) INT
A1805ADA  E22E     		b #1116 ; 0xA1805F3A


#1220		
#1221		$label78:
#1222		
#1223					(* IF Tank_Level >= Level_1 AND Priority = 1 *)
#1224					LD		Priority	{LNXT:314|-1|-1}
(*) UNDEF
A1805ADE  F85F 7AA4		ldr r7, [pc, #-2724] ; 0xA0003F0C
A1805AE2  F9B7 0000		ldrsh r0, [r7]

#1225					EQ		1	{LNXT:314|-1|-1}
(*) INT
A1805AE6  2801     		cmp r0, #1
A1805AE8  BF18 2000		nemov r0, #0
A1805AEC  BF08 2001		eqmov r0, #1

#1226					AND(		Tank_Level	{LNXT:314|-1|-1}
(*) BOOL
A1805AF0  B082     		sub sp, sp, #8
A1805AF2  F8CD 0000		str r0, [sp]
A1805AF6  F85F 7A6C		ldr r7, [pc, #-2668] ; 0xA1A00012
A1805AFA  F9B7 0000		ldrsh r0, [r7]

#1227					GE		Level_1	{LNXT:314|-1|-1}
(*) INT
A1805AFE  F85F 7AD0		ldr r7, [pc, #-2768] ; 0xA0003F06
A1805B02  F9B7 7000		ldrsh r7, [r7]
A1805B06  42B8     		cmp r0, r7
A1805B08  BFB8 2000		ltmov r0, #0
A1805B0C  BFA8 2001		gemov r0, #1

#1228					)	{LNXT:314|-1|-1}
(*) BOOL
A1805B10  4607     		mov r7, r0
A1805B12  F8DD 0000		ldr r0, [sp]
A1805B16  B002     		add sp, sp, #8
A1805B18  4038     		and r0, r0, r7

#1229					JMPCN	$label89	{LNXT:314|315|318}
(-) BOOL
A1805B1A  2800     		cmp r0, #0
A1805B1C  D014     		beq #40 ; 0xA1805B48


#1230		
#1231					(* THEN *)
#1232		
#1233						(* CurrentPump := ((CurrentPump) MOD 3) + 1; *)
#1234						LD		CurrentPump	{LNXT:315|316|-1}
(*) UNDEF
A1805B20  F85F 7224		ldr r7, [pc, #-548] ; 0xA1A0005C
A1805B24  F9B7 0000		ldrsh r0, [r7]

#1235						MOD		3	{LNXT:315|316|-1}
(*) INT
A1805B28  2103     		mov r1, #3 ; 3
A1805B2A  F85F 4AAC		ldr r4, [pc, #-2732] ; 0xA1804500
A1805B2E  F044 0401		orr r4, r4, #1
A1805B32  47A0     		blx r4

#1236						ADD		1	{LNXT:315|316|-1}
(-) INT
A1805B34  1C40     		add r0, r0, #1

#1237						ST		CurrentPump	{LNXT:315|316|-1}
(*) INT
A1805B36  F85F 7238		ldr r7, [pc, #-568] ; 0xA1A0005C
A1805B3A  8038     		strh r0, [r7]

#1238		
#1239						(* Motor_B := TRUE; *)
#1240						MOVE		TRUE,Motor_B	{LNXT:316|326|-1}
(*) INT
A1805B3C  2001     		mov r0, #1 ; 1
A1805B3E  F85F 7A50		ldr r7, [pc, #-2640] ; 0x100004AD
A1805B42  7038     		strb r0, [r7]

#1241						JMP		$label90	{LNXT:314|315|318}
(-) BOOL
A1805B44  E049     		b #146 ; 0xA1805BDA


#1242		$label89:
#1243		
#1244					(* ELSE *)
#1245		
#1246		
#1247						(* IF TestRunActive_2 AND NOT TestRunRunning_2 *)
#1248						LD		TestRunRunning_2	{LNXT:318|-1|-1}
(*) UNDEF
A1805B48  F8DF 75CC		ldr r7, [pc, #+1484] ; 0xA1A0005F
A1805B4C  7838     		ldrb r0, [r7]

#1249						NOT	{LNXT:318|-1|-1}
(*) BOOL
A1805B4E  2800     		cmp r0, #0
A1805B50  BF08 2001		eqmov r0, #1
A1805B54  BF18 2000		nemov r0, #0

#1250						AND(		TestRunActive_2	{LNXT:318|-1|-1}
(*) BOOL
A1805B58  B082     		sub sp, sp, #8
A1805B5A  F8CD 0000		str r0, [sp]
A1805B5E  F8DF 75DC		ldr r7, [pc, #+1500] ; 0xA1A00088
A1805B62  7838     		ldrb r0, [r7]

#1251						NOT	{LNXT:318|-1|-1}
(*) BOOL
A1805B64  2800     		cmp r0, #0
A1805B66  BF08 2001		eqmov r0, #1
A1805B6A  BF18 2000		nemov r0, #0

#1252						)	{LNXT:318|-1|-1}
(*) BOOL
A1805B6E  4607     		mov r7, r0
A1805B70  F8DD 0000		ldr r0, [sp]
A1805B74  B002     		add sp, sp, #8
A1805B76  4038     		and r0, r0, r7

#1253						JMPCN	$label91	{LNXT:318|319|326}
(-) BOOL
A1805B78  2800     		cmp r0, #0
A1805B7A  D02E     		beq #92 ; 0xA1805BDA


#1254		
#1255						(* THEN *)
#1256		
#1257							(* PumpIntervalTimer_2 *)
#1258							MOVE		TRUE,PumpIntervalTimer_2.IN	{LNXT:319|-1|-1}
(*) BOOL
A1805B7E  2001     		mov r0, #1 ; 1
A1805B80  F8DF 75C8		ldr r7, [pc, #+1480] ; 0xA1A00090
A1805B84  7038     		strb r0, [r7]

#1259							MOVE		6000,PumpIntervalTimer_2.PT	{LNXT:319|-1|-1}
(*) BOOL
A1805B86  F8DF 7604		ldr r7, [pc, #+1540] ; 0x1770
A1805B8A  4638     		mov r0, r7
A1805B8C  F8DF 75C0		ldr r7, [pc, #+1472] ; 0xA1A00094
A1805B90  6038     		str r0, [r7]

#1260							CAL		PumpIntervalTimer_2	{LNXT:319|320|-1}
(*) UDINT
A1805B92  E92D 0021		stmdb sp!, { r0, r5 }
A1805B96  F8DF 55B0		ldr r5, [pc, #+1456] ; 0xA1A0008C
A1805B9A  F85F 4B18		ldr r4, [pc, #-2840] ; 0xA1804550
A1805B9E  F044 0401		orr r4, r4, #1
A1805BA2  47A0     		blx r4
A1805BA4  E8BD 0021		ldmia sp!, { r0, r5 }

#1261		
#1262		
#1263							(* IF PumpIntervalTimer_2.Q *)
#1264							LD		PumpIntervalTimer_2.Q	{LNXT:320|-1|-1}
(*) UNDEF
A1805BA8  F8DF 75A8		ldr r7, [pc, #+1448] ; 0xA1A00098
A1805BAC  7838     		ldrb r0, [r7]

#1265							JMPCN	$label92	{LNXT:320|321|326}
(-) BOOL
A1805BAE  2800     		cmp r0, #0
A1805BB0  D013     		beq #38 ; 0xA1805BDA


#1266		
#1267							(* THEN *)
#1268		
#1269								(* TestRunActive_2 := TRUE; *)
#1270								MOVE		TRUE,TestRunActive_2	{LNXT:321|322|-1}
(*) BOOL
A1805BB4  2001     		mov r0, #1 ; 1
A1805BB6  F8DF 7584		ldr r7, [pc, #+1412] ; 0xA1A00088
A1805BBA  7038     		strb r0, [r7]

#1271		
#1272								(* PumpIntervalTimer_2 *)
#1273								MOVE		FALSE,PumpIntervalTimer_2.IN	{LNXT:322|-1|-1}
(*) BOOL
A1805BBC  2000     		mov r0, #0 ; 0
A1805BBE  F8DF 758C		ldr r7, [pc, #+1420] ; 0xA1A00090
A1805BC2  7038     		strb r0, [r7]

#1274								CAL		PumpIntervalTimer_2	{LNXT:322|326|-1}
(*) BOOL
A1805BC4  E92D 0021		stmdb sp!, { r0, r5 }
A1805BC8  F8DF 557C		ldr r5, [pc, #+1404] ; 0xA1A0008C
A1805BCC  F85F 4B4C		ldr r4, [pc, #-2892] ; 0xA1804550
A1805BD0  F044 0401		orr r4, r4, #1
A1805BD4  47A0     		blx r4
A1805BD6  E8BD 0021		ldmia sp!, { r0, r5 }

#1275		
#1276		$label92:
#1277							(* END_IF *)
#1278		
#1279		$label91:
#1280						(* END_IF *)
#1281		
#1282		$label90:
#1283					(* END_IF *)
#1284		
#1285		
#1286					(* IF TestRunActive_2 *)
#1287					LD		TestRunActive_2	{LNXT:326|-1|-1}
(*) UNDEF
A1805BDA  F8DF 7560		ldr r7, [pc, #+1376] ; 0xA1A00088
A1805BDE  7838     		ldrb r0, [r7]

#1288					JMPCN	$label93	{LNXT:326|327|385}
(-) BOOL
A1805BE0  2800     		cmp r0, #0
A1805BE2  F000 8092		beq #292 ; 0xA1805D0A


#1289		
#1290					(* THEN *)
#1291		
#1292		
#1293						(* IF TestRunRunning_2 *)
#1294						LD		TestRunRunning_2	{LNXT:327|-1|-1}
(*) UNDEF
A1805BE6  F8DF 7530		ldr r7, [pc, #+1328] ; 0xA1A0005F
A1805BEA  7838     		ldrb r0, [r7]

#1295						NOT	{LNXT:327|-1|-1}
(*) BOOL
A1805BEC  2800     		cmp r0, #0
A1805BEE  BF08 2001		eqmov r0, #1
A1805BF2  BF18 2000		nemov r0, #0

#1296						JMPCN	$label94	{LNXT:327|328|330}
(-) BOOL
A1805BF6  2800     		cmp r0, #0
A1805BF8  D004     		beq #8 ; 0xA1805C04


#1297		
#1298						(* THEN *)
#1299		
#1300							(* TestRunRunning_2 := TRUE; *)
#1301							MOVE		TRUE,TestRunRunning_2	{LNXT:328|330|-1}
(*) BOOL
A1805BFC  2001     		mov r0, #1 ; 1
A1805BFE  F8DF 7518		ldr r7, [pc, #+1304] ; 0xA1A0005F
A1805C02  7038     		strb r0, [r7]

#1302		
#1303		$label94:
#1304						(* END_IF *)
#1305		
#1306		
#1307						(* IF TestRunRunning_2 AND Tank_Level < Level_2 And Not ALM_B AND Avto_B *)
#1308						LD		ALM_B	{LNXT:330|-1|-1}
(*) UNDEF
A1805C04  F85F 7B5C		ldr r7, [pc, #-2908] ; 0xA1A0002C
A1805C08  7838     		ldrb r0, [r7]

#1309						NOT	{LNXT:330|-1|-1}
(*) BOOL
A1805C0A  2800     		cmp r0, #0
A1805C0C  BF08 2001		eqmov r0, #1
A1805C10  BF18 2000		nemov r0, #0

#1310						AND(		Tank_Level	{LNXT:330|-1|-1}
(*) BOOL
A1805C14  B082     		sub sp, sp, #8
A1805C16  F8CD 0000		str r0, [sp]
A1805C1A  F85F 7B90		ldr r7, [pc, #-2960] ; 0xA1A00012
A1805C1E  F9B7 0000		ldrsh r0, [r7]

#1311						LT		Level_2	{LNXT:330|-1|-1}
(*) INT
A1805C22  F85F 7BF0		ldr r7, [pc, #-3056] ; 0xA0003F08
A1805C26  F9B7 7000		ldrsh r7, [r7]
A1805C2A  42B8     		cmp r0, r7
A1805C2C  BFA8 2000		gemov r0, #0
A1805C30  BFB8 2001		ltmov r0, #1

#1312						AND		TestRunRunning_2	{LNXT:330|-1|-1}
(*) BOOL
A1805C34  F8DF 74E0		ldr r7, [pc, #+1248] ; 0xA1A0005F
A1805C38  783F     		ldrb r7, [r7]
A1805C3A  4038     		and r0, r0, r7

#1313						)	{LNXT:330|-1|-1}
(*) BOOL
A1805C3C  4607     		mov r7, r0
A1805C3E  F8DD 0000		ldr r0, [sp]
A1805C42  B002     		add sp, sp, #8
A1805C44  4038     		and r0, r0, r7

#1314						AND		Avto_B	{LNXT:330|-1|-1}
(*) BOOL
A1805C46  F85F 7B98		ldr r7, [pc, #-2968] ; 0xA1A0002D
A1805C4A  783F     		ldrb r7, [r7]
A1805C4C  4038     		and r0, r0, r7

#1315						JMPCN	$label95	{LNXT:330|331|385}
(-) BOOL
A1805C4E  2800     		cmp r0, #0
A1805C50  D05B     		beq #182 ; 0xA1805D0A


#1316		
#1317						(* THEN *)
#1318		
#1319							(* PumpRunTimer_2 *)
#1320							LD		TestRunActive_2	{LNXT:331|-1|-1}
(*) UNDEF
A1805C54  F8DF 74E4		ldr r7, [pc, #+1252] ; 0xA1A00088
A1805C58  7838     		ldrb r0, [r7]

#1321							AND		TestRunRunning_2	{LNXT:331|-1|-1}
(*) BOOL
A1805C5A  F8DF 74BC		ldr r7, [pc, #+1212] ; 0xA1A0005F
A1805C5E  783F     		ldrb r7, [r7]
A1805C60  4038     		and r0, r0, r7

#1322							ST		PumpRunTimer_2.IN	{LNXT:331|-1|-1}
(*) BOOL
A1805C62  F8DF 74F8		ldr r7, [pc, #+1272] ; 0xA1A000A4
A1805C66  7038     		strb r0, [r7]

#1323							MOVE		6000,PumpRunTimer_2.PT	{LNXT:331|-1|-1}
(*) BOOL
A1805C68  F8DF 7520		ldr r7, [pc, #+1312] ; 0x1770
A1805C6C  4638     		mov r0, r7
A1805C6E  F8DF 74F0		ldr r7, [pc, #+1264] ; 0xA1A000A8
A1805C72  6038     		str r0, [r7]

#1324							CAL		PumpRunTimer_2	{LNXT:331|332|-1}
(*) UDINT
A1805C74  E92D 0021		stmdb sp!, { r0, r5 }
A1805C78  F8DF 54DC		ldr r5, [pc, #+1244] ; 0xA1A000A0
A1805C7C  F85F 4BFC		ldr r4, [pc, #-3068] ; 0xA1804550
A1805C80  F044 0401		orr r4, r4, #1
A1805C84  47A0     		blx r4
A1805C86  E8BD 0021		ldmia sp!, { r0, r5 }

#1325		
#1326		
#1327							(* IF PumpRunTimer_2.Q *)
#1328							LD		PumpRunTimer_2.Q	{LNXT:332|-1|-1}
(*) UNDEF
A1805C8A  F8DF 74D8		ldr r7, [pc, #+1240] ; 0xA1A000AC
A1805C8E  7838     		ldrb r0, [r7]

#1329							NOT	{LNXT:332|-1|-1}
(*) BOOL
A1805C90  2800     		cmp r0, #0
A1805C92  BF08 2001		eqmov r0, #1
A1805C96  BF18 2000		nemov r0, #0

#1330							JMPCN	$label96	{LNXT:332|333|335}
(-) BOOL
A1805C9A  2800     		cmp r0, #0
A1805C9C  D006     		beq #12 ; 0xA1805CAC


#1331		
#1332							(* THEN *)
#1333		
#1334								(* Motor_B := TRUE; *)
#1335								MOVE		TRUE,Motor_B	{LNXT:333|385|-1}
(*) BOOL
A1805CA0  2001     		mov r0, #1 ; 1
A1805CA2  F85F 7BB4		ldr r7, [pc, #-2996] ; 0x100004AD
A1805CA6  7038     		strb r0, [r7]

#1336								JMP		$label97	{LNXT:332|333|335}
(-) BOOL
A1805CA8  E02F     		b #94 ; 0xA1805D0A


#1337		$label96:
#1338		
#1339							(* ELSE *)
#1340		
#1341								(* Motor_B := FALSE; *)
#1342								MOVE		FALSE,Motor_B	{LNXT:335|336|-1}
(*) BOOL
A1805CAC  2000     		mov r0, #0 ; 0
A1805CAE  F85F 7BC0		ldr r7, [pc, #-3008] ; 0x100004AD
A1805CB2  7038     		strb r0, [r7]

#1343		
#1344								(* TestRunRunning_2 := FALSE; *)
#1345								MOVE		FALSE,TestRunRunning_2	{LNXT:336|337|-1}
(*) BOOL
A1805CB4  2000     		mov r0, #0 ; 0
A1805CB6  F8DF 7460		ldr r7, [pc, #+1120] ; 0xA1A0005F
A1805CBA  7038     		strb r0, [r7]

#1346		
#1347								(* TestRunActive_2 := FALSE; *)
#1348								MOVE		FALSE,TestRunActive_2	{LNXT:337|338|-1}
(*) BOOL
A1805CBC  2000     		mov r0, #0 ; 0
A1805CBE  F8DF 747C		ldr r7, [pc, #+1148] ; 0xA1A00088
A1805CC2  7038     		strb r0, [r7]

#1349		
#1350								(* PumpRunTimer_2 *)
#1351								MOVE		FALSE,PumpRunTimer_2.IN	{LNXT:338|-1|-1}
(*) BOOL
A1805CC4  2000     		mov r0, #0 ; 0
A1805CC6  F8DF 7494		ldr r7, [pc, #+1172] ; 0xA1A000A4
A1805CCA  7038     		strb r0, [r7]

#1352								MOVE		6000,PumpRunTimer_2.PT	{LNXT:338|-1|-1}
(*) BOOL
A1805CCC  F8DF 74BC		ldr r7, [pc, #+1212] ; 0x1770
A1805CD0  4638     		mov r0, r7
A1805CD2  F8DF 748C		ldr r7, [pc, #+1164] ; 0xA1A000A8
A1805CD6  6038     		str r0, [r7]

#1353								CAL		PumpRunTimer_2	{LNXT:338|339|-1}
(*) UDINT
A1805CD8  E92D 0021		stmdb sp!, { r0, r5 }
A1805CDC  F8DF 5478		ldr r5, [pc, #+1144] ; 0xA1A000A0
A1805CE0  F85F 4C60		ldr r4, [pc, #-3168] ; 0xA1804550
A1805CE4  F044 0401		orr r4, r4, #1
A1805CE8  47A0     		blx r4
A1805CEA  E8BD 0021		ldmia sp!, { r0, r5 }

#1354		
#1355								(* CurrentPump := ((CurrentPump) MOD 3) + 1; *)
#1356								LD		CurrentPump	{LNXT:339|385|-1}
(*) UNDEF
A1805CEE  F85F 73F0		ldr r7, [pc, #-1008] ; 0xA1A0005C
A1805CF2  F9B7 0000		ldrsh r0, [r7]

#1357								MOD		3	{LNXT:339|385|-1}
(*) INT
A1805CF6  2103     		mov r1, #3 ; 3
A1805CF8  F85F 4C7C		ldr r4, [pc, #-3196] ; 0xA1804500
A1805CFC  F044 0401		orr r4, r4, #1
A1805D00  47A0     		blx r4

#1358								ADD		1	{LNXT:339|385|-1}
(-) INT
A1805D02  1C40     		add r0, r0, #1

#1359								ST		CurrentPump	{LNXT:339|385|-1}
(*) INT
A1805D04  F85F 7408		ldr r7, [pc, #-1032] ; 0xA1A0005C
A1805D08  8038     		strh r0, [r7]

#1360		
#1361		$label97:
#1362							(* END_IF *)
#1363		
#1364		$label95:
#1365						(* END_IF *)
#1366		
#1367		$label93:
#1368					(* END_IF *)
#1369					JMP		$label76	{LNXT:1|385|-1}
(-) INT
A1805D0A  E116     		b #556 ; 0xA1805F3A


#1370		
#1371		$label79:
#1372		
#1373					(* IF Tank_Level >= Level_1 AND Priority = 2 *)
#1374					LD		Priority	{LNXT:345|-1|-1}
(*) UNDEF
A1805D0E  F85F 7CD4		ldr r7, [pc, #-3284] ; 0xA0003F0C
A1805D12  F9B7 0000		ldrsh r0, [r7]

#1375					EQ		2	{LNXT:345|-1|-1}
(*) INT
A1805D16  2802     		cmp r0, #2
A1805D18  BF18 2000		nemov r0, #0
A1805D1C  BF08 2001		eqmov r0, #1

#1376					AND(		Tank_Level	{LNXT:345|-1|-1}
(*) BOOL
A1805D20  B082     		sub sp, sp, #8
A1805D22  F8CD 0000		str r0, [sp]
A1805D26  F85F 7C9C		ldr r7, [pc, #-3228] ; 0xA1A00012
A1805D2A  F9B7 0000		ldrsh r0, [r7]

#1377					GE		Level_1	{LNXT:345|-1|-1}
(*) INT
A1805D2E  F85F 7D00		ldr r7, [pc, #-3328] ; 0xA0003F06
A1805D32  F9B7 7000		ldrsh r7, [r7]
A1805D36  42B8     		cmp r0, r7
A1805D38  BFB8 2000		ltmov r0, #0
A1805D3C  BFA8 2001		gemov r0, #1

#1378					)	{LNXT:345|-1|-1}
(*) BOOL
A1805D40  4607     		mov r7, r0
A1805D42  F8DD 0000		ldr r0, [sp]
A1805D46  B002     		add sp, sp, #8
A1805D48  4038     		and r0, r0, r7

#1379					JMPCN	$label98	{LNXT:345|346|349}
(-) BOOL
A1805D4A  2800     		cmp r0, #0
A1805D4C  D014     		beq #40 ; 0xA1805D78


#1380		
#1381					(* THEN *)
#1382		
#1383						(* CurrentPump := ((CurrentPump) MOD 3) + 1; *)
#1384						LD		CurrentPump	{LNXT:346|347|-1}
(*) UNDEF
A1805D50  F85F 7454		ldr r7, [pc, #-1108] ; 0xA1A0005C
A1805D54  F9B7 0000		ldrsh r0, [r7]

#1385						MOD		3	{LNXT:346|347|-1}
(*) INT
A1805D58  2103     		mov r1, #3 ; 3
A1805D5A  F85F 4CDC		ldr r4, [pc, #-3292] ; 0xA1804500
A1805D5E  F044 0401		orr r4, r4, #1
A1805D62  47A0     		blx r4

#1386						ADD		1	{LNXT:346|347|-1}
(-) INT
A1805D64  1C40     		add r0, r0, #1

#1387						ST		CurrentPump	{LNXT:346|347|-1}
(*) INT
A1805D66  F85F 7468		ldr r7, [pc, #-1128] ; 0xA1A0005C
A1805D6A  8038     		strh r0, [r7]

#1388		
#1389						(* Motor_C := TRUE; *)
#1390						MOVE		TRUE,Motor_C	{LNXT:347|357|-1}
(*) INT
A1805D6C  2001     		mov r0, #1 ; 1
A1805D6E  F85F 7C7C		ldr r7, [pc, #-3196] ; 0x100004AE
A1805D72  7038     		strb r0, [r7]

#1391						JMP		$label99	{LNXT:345|346|349}
(-) BOOL
A1805D74  E049     		b #146 ; 0xA1805E0A


#1392		$label98:
#1393		
#1394					(* ELSE *)
#1395		
#1396		
#1397						(* IF TestRunActive_3 AND NOT TestRunRunning_3 *)
#1398						LD		TestRunRunning_3	{LNXT:349|-1|-1}
(*) UNDEF
A1805D78  F8DF 73C4		ldr r7, [pc, #+964] ; 0xA1A00089
A1805D7C  7838     		ldrb r0, [r7]

#1399						NOT	{LNXT:349|-1|-1}
(*) BOOL
A1805D7E  2800     		cmp r0, #0
A1805D80  BF08 2001		eqmov r0, #1
A1805D84  BF18 2000		nemov r0, #0

#1400						AND(		TestRunActive_3	{LNXT:349|-1|-1}
(*) BOOL
A1805D88  B082     		sub sp, sp, #8
A1805D8A  F8CD 0000		str r0, [sp]
A1805D8E  F8DF 73B4		ldr r7, [pc, #+948] ; 0xA1A0008B
A1805D92  7838     		ldrb r0, [r7]

#1401						NOT	{LNXT:349|-1|-1}
(*) BOOL
A1805D94  2800     		cmp r0, #0
A1805D96  BF08 2001		eqmov r0, #1
A1805D9A  BF18 2000		nemov r0, #0

#1402						)	{LNXT:349|-1|-1}
(*) BOOL
A1805D9E  4607     		mov r7, r0
A1805DA0  F8DD 0000		ldr r0, [sp]
A1805DA4  B002     		add sp, sp, #8
A1805DA6  4038     		and r0, r0, r7

#1403						JMPCN	$label100	{LNXT:349|350|357}
(-) BOOL
A1805DA8  2800     		cmp r0, #0
A1805DAA  D02E     		beq #92 ; 0xA1805E0A


#1404		
#1405						(* THEN *)
#1406		
#1407							(* PumpIntervalTimer_3 *)
#1408							MOVE		TRUE,PumpIntervalTimer_3.IN	{LNXT:350|-1|-1}
(*) BOOL
A1805DAE  2001     		mov r0, #1 ; 1
A1805DB0  F8DF 73B8		ldr r7, [pc, #+952] ; 0xA1A000B8
A1805DB4  7038     		strb r0, [r7]

#1409							MOVE		7000,PumpIntervalTimer_3.PT	{LNXT:350|-1|-1}
(*) BOOL
A1805DB6  F8DF 73D8		ldr r7, [pc, #+984] ; 0x1B58
A1805DBA  4638     		mov r0, r7
A1805DBC  F8DF 73B0		ldr r7, [pc, #+944] ; 0xA1A000BC
A1805DC0  6038     		str r0, [r7]

#1410							CAL		PumpIntervalTimer_3	{LNXT:350|351|-1}
(*) UDINT
A1805DC2  E92D 0021		stmdb sp!, { r0, r5 }
A1805DC6  F8DF 53A0		ldr r5, [pc, #+928] ; 0xA1A000B4
A1805DCA  F85F 4D48		ldr r4, [pc, #-3400] ; 0xA1804550
A1805DCE  F044 0401		orr r4, r4, #1
A1805DD2  47A0     		blx r4
A1805DD4  E8BD 0021		ldmia sp!, { r0, r5 }

#1411		
#1412		
#1413							(* IF PumpIntervalTimer_3.Q *)
#1414							LD		PumpIntervalTimer_3.Q	{LNXT:351|-1|-1}
(*) UNDEF
A1805DD8  F8DF 7398		ldr r7, [pc, #+920] ; 0xA1A000C0
A1805DDC  7838     		ldrb r0, [r7]

#1415							JMPCN	$label101	{LNXT:351|352|357}
(-) BOOL
A1805DDE  2800     		cmp r0, #0
A1805DE0  D013     		beq #38 ; 0xA1805E0A


#1416		
#1417							(* THEN *)
#1418		
#1419								(* TestRunActive_3 := TRUE; *)
#1420								MOVE		TRUE,TestRunActive_3	{LNXT:352|353|-1}
(*) BOOL
A1805DE4  2001     		mov r0, #1 ; 1
A1805DE6  F8DF 735C		ldr r7, [pc, #+860] ; 0xA1A0008B
A1805DEA  7038     		strb r0, [r7]

#1421		
#1422								(* PumpIntervalTimer_3 *)
#1423								MOVE		FALSE,PumpIntervalTimer_3.IN	{LNXT:353|-1|-1}
(*) BOOL
A1805DEC  2000     		mov r0, #0 ; 0
A1805DEE  F8DF 737C		ldr r7, [pc, #+892] ; 0xA1A000B8
A1805DF2  7038     		strb r0, [r7]

#1424								CAL		PumpIntervalTimer_3	{LNXT:353|357|-1}
(*) BOOL
A1805DF4  E92D 0021		stmdb sp!, { r0, r5 }
A1805DF8  F8DF 536C		ldr r5, [pc, #+876] ; 0xA1A000B4
A1805DFC  F85F 4D7C		ldr r4, [pc, #-3452] ; 0xA1804550
A1805E00  F044 0401		orr r4, r4, #1
A1805E04  47A0     		blx r4
A1805E06  E8BD 0021		ldmia sp!, { r0, r5 }

#1425		
#1426		$label101:
#1427							(* END_IF *)
#1428		
#1429		$label100:
#1430						(* END_IF *)
#1431		
#1432		$label99:
#1433					(* END_IF *)
#1434		
#1435		
#1436					(* IF TestRunActive_3 *)
#1437					LD		TestRunActive_3	{LNXT:357|-1|-1}
(*) UNDEF
A1805E0A  F8DF 7338		ldr r7, [pc, #+824] ; 0xA1A0008B
A1805E0E  7838     		ldrb r0, [r7]

#1438					JMPCN	$label102	{LNXT:357|358|385}
(-) BOOL
A1805E10  2800     		cmp r0, #0
A1805E12  F000 8092		beq #292 ; 0xA1805F3A


#1439		
#1440					(* THEN *)
#1441		
#1442		
#1443						(* IF TestRunRunning_3 *)
#1444						LD		TestRunRunning_3	{LNXT:358|-1|-1}
(*) UNDEF
A1805E16  F8DF 7328		ldr r7, [pc, #+808] ; 0xA1A00089
A1805E1A  7838     		ldrb r0, [r7]

#1445						NOT	{LNXT:358|-1|-1}
(*) BOOL
A1805E1C  2800     		cmp r0, #0
A1805E1E  BF08 2001		eqmov r0, #1
A1805E22  BF18 2000		nemov r0, #0

#1446						JMPCN	$label103	{LNXT:358|359|361}
(-) BOOL
A1805E26  2800     		cmp r0, #0
A1805E28  D004     		beq #8 ; 0xA1805E34


#1447		
#1448						(* THEN *)
#1449		
#1450							(* TestRunRunning_3 := TRUE; *)
#1451							MOVE		TRUE,TestRunRunning_3	{LNXT:359|361|-1}
(*) BOOL
A1805E2C  2001     		mov r0, #1 ; 1
A1805E2E  F8DF 7310		ldr r7, [pc, #+784] ; 0xA1A00089
A1805E32  7038     		strb r0, [r7]

#1452		
#1453		$label103:
#1454						(* END_IF *)
#1455		
#1456		
#1457						(* IF TestRunRunning_3 AND Tank_Level < Level_2 And Not ALM_C AND Avto_C *)
#1458						LD		ALM_C	{LNXT:361|-1|-1}
(*) UNDEF
A1805E34  F85F 7D84		ldr r7, [pc, #-3460] ; 0xA1A0002E
A1805E38  7838     		ldrb r0, [r7]

#1459						NOT	{LNXT:361|-1|-1}
(*) BOOL
A1805E3A  2800     		cmp r0, #0
A1805E3C  BF08 2001		eqmov r0, #1
A1805E40  BF18 2000		nemov r0, #0

#1460						AND(		Tank_Level	{LNXT:361|-1|-1}
(*) BOOL
A1805E44  B082     		sub sp, sp, #8
A1805E46  F8CD 0000		str r0, [sp]
A1805E4A  F85F 7DC0		ldr r7, [pc, #-3520] ; 0xA1A00012
A1805E4E  F9B7 0000		ldrsh r0, [r7]

#1461						LT		Level_2	{LNXT:361|-1|-1}
(*) INT
A1805E52  F85F 7E20		ldr r7, [pc, #-3616] ; 0xA0003F08
A1805E56  F9B7 7000		ldrsh r7, [r7]
A1805E5A  42B8     		cmp r0, r7
A1805E5C  BFA8 2000		gemov r0, #0
A1805E60  BFB8 2001		ltmov r0, #1

#1462						AND		TestRunRunning_3	{LNXT:361|-1|-1}
(*) BOOL
A1805E64  F8DF 72D8		ldr r7, [pc, #+728] ; 0xA1A00089
A1805E68  783F     		ldrb r7, [r7]
A1805E6A  4038     		and r0, r0, r7

#1463						)	{LNXT:361|-1|-1}
(*) BOOL
A1805E6C  4607     		mov r7, r0
A1805E6E  F8DD 0000		ldr r0, [sp]
A1805E72  B002     		add sp, sp, #8
A1805E74  4038     		and r0, r0, r7

#1464						AND		Avto_C	{LNXT:361|-1|-1}
(*) BOOL
A1805E76  F85F 7DC0		ldr r7, [pc, #-3520] ; 0xA1A0002F
A1805E7A  783F     		ldrb r7, [r7]
A1805E7C  4038     		and r0, r0, r7

#1465						JMPCN	$label104	{LNXT:361|362|385}
(-) BOOL
A1805E7E  2800     		cmp r0, #0
A1805E80  D05B     		beq #182 ; 0xA1805F3A


#1466		
#1467						(* THEN *)
#1468		
#1469							(* PumpRunTimer_3 *)
#1470							LD		TestRunActive_3	{LNXT:362|-1|-1}
(*) UNDEF
A1805E84  F8DF 72BC		ldr r7, [pc, #+700] ; 0xA1A0008B
A1805E88  7838     		ldrb r0, [r7]

#1471							AND		TestRunRunning_3	{LNXT:362|-1|-1}
(*) BOOL
A1805E8A  F8DF 72B4		ldr r7, [pc, #+692] ; 0xA1A00089
A1805E8E  783F     		ldrb r7, [r7]
A1805E90  4038     		and r0, r0, r7

#1472							ST		PumpRunTimer_3.IN	{LNXT:362|-1|-1}
(*) BOOL
A1805E92  F8DF 72E8		ldr r7, [pc, #+744] ; 0xA1A000CC
A1805E96  7038     		strb r0, [r7]

#1473							MOVE		7000,PumpRunTimer_3.PT	{LNXT:362|-1|-1}
(*) BOOL
A1805E98  F8DF 72F4		ldr r7, [pc, #+756] ; 0x1B58
A1805E9C  4638     		mov r0, r7
A1805E9E  F8DF 72E0		ldr r7, [pc, #+736] ; 0xA1A000D0
A1805EA2  6038     		str r0, [r7]

#1474							CAL		PumpRunTimer_3	{LNXT:362|363|-1}
(*) UDINT
A1805EA4  E92D 0021		stmdb sp!, { r0, r5 }
A1805EA8  F8DF 52CC		ldr r5, [pc, #+716] ; 0xA1A000C8
A1805EAC  F85F 4E2C		ldr r4, [pc, #-3628] ; 0xA1804550
A1805EB0  F044 0401		orr r4, r4, #1
A1805EB4  47A0     		blx r4
A1805EB6  E8BD 0021		ldmia sp!, { r0, r5 }

#1475		
#1476		
#1477							(* IF PumpRunTimer_3.Q *)
#1478							LD		PumpRunTimer_3.Q	{LNXT:363|-1|-1}
(*) UNDEF
A1805EBA  F8DF 72C8		ldr r7, [pc, #+712] ; 0xA1A000D4
A1805EBE  7838     		ldrb r0, [r7]

#1479							NOT	{LNXT:363|-1|-1}
(*) BOOL
A1805EC0  2800     		cmp r0, #0
A1805EC2  BF08 2001		eqmov r0, #1
A1805EC6  BF18 2000		nemov r0, #0

#1480							JMPCN	$label105	{LNXT:363|364|366}
(-) BOOL
A1805ECA  2800     		cmp r0, #0
A1805ECC  D006     		beq #12 ; 0xA1805EDC


#1481		
#1482							(* THEN *)
#1483		
#1484								(* Motor_C := TRUE; *)
#1485								MOVE		TRUE,Motor_C	{LNXT:364|385|-1}
(*) BOOL
A1805ED0  2001     		mov r0, #1 ; 1
A1805ED2  F85F 7DE0		ldr r7, [pc, #-3552] ; 0x100004AE
A1805ED6  7038     		strb r0, [r7]

#1486								JMP		$label106	{LNXT:363|364|366}
(-) BOOL
A1805ED8  E02F     		b #94 ; 0xA1805F3A


#1487		$label105:
#1488		
#1489							(* ELSE *)
#1490		
#1491								(* Motor_C := FALSE; *)
#1492								MOVE		FALSE,Motor_C	{LNXT:366|367|-1}
(*) BOOL
A1805EDC  2000     		mov r0, #0 ; 0
A1805EDE  F85F 7DEC		ldr r7, [pc, #-3564] ; 0x100004AE
A1805EE2  7038     		strb r0, [r7]

#1493		
#1494								(* TestRunRunning_3 := FALSE; *)
#1495								MOVE		FALSE,TestRunRunning_3	{LNXT:367|368|-1}
(*) BOOL
A1805EE4  2000     		mov r0, #0 ; 0
A1805EE6  F8DF 7258		ldr r7, [pc, #+600] ; 0xA1A00089
A1805EEA  7038     		strb r0, [r7]

#1496		
#1497								(* TestRunActive_3 := FALSE; *)
#1498								MOVE		FALSE,TestRunActive_3	{LNXT:368|369|-1}
(*) BOOL
A1805EEC  2000     		mov r0, #0 ; 0
A1805EEE  F8DF 7254		ldr r7, [pc, #+596] ; 0xA1A0008B
A1805EF2  7038     		strb r0, [r7]

#1499		
#1500								(* PumpRunTimer_3 *)
#1501								MOVE		FALSE,PumpRunTimer_3.IN	{LNXT:369|-1|-1}
(*) BOOL
A1805EF4  2000     		mov r0, #0 ; 0
A1805EF6  F8DF 7284		ldr r7, [pc, #+644] ; 0xA1A000CC
A1805EFA  7038     		strb r0, [r7]

#1502								MOVE		7000,PumpRunTimer_3.PT	{LNXT:369|-1|-1}
(*) BOOL
A1805EFC  F8DF 7290		ldr r7, [pc, #+656] ; 0x1B58
A1805F00  4638     		mov r0, r7
A1805F02  F8DF 727C		ldr r7, [pc, #+636] ; 0xA1A000D0
A1805F06  6038     		str r0, [r7]

#1503								CAL		PumpRunTimer_3	{LNXT:369|370|-1}
(*) UDINT
A1805F08  E92D 0021		stmdb sp!, { r0, r5 }
A1805F0C  F8DF 5268		ldr r5, [pc, #+616] ; 0xA1A000C8
A1805F10  F85F 4E90		ldr r4, [pc, #-3728] ; 0xA1804550
A1805F14  F044 0401		orr r4, r4, #1
A1805F18  47A0     		blx r4
A1805F1A  E8BD 0021		ldmia sp!, { r0, r5 }

#1504		
#1505								(* CurrentPump := ((CurrentPump) MOD 3) + 1; *)
#1506								LD		CurrentPump	{LNXT:370|385|-1}
(*) UNDEF
A1805F1E  F85F 7620		ldr r7, [pc, #-1568] ; 0xA1A0005C
A1805F22  F9B7 0000		ldrsh r0, [r7]

#1507								MOD		3	{LNXT:370|385|-1}
(*) INT
A1805F26  2103     		mov r1, #3 ; 3
A1805F28  F85F 4EAC		ldr r4, [pc, #-3756] ; 0xA1804500
A1805F2C  F044 0401		orr r4, r4, #1
A1805F30  47A0     		blx r4

#1508								ADD		1	{LNXT:370|385|-1}
(-) INT
A1805F32  1C40     		add r0, r0, #1

#1509								ST		CurrentPump	{LNXT:370|385|-1}
(*) INT
A1805F34  F85F 7638		ldr r7, [pc, #-1592] ; 0xA1A0005C
A1805F38  8038     		strh r0, [r7]

#1510		
#1511		$label106:
#1512							(* END_IF *)
#1513		
#1514		$label104:
#1515						(* END_IF *)
#1516		
#1517		$label102:
#1518					(* END_IF *)
#1519		
#1520		$label76:
#1521		
#1522				(* END_CASE *)
#1523		
#1524		$label75:
#1525			(* END_IF *)
#1526		
#1527		
#1528			(* IF Tank_Level >= Level_2 AND Tank_Level < Level_3 *)
#1529			LD		Tank_Level	{LNXT:385|-1|-1}
(*) UNDEF
A1805F3A  F85F 7EB0		ldr r7, [pc, #-3760] ; 0xA1A00012
A1805F3E  F9B7 0000		ldrsh r0, [r7]

#1530			LT		Level_3	{LNXT:385|-1|-1}
(*) INT
A1805F42  F85F 7F0C		ldr r7, [pc, #-3852] ; 0xA0003F0A
A1805F46  F9B7 7000		ldrsh r7, [r7]
A1805F4A  42B8     		cmp r0, r7
A1805F4C  BFA8 2000		gemov r0, #0
A1805F50  BFB8 2001		ltmov r0, #1

#1531			AND(		Tank_Level	{LNXT:385|-1|-1}
(*) BOOL
A1805F54  B082     		sub sp, sp, #8
A1805F56  F8CD 0000		str r0, [sp]
A1805F5A  F85F 7ED0		ldr r7, [pc, #-3792] ; 0xA1A00012
A1805F5E  F9B7 0000		ldrsh r0, [r7]

#1532			GE		Level_2	{LNXT:385|-1|-1}
(*) INT
A1805F62  F85F 7F30		ldr r7, [pc, #-3888] ; 0xA0003F08
A1805F66  F9B7 7000		ldrsh r7, [r7]
A1805F6A  42B8     		cmp r0, r7
A1805F6C  BFB8 2000		ltmov r0, #0
A1805F70  BFA8 2001		gemov r0, #1

#1533			)	{LNXT:385|-1|-1}
(*) BOOL
A1805F74  4607     		mov r7, r0
A1805F76  F8DD 0000		ldr r0, [sp]
A1805F7A  B002     		add sp, sp, #8
A1805F7C  4038     		and r0, r0, r7

#1534			JMPCN	$label107	{LNXT:385|388|423}
(-) BOOL
A1805F7E  2800     		cmp r0, #0
A1805F80  F000 8136		beq #620 ; 0xA18061F0


#1535		
#1536			(* THEN *)
#1537		
#1538		
#1539				(* IF MOTOR_A AND NOT MOTOR_B AND NOT MOTOR_C *)
#1540				LD		MOTOR_C	{LNXT:388|-1|-1}
(*) UNDEF
A1805F84  F85F 7E94		ldr r7, [pc, #-3732] ; 0x100004AE
A1805F88  7838     		ldrb r0, [r7]

#1541				NOT	{LNXT:388|-1|-1}
(*) BOOL
A1805F8A  2800     		cmp r0, #0
A1805F8C  BF08 2001		eqmov r0, #1
A1805F90  BF18 2000		nemov r0, #0

#1542				AND(		MOTOR_B	{LNXT:388|-1|-1}
(*) BOOL
A1805F94  B082     		sub sp, sp, #8
A1805F96  F8CD 0000		str r0, [sp]
A1805F9A  F85F 7EAC		ldr r7, [pc, #-3756] ; 0x100004AD
A1805F9E  7838     		ldrb r0, [r7]

#1543				NOT	{LNXT:388|-1|-1}
(*) BOOL
A1805FA0  2800     		cmp r0, #0
A1805FA2  BF08 2001		eqmov r0, #1
A1805FA6  BF18 2000		nemov r0, #0

#1544				AND		MOTOR_A	{LNXT:388|-1|-1}
(*) BOOL
A1805FAA  F85F 7EC0		ldr r7, [pc, #-3776] ; 0x100004AC
A1805FAE  783F     		ldrb r7, [r7]
A1805FB0  4038     		and r0, r0, r7

#1545				)	{LNXT:388|-1|-1}
(*) BOOL
A1805FB2  4607     		mov r7, r0
A1805FB4  F8DD 0000		ldr r0, [sp]
A1805FB8  B002     		add sp, sp, #8
A1805FBA  4038     		and r0, r0, r7

#1546				JMPCN	$label108	{LNXT:388|391|401}
(-) BOOL
A1805FBC  2800     		cmp r0, #0
A1805FBE  D028     		beq #80 ; 0xA1806012


#1547		
#1548				(* THEN *)
#1549		
#1550		
#1551					(* IF ALM_B AND Avto_B *)
#1552					LD		ALM_B	{LNXT:391|-1|-1}
(*) UNDEF
A1805FC2  F85F 7F18		ldr r7, [pc, #-3864] ; 0xA1A0002C
A1805FC6  7838     		ldrb r0, [r7]

#1553					NOT	{LNXT:391|-1|-1}
(*) BOOL
A1805FC8  2800     		cmp r0, #0
A1805FCA  BF08 2001		eqmov r0, #1
A1805FCE  BF18 2000		nemov r0, #0

#1554					AND		Avto_B	{LNXT:391|-1|-1}
(*) BOOL
A1805FD2  F85F 7F24		ldr r7, [pc, #-3876] ; 0xA1A0002D
A1805FD6  783F     		ldrb r7, [r7]
A1805FD8  4038     		and r0, r0, r7

#1555					JMPCN	$label109	{LNXT:391|392|394}
(-) BOOL
A1805FDA  2800     		cmp r0, #0
A1805FDC  D006     		beq #12 ; 0xA1805FEC


#1556		
#1557					(* THEN *)
#1558		
#1559						(* Motor_B:= TRUE; *)
#1560						MOVE		TRUE,Motor_B	{LNXT:392|401|-1}
(*) BOOL
A1805FE0  2001     		mov r0, #1 ; 1
A1805FE2  F85F 7EF4		ldr r7, [pc, #-3828] ; 0x100004AD
A1805FE6  7038     		strb r0, [r7]

#1561						JMP		$label110	{LNXT:391|392|394}
(-) BOOL
A1805FE8  E013     		b #38 ; 0xA1806012


#1562		$label109:
#1563		
#1564					(* ELSIF ALM_C AND Avto_C *)
#1565					LD		ALM_C	{LNXT:394|-1|-1}
(*) UNDEF
A1805FEC  F85F 7F3C		ldr r7, [pc, #-3900] ; 0xA1A0002E
A1805FF0  7838     		ldrb r0, [r7]

#1566					NOT	{LNXT:394|-1|-1}
(*) BOOL
A1805FF2  2800     		cmp r0, #0
A1805FF4  BF08 2001		eqmov r0, #1
A1805FF8  BF18 2000		nemov r0, #0

#1567					AND		Avto_C	{LNXT:394|-1|-1}
(*) BOOL
A1805FFC  F85F 7F48		ldr r7, [pc, #-3912] ; 0xA1A0002F
A1806000  783F     		ldrb r7, [r7]
A1806002  4038     		and r0, r0, r7

#1568					JMPCN	$label110	{LNXT:394|395|401}
(-) BOOL
A1806004  2800     		cmp r0, #0
A1806006  D004     		beq #8 ; 0xA1806012


#1569		
#1570					(* THEN *)
#1571		
#1572						(* Motor_C:= TRUE; *)
#1573						MOVE		TRUE,Motor_C	{LNXT:395|401|-1}
(*) BOOL
A180600A  2001     		mov r0, #1 ; 1
A180600C  F85F 7F1C		ldr r7, [pc, #-3868] ; 0x100004AE
A1806010  7038     		strb r0, [r7]

#1574		
#1575		$label110:
#1576					(* END_IF *)
#1577		
#1578		$label108:
#1579				(* END_IF *)
#1580		
#1581		
#1582				(* IF MOTOR_B AND NOT MOTOR_A AND NOT MOTOR_C *)
#1583				LD		MOTOR_C	{LNXT:401|-1|-1}
(*) UNDEF
A1806012  F85F 7F20		ldr r7, [pc, #-3872] ; 0x100004AE
A1806016  7838     		ldrb r0, [r7]

#1584				NOT	{LNXT:401|-1|-1}
(*) BOOL
A1806018  2800     		cmp r0, #0
A180601A  BF08 2001		eqmov r0, #1
A180601E  BF18 2000		nemov r0, #0

#1585				AND(		MOTOR_A	{LNXT:401|-1|-1}
(*) BOOL
A1806022  B082     		sub sp, sp, #8
A1806024  F8CD 0000		str r0, [sp]
A1806028  F85F 7F40		ldr r7, [pc, #-3904] ; 0x100004AC
A180602C  7838     		ldrb r0, [r7]

#1586				NOT	{LNXT:401|-1|-1}
(*) BOOL
A180602E  2800     		cmp r0, #0
A1806030  BF08 2001		eqmov r0, #1
A1806034  BF18 2000		nemov r0, #0

#1587				AND		MOTOR_B	{LNXT:401|-1|-1}
(*) BOOL
A1806038  F85F 7F4C		ldr r7, [pc, #-3916] ; 0x100004AD
A180603C  783F     		ldrb r7, [r7]
A180603E  4038     		and r0, r0, r7

#1588				)	{LNXT:401|-1|-1}
(*) BOOL
A1806040  4607     		mov r7, r0
A1806042  F8DD 0000		ldr r0, [sp]
A1806046  B002     		add sp, sp, #8
A1806048  4038     		and r0, r0, r7

#1589				JMPCN	$label111	{LNXT:401|402|410}
(-) BOOL
A180604A  2800     		cmp r0, #0
A180604C  D036     		beq #108 ; 0xA18060BC


#1590		
#1591				(* THEN *)
#1592		
#1593		
#1594					(* IF ALM_C AND Avto_B *)
#1595					LD		ALM_C	{LNXT:402|-1|-1}
(*) UNDEF
A1806050  F85F 7FA0		ldr r7, [pc, #-4000] ; 0xA1A0002E
A1806054  7838     		ldrb r0, [r7]

#1596					NOT	{LNXT:402|-1|-1}
(*) BOOL
A1806056  2800     		cmp r0, #0
A1806058  BF08 2001		eqmov r0, #1
A180605C  BF18 2000		nemov r0, #0

#1597					AND		Avto_B	{LNXT:402|-1|-1}
(*) BOOL
A1806060  F85F 7FB4		ldr r7, [pc, #-4020] ; 0xA1A0002D
A1806064  783F     		ldrb r7, [r7]
A1806066  4038     		and r0, r0, r7

#1598					JMPCN	$label112	{LNXT:402|403|405}
(-) BOOL
A1806068  2800     		cmp r0, #0
A180606A  D004     		beq #8 ; 0xA1806076


#1599		
#1600					(* THEN *)
#1601		
#1602						(* Motor_C:= TRUE; *)
#1603						MOVE		TRUE,Motor_C	{LNXT:403|405|-1}
(*) BOOL
A180606E  2001     		mov r0, #1 ; 1
A1806070  F85F 7F80		ldr r7, [pc, #-3968] ; 0x100004AE
A1806074  7038     		strb r0, [r7]

#1604		
#1605		$label112:
#1606					(* END_IF *)
#1607		
#1608		
#1609					(* IF ALM_A AND Avto_A AND NOT MOTOR_C *)
#1610					LD		MOTOR_C	{LNXT:405|-1|-1}
(*) UNDEF
A1806076  F85F 7F84		ldr r7, [pc, #-3972] ; 0x100004AE
A180607A  7838     		ldrb r0, [r7]

#1611					NOT	{LNXT:405|-1|-1}
(*) BOOL
A180607C  2800     		cmp r0, #0
A180607E  BF08 2001		eqmov r0, #1
A1806082  BF18 2000		nemov r0, #0

#1612					AND(		ALM_A	{LNXT:405|-1|-1}
(*) BOOL
A1806086  B082     		sub sp, sp, #8
A1806088  F8CD 0000		str r0, [sp]
A180608C  F85F 7FE8		ldr r7, [pc, #-4072] ; 0xA1A0002B
A1806090  7838     		ldrb r0, [r7]

#1613					NOT	{LNXT:405|-1|-1}
(*) BOOL
A1806092  2800     		cmp r0, #0
A1806094  BF08 2001		eqmov r0, #1
A1806098  BF18 2000		nemov r0, #0

#1614					AND		Avto_A	{LNXT:405|-1|-1}
(*) BOOL
A180609C  F85F 7FFC		ldr r7, [pc, #-4092] ; 0xA1A0002A
A18060A0  783F     		ldrb r7, [r7]
A18060A2  4038     		and r0, r0, r7

#1615					)	{LNXT:405|-1|-1}
(*) BOOL
A18060A4  4607     		mov r7, r0
A18060A6  F8DD 0000		ldr r0, [sp]
A18060AA  B002     		add sp, sp, #8
A18060AC  4038     		and r0, r0, r7

#1616					JMPCN	$label113	{LNXT:405|406|410}
(-) BOOL
A18060AE  2800     		cmp r0, #0
A18060B0  D004     		beq #8 ; 0xA18060BC


#1617		
#1618					(* THEN *)
#1619		
#1620						(* Motor_A:= TRUE; *)
#1621						MOVE		TRUE,Motor_A	{LNXT:406|410|-1}
(*) BOOL
A18060B4  2001     		mov r0, #1 ; 1
A18060B6  F85F 7FCC		ldr r7, [pc, #-4044] ; 0x100004AC
A18060BA  7038     		strb r0, [r7]

#1622		
#1623		$label113:
#1624					(* END_IF *)
#1625		
#1626		$label111:
#1627				(* END_IF *)
#1628		
#1629		
#1630				(* IF MOTOR_C AND NOT MOTOR_A AND NOT MOTOR_B *)
#1631				LD		MOTOR_B	{LNXT:410|-1|-1}
(*) UNDEF
A18060BC  F85F 7FD0		ldr r7, [pc, #-4048] ; 0x100004AD
A18060C0  7838     		ldrb r0, [r7]

#1632				NOT	{LNXT:410|-1|-1}
(*) BOOL
A18060C2  2800     		cmp r0, #0
A18060C4  BF08 2001		eqmov r0, #1
A18060C8  BF18 2000		nemov r0, #0

#1633				AND(		MOTOR_A	{LNXT:410|-1|-1}
(*) BOOL
A18060CC  B082     		sub sp, sp, #8
A18060CE  F8CD 0000		str r0, [sp]
A18060D2  F85F 7FE8		ldr r7, [pc, #-4072] ; 0x100004AC
A18060D6  7838     		ldrb r0, [r7]

#1634				NOT	{LNXT:410|-1|-1}
(*) BOOL
A18060D8  2800     		cmp r0, #0
A18060DA  BF08 2001		eqmov r0, #1
A18060DE  BF18 2000		nemov r0, #0

#1635				AND		MOTOR_C	{LNXT:410|-1|-1}
(*) BOOL
A18060E2  F85F 7FF0		ldr r7, [pc, #-4080] ; 0x100004AE
A18060E6  783F     		ldrb r7, [r7]
A18060E8  4038     		and r0, r0, r7

#1636				)	{LNXT:410|-1|-1}
(*) BOOL
A18060EA  4607     		mov r7, r0
A18060EC  F8DD 0000		ldr r0, [sp]
A18060F0  B002     		add sp, sp, #8
A18060F2  4038     		and r0, r0, r7

#1637				JMPCN	$label114	{LNXT:410|411|423}
(-) BOOL
A18060F4  2800     		cmp r0, #0
A18060F6  D07B     		beq #246 ; 0xA18061F0


#1638		
#1639				(* THEN *)
#1640		
#1641		
#1642					(* IF ALM_A AND Avto_C *)
#1643					LD		ALM_A	{LNXT:411|-1|-1}
(*) UNDEF
A18060FA  F8DF 7010		ldr r7, [pc, #+16] ; 0xA1A0002B
A18060FE  7838     		ldrb r0, [r7]

#1644					NOT	{LNXT:411|-1|-1}
(*) BOOL
A1806100  2800     		cmp r0, #0
A1806102  BF08 2001		eqmov r0, #1
A1806106  BF18 2000		nemov r0, #0

A180610A  E043     		b #134

A180610C  A1A0002B		; 0xA1A0002B
A1806110  A1A00059		; 0xA1A00059
A1806114  A1A0005E		; 0xA1A0005E
A1806118  A1A0005F		; 0xA1A0005F
A180611C  A1A00060		; 0xA1A00060
A1806120  A1A00064		; 0xA1A00064
A1806124  A1A00068		; 0xA1A00068
A1806128  A1A0006C		; 0xA1A0006C
A180612C  A1A00074		; 0xA1A00074
A1806130  A1A00078		; 0xA1A00078
A1806134  A1A0007C		; 0xA1A0007C
A1806138  A1A00080		; 0xA1A00080
A180613C  A1A00088		; 0xA1A00088
A1806140  A1A00089		; 0xA1A00089
A1806144  A1A0008B		; 0xA1A0008B
A1806148  A1A0008C		; 0xA1A0008C
A180614C  A1A00090		; 0xA1A00090
A1806150  A1A00094		; 0xA1A00094
A1806154  A1A00098		; 0xA1A00098
A1806158  A1A000A0		; 0xA1A000A0
A180615C  A1A000A4		; 0xA1A000A4
A1806160  A1A000A8		; 0xA1A000A8
A1806164  A1A000AC		; 0xA1A000AC
A1806168  A1A000B4		; 0xA1A000B4
A180616C  A1A000B8		; 0xA1A000B8
A1806170  A1A000BC		; 0xA1A000BC
A1806174  A1A000C0		; 0xA1A000C0
A1806178  A1A000C8		; 0xA1A000C8
A180617C  A1A000CC		; 0xA1A000CC
A1806180  A1A000D0		; 0xA1A000D0
A1806184  A1A000D4		; 0xA1A000D4
A1806188  00001388		; 0x00001388
A180618C  00001770		; 0x00001770
A1806190  00001B58		; 0x00001B58

#1645					AND		Avto_C	{LNXT:411|-1|-1}
(*) BOOL
A1806194  F8DF 7184		ldr r7, [pc, #+388] ; 0xA1A0002F
A1806198  783F     		ldrb r7, [r7]
A180619A  4038     		and r0, r0, r7

#1646					JMPCN	$label115	{LNXT:411|412|414}
(-) BOOL
A180619C  2800     		cmp r0, #0
A180619E  D004     		beq #8 ; 0xA18061AA


#1647		
#1648					(* THEN *)
#1649		
#1650						(* Motor_A:= TRUE; *)
#1651						MOVE		TRUE,Motor_A	{LNXT:412|414|-1}
(*) BOOL
A18061A2  2001     		mov r0, #1 ; 1
A18061A4  F8DF 7178		ldr r7, [pc, #+376] ; 0x100004AC
A18061A8  7038     		strb r0, [r7]

#1652		
#1653		$label115:
#1654					(* END_IF *)
#1655		
#1656		
#1657					(* IF ALM_B AND Avto_B AND NOT MOTOR_A *)
#1658					LD		MOTOR_A	{LNXT:414|-1|-1}
(*) UNDEF
A18061AA  F8DF 7174		ldr r7, [pc, #+372] ; 0x100004AC
A18061AE  7838     		ldrb r0, [r7]

#1659					NOT	{LNXT:414|-1|-1}
(*) BOOL
A18061B0  2800     		cmp r0, #0
A18061B2  BF08 2001		eqmov r0, #1
A18061B6  BF18 2000		nemov r0, #0

#1660					AND(		ALM_B	{LNXT:414|-1|-1}
(*) BOOL
A18061BA  B082     		sub sp, sp, #8
A18061BC  F8CD 0000		str r0, [sp]
A18061C0  F8DF 714C		ldr r7, [pc, #+332] ; 0xA1A0002C
A18061C4  7838     		ldrb r0, [r7]

#1661					NOT	{LNXT:414|-1|-1}
(*) BOOL
A18061C6  2800     		cmp r0, #0
A18061C8  BF08 2001		eqmov r0, #1
A18061CC  BF18 2000		nemov r0, #0

#1662					AND		Avto_B	{LNXT:414|-1|-1}
(*) BOOL
A18061D0  F8DF 7140		ldr r7, [pc, #+320] ; 0xA1A0002D
A18061D4  783F     		ldrb r7, [r7]
A18061D6  4038     		and r0, r0, r7

#1663					)	{LNXT:414|-1|-1}
(*) BOOL
A18061D8  4607     		mov r7, r0
A18061DA  F8DD 0000		ldr r0, [sp]
A18061DE  B002     		add sp, sp, #8
A18061E0  4038     		and r0, r0, r7

#1664					JMPCN	$label116	{LNXT:414|415|423}
(-) BOOL
A18061E2  2800     		cmp r0, #0
A18061E4  D004     		beq #8 ; 0xA18061F0


#1665		
#1666					(* THEN *)
#1667		
#1668						(* Motor_B:= TRUE; *)
#1669						MOVE		TRUE,Motor_B	{LNXT:415|423|-1}
(*) BOOL
A18061E8  2001     		mov r0, #1 ; 1
A18061EA  F8DF 7138		ldr r7, [pc, #+312] ; 0x100004AD
A18061EE  7038     		strb r0, [r7]

#1670		
#1671		$label116:
#1672					(* END_IF *)
#1673		
#1674		$label114:
#1675				(* END_IF *)
#1676		
#1677		$label107:
#1678			(* END_IF *)
#1679		
#1680		
#1681			(* IF Tank_Level <= Level_1 and Motor_A and Motor_B and Motor_C *)
#1682			LD		Tank_Level	{LNXT:423|-1|-1}
(*) UNDEF
A18061F0  F8DF 7114		ldr r7, [pc, #+276] ; 0xA1A00012
A18061F4  F9B7 0000		ldrsh r0, [r7]

#1683			LE		Level_1	{LNXT:423|-1|-1}
(*) INT
A18061F8  F8DF 7104		ldr r7, [pc, #+260] ; 0xA0003F06
A18061FC  F9B7 7000		ldrsh r7, [r7]
A1806200  42B8     		cmp r0, r7
A1806202  BFC8 2000		gtmov r0, #0
A1806206  BFD8 2001		lemov r0, #1

#1684			AND		Motor_A	{LNXT:423|-1|-1}
(*) BOOL
A180620A  F8DF 7114		ldr r7, [pc, #+276] ; 0x100004AC
A180620E  783F     		ldrb r7, [r7]
A1806210  4038     		and r0, r0, r7

#1685			AND		Motor_B	{LNXT:423|-1|-1}
(*) BOOL
A1806212  F8DF 7110		ldr r7, [pc, #+272] ; 0x100004AD
A1806216  783F     		ldrb r7, [r7]
A1806218  4038     		and r0, r0, r7

#1686			AND		Motor_C	{LNXT:423|-1|-1}
(*) BOOL
A180621A  F8DF 710C		ldr r7, [pc, #+268] ; 0x100004AE
A180621E  783F     		ldrb r7, [r7]
A1806220  4038     		and r0, r0, r7

#1687			JMPCN	$label117	{LNXT:423|424|430}
(-) BOOL
A1806222  2800     		cmp r0, #0
A1806224  D004     		beq #8 ; 0xA1806230


#1688		
#1689			(* THEN *)
#1690		
#1691				(* Motor_A := False; *)
#1692				MOVE		False,Motor_A	{LNXT:424|430|-1}
(*) BOOL
A1806228  2000     		mov r0, #0 ; 0
A180622A  F8DF 70F4		ldr r7, [pc, #+244] ; 0x100004AC
A180622E  7038     		strb r0, [r7]

#1693		
#1694		$label117:
#1695			(* END_IF *)
#1696		
#1697		
#1698			(* IF Tank_Level > Level_3 *)
#1699			LD		Tank_Level	{LNXT:430|-1|-1}
(*) UNDEF
A1806230  F8DF 70D4		ldr r7, [pc, #+212] ; 0xA1A00012
A1806234  F9B7 0000		ldrsh r0, [r7]

#1700			GT		Level_3	{LNXT:430|-1|-1}
(*) INT
A1806238  F8DF 70C8		ldr r7, [pc, #+200] ; 0xA0003F0A
A180623C  F9B7 7000		ldrsh r7, [r7]
A1806240  42B8     		cmp r0, r7
A1806242  BFD8 2000		lemov r0, #0
A1806246  BFC8 2001		gtmov r0, #1

#1701			JMPCN	$label118	{LNXT:430|431|449}
(-) BOOL
A180624A  2800     		cmp r0, #0
A180624C  D039     		beq #114 ; 0xA18062C2


#1702		
#1703			(* THEN *)
#1704		
#1705		
#1706				(* IF ALM_A AND Avto_A *)
#1707				LD		ALM_A	{LNXT:431|-1|-1}
(*) UNDEF
A1806250  F85F 7148		ldr r7, [pc, #-328] ; 0xA1A0002B
A1806254  7838     		ldrb r0, [r7]

#1708				NOT	{LNXT:431|-1|-1}
(*) BOOL
A1806256  2800     		cmp r0, #0
A1806258  BF08 2001		eqmov r0, #1
A180625C  BF18 2000		nemov r0, #0

#1709				AND		Avto_A	{LNXT:431|-1|-1}
(*) BOOL
A1806260  F8DF 70A8		ldr r7, [pc, #+168] ; 0xA1A0002A
A1806264  783F     		ldrb r7, [r7]
A1806266  4038     		and r0, r0, r7

#1710				JMPCN	$label119	{LNXT:431|432|435}
(-) BOOL
A1806268  2800     		cmp r0, #0
A180626A  D004     		beq #8 ; 0xA1806276


#1711		
#1712				(* THEN *)
#1713		
#1714					(* Motor_A := TRUE; *)
#1715					MOVE		TRUE,Motor_A	{LNXT:432|435|-1}
(*) BOOL
A180626E  2001     		mov r0, #1 ; 1
A1806270  F8DF 70AC		ldr r7, [pc, #+172] ; 0x100004AC
A1806274  7038     		strb r0, [r7]

#1716		
#1717		$label119:
#1718				(* END_IF *)
#1719		
#1720		
#1721				(* IF ALM_B AND Avto_B *)
#1722				LD		ALM_B	{LNXT:435|-1|-1}
(*) UNDEF
A1806276  F8DF 7098		ldr r7, [pc, #+152] ; 0xA1A0002C
A180627A  7838     		ldrb r0, [r7]

#1723				NOT	{LNXT:435|-1|-1}
(*) BOOL
A180627C  2800     		cmp r0, #0
A180627E  BF08 2001		eqmov r0, #1
A1806282  BF18 2000		nemov r0, #0

#1724				AND		Avto_B	{LNXT:435|-1|-1}
(*) BOOL
A1806286  F8DF 708C		ldr r7, [pc, #+140] ; 0xA1A0002D
A180628A  783F     		ldrb r7, [r7]
A180628C  4038     		and r0, r0, r7

#1725				JMPCN	$label120	{LNXT:435|436|439}
(-) BOOL
A180628E  2800     		cmp r0, #0
A1806290  D004     		beq #8 ; 0xA180629C


#1726		
#1727				(* THEN *)
#1728		
#1729					(* Motor_B := TRUE; *)
#1730					MOVE		TRUE,Motor_B	{LNXT:436|439|-1}
(*) BOOL
A1806294  2001     		mov r0, #1 ; 1
A1806296  F8DF 708C		ldr r7, [pc, #+140] ; 0x100004AD
A180629A  7038     		strb r0, [r7]

#1731		
#1732		$label120:
#1733				(* END_IF *)
#1734		
#1735		
#1736				(* IF ALM_C AND Avto_C *)
#1737				LD		ALM_C	{LNXT:439|-1|-1}
(*) UNDEF
A180629C  F8DF 7078		ldr r7, [pc, #+120] ; 0xA1A0002E
A18062A0  7838     		ldrb r0, [r7]

#1738				NOT	{LNXT:439|-1|-1}
(*) BOOL
A18062A2  2800     		cmp r0, #0
A18062A4  BF08 2001		eqmov r0, #1
A18062A8  BF18 2000		nemov r0, #0

#1739				AND		Avto_C	{LNXT:439|-1|-1}
(*) BOOL
A18062AC  F8DF 706C		ldr r7, [pc, #+108] ; 0xA1A0002F
A18062B0  783F     		ldrb r7, [r7]
A18062B2  4038     		and r0, r0, r7

#1740				JMPCN	$label121	{LNXT:439|440|449}
(-) BOOL
A18062B4  2800     		cmp r0, #0
A18062B6  D004     		beq #8 ; 0xA18062C2


#1741		
#1742				(* THEN *)
#1743		
#1744					(* Motor_C := TRUE; *)
#1745					MOVE		TRUE,Motor_C	{LNXT:440|449|-1}
(*) BOOL
A18062BA  2001     		mov r0, #1 ; 1
A18062BC  F8DF 7068		ldr r7, [pc, #+104] ; 0x100004AE
A18062C0  7038     		strb r0, [r7]

#1746		
#1747		$label121:
#1748				(* END_IF *)
#1749		
#1750		$label118:
#1751			(* END_IF *)
#1752		
#1753		
#1754			(* IF Tank_Level <= level_min *)
#1755			LD		Tank_Level	{LNXT:449|-1|-1}
(*) UNDEF
A18062C2  F8DF 7044		ldr r7, [pc, #+68] ; 0xA1A00012
A18062C6  F9B7 0000		ldrsh r0, [r7]

#1756			LE		level_min	{LNXT:449|-1|-1}
(*) INT
A18062CA  F8DF 7030		ldr r7, [pc, #+48] ; 0xA0003F04
A18062CE  F9B7 7000		ldrsh r7, [r7]
A18062D2  42B8     		cmp r0, r7
A18062D4  BFC8 2000		gtmov r0, #0
A18062D8  BFD8 2001		lemov r0, #1

#1757			JMPCN	$label122	{LNXT:449|450|5}
(-) BOOL
A18062DC  2800     		cmp r0, #0
A18062DE  D00C     		beq #24 ; 0xA18062FA


#1758		
#1759			(* THEN *)
#1760		
#1761				(* Motor_A := False; *)
#1762				MOVE		False,Motor_A	{LNXT:450|451|-1}
(*) BOOL
A18062E2  2000     		mov r0, #0 ; 0
A18062E4  F8DF 7038		ldr r7, [pc, #+56] ; 0x100004AC
A18062E8  7038     		strb r0, [r7]

#1763		
#1764				(* Motor_B := False; *)
#1765				MOVE		False,Motor_B	{LNXT:451|452|-1}
(*) BOOL
A18062EA  2000     		mov r0, #0 ; 0
A18062EC  F8DF 7034		ldr r7, [pc, #+52] ; 0x100004AD
A18062F0  7038     		strb r0, [r7]

#1766		
#1767				(* Motor_C := False; *)
#1768				MOVE		False,Motor_C	{LNXT:452|5|-1}
(*) BOOL
A18062F2  2000     		mov r0, #0 ; 0
A18062F4  F8DF 7030		ldr r7, [pc, #+48] ; 0x100004AE
A18062F8  7038     		strb r0, [r7]

A18062FA  E017     		b #46

A18062FC  FFFFFFFF		; 0xA0003F04
A1806300  FFFFFFFF		; 0xA0003F06
A1806304  FFFFFFFF		; 0xA0003F0A
A1806308  A1A00012		; 0xA1A00012
A180630C  A1A0002A		; 0xA1A0002A
A1806310  A1A0002C		; 0xA1A0002C
A1806314  A1A0002D		; 0xA1A0002D
A1806318  A1A0002E		; 0xA1A0002E
A180631C  A1A0002F		; 0xA1A0002F
A1806320  FFFFFFFF		; 0x100004AC
A1806324  FFFFFFFF		; 0x100004AD
A1806328  FFFFFFFF		; 0x100004AE

END_PROGRAM
**************************************************
	List program: Register
**************************************************

PROGRAM Register

END_PROGRAM

#0		{SRC:Register}
#1		(*$WAITSWITCH$*)
#2		
#3			(* level_tank := Tank_Level; *)
#4			MOVE		Tank_Level,level_tank	{LNXT:3|6|-1}
(*) UDINT
A180632C  F8DF 7124		ldr r7, [pc, #+292] ; 0xA1A00012
A1806330  F9B7 0000		ldrsh r0, [r7]
A1806334  F8DF 7110		ldr r7, [pc, #+272] ; 0xA0003F02
A1806338  8038     		strh r0, [r7]

#5		
#6		
#7			(* IF Alarms >0 *)
#8			LD		Alarms	{LNXT:6|-1|-1}
(*) UNDEF
A180633A  F8DF 7110		ldr r7, [pc, #+272] ; 0xA0003F0E
A180633E  8838     		ldrh r0, [r7]

#9			GT		0	{LNXT:6|-1|-1}
(*) WORD
A1806340  2800     		cmp r0, #0
A1806342  BFD8 2000		lemov r0, #0
A1806346  BFC8 2001		gtmov r0, #1

#10			JMPCN	$label0	{LNXT:6|7|9}
(-) BOOL
A180634A  2800     		cmp r0, #0
A180634C  D006     		beq #12 ; 0xA180635C


#11		
#12			(* THEN *)
#13		
#14				(* general_alarm := true; *)
#15				MOVE		true,general_alarm	{LNXT:7|14|-1}
(*) BOOL
A1806350  2001     		mov r0, #1 ; 1
A1806352  F8DF 7120		ldr r7, [pc, #+288] ; 0x100004AF
A1806356  7038     		strb r0, [r7]

#16				JMP		$label1	{LNXT:6|7|9}
(-) BOOL
A1806358  E004     		b #8 ; 0xA1806364


#17		$label0:
#18		
#19			(* ELSE *)
#20		
#21				(* general_alarm := false; *)
#22				MOVE		false,general_alarm	{LNXT:9|14|-1}
(*) BOOL
A180635C  2000     		mov r0, #0 ; 0
A180635E  F8DF 7114		ldr r7, [pc, #+276] ; 0x100004AF
A1806362  7038     		strb r0, [r7]

#23		
#24		$label1:
#25			(* END_IF *)
#26		
#27			(* Alarms.0 := di_sensor_Min; *)
#28			MOVE		di_sensor_Min,Alarms.0	{LNXT:14|15|-1}
(*) BOOL
A1806364  F8DF 70FC		ldr r7, [pc, #+252] ; 0xA1A0008A
A1806368  7838     		ldrb r0, [r7]
A180636A  F8DF 70E0		ldr r7, [pc, #+224] ; 0xA0003F0E
A180636E  F8B7 8000		ldrh r8, [r7]
A1806372  F360 0800		bfi r8, r0, #0, #1
A1806376  F8A7 8000		strh r8, [r7]

#29		
#30			(* Alarms.1 := di_sensor_Max; *)
#31			MOVE		di_sensor_Max,Alarms.1	{LNXT:15|16|-1}
(*) BOOL
A180637A  F8DF 70F0		ldr r7, [pc, #+240] ; 0xA1A000DF
A180637E  7838     		ldrb r0, [r7]
A1806380  F8DF 70C8		ldr r7, [pc, #+200] ; 0xA0003F0E
A1806384  F8B7 8000		ldrh r8, [r7]
A1806388  F360 0841		bfi r8, r0, #1, #1
A180638C  F8A7 8000		strh r8, [r7]

#32		
#33			(* Alarms.2 := di_flooding; *)
#34			MOVE		di_flooding,Alarms.2	{LNXT:16|17|-1}
(*) BOOL
A1806390  F8DF 70BC		ldr r7, [pc, #+188] ; 0xA1A00011
A1806394  7838     		ldrb r0, [r7]
A1806396  F8DF 70B4		ldr r7, [pc, #+180] ; 0xA0003F0E
A180639A  F8B7 8000		ldrh r8, [r7]
A180639E  F360 0882		bfi r8, r0, #2, #1
A18063A2  F8A7 8000		strh r8, [r7]

#35		
#36			(* Alarms.4 := di_rnpp; *)
#37			MOVE		di_rnpp,Alarms.4	{LNXT:17|18|-1}
(*) BOOL
A18063A6  F8DF 70C0		ldr r7, [pc, #+192] ; 0xA1A000DE
A18063AA  7838     		ldrb r0, [r7]
A18063AC  F8DF 709C		ldr r7, [pc, #+156] ; 0xA0003F0E
A18063B0  F8B7 8000		ldrh r8, [r7]
A18063B4  F360 1804		bfi r8, r0, #4, #1
A18063B8  F8A7 8000		strh r8, [r7]

#38		
#39			(* Alarms.8 := ALM_A; *)
#40			MOVE		ALM_A,Alarms.8	{LNXT:18|19|-1}
(*) BOOL
A18063BC  F8DF 7098		ldr r7, [pc, #+152] ; 0xA1A0002B
A18063C0  7838     		ldrb r0, [r7]
A18063C2  F8DF 7088		ldr r7, [pc, #+136] ; 0xA0003F0E
A18063C6  F8B7 8000		ldrh r8, [r7]
A18063CA  F360 2808		bfi r8, r0, #8, #1
A18063CE  F8A7 8000		strh r8, [r7]

#41		
#42			(* Alarms.9 := ALM_B; *)
#43			MOVE		ALM_B,Alarms.9	{LNXT:19|20|-1}
(*) BOOL
A18063D2  F8DF 7088		ldr r7, [pc, #+136] ; 0xA1A0002C
A18063D6  7838     		ldrb r0, [r7]
A18063D8  F8DF 7070		ldr r7, [pc, #+112] ; 0xA0003F0E
A18063DC  F8B7 8000		ldrh r8, [r7]
A18063E0  F360 2849		bfi r8, r0, #9, #1
A18063E4  F8A7 8000		strh r8, [r7]

#44		
#45			(* Alarms.10 := ALM_C; *)
#46			MOVE		ALM_C,Alarms.10	{LNXT:20|21|-1}
(*) BOOL
A18063E8  F8DF 7074		ldr r7, [pc, #+116] ; 0xA1A0002E
A18063EC  7838     		ldrb r0, [r7]
A18063EE  F8DF 705C		ldr r7, [pc, #+92] ; 0xA0003F0E
A18063F2  F8B7 8000		ldrh r8, [r7]
A18063F6  F360 288A		bfi r8, r0, #10, #1
A18063FA  F8A7 8000		strh r8, [r7]

#47		
#48		
#49			(* IF Tank_Level < -32000 *)
#50			LD		Tank_Level	{LNXT:21|-1|-1}
(*) UNDEF
A18063FE  F8DF 7054		ldr r7, [pc, #+84] ; 0xA1A00012
A1806402  F9B7 0000		ldrsh r0, [r7]

#51			LT		-32000	{LNXT:21|-1|-1}
(*) INT
A1806406  F8DF 7068		ldr r7, [pc, #+104] ; 0xFFFF8300
A180640A  463F     		mov r7, r7
A180640C  42B8     		cmp r0, r7
A180640E  BFA8 2000		gemov r0, #0
A1806412  BFB8 2001		ltmov r0, #1

#52			JMPCN	$label2	{LNXT:21|22|24}
(-) BOOL
A1806416  2800     		cmp r0, #0
A1806418  D00B     		beq #22 ; 0xA1806432


#53		
#54			(* THEN *)
#55		
#56				(* Alarms.11 := True; *)
#57				MOVE		True,Alarms.11	{LNXT:22|3|-1}
(*) BOOL
A180641C  2001     		mov r0, #1 ; 1
A180641E  F8DF 702C		ldr r7, [pc, #+44] ; 0xA0003F0E
A1806422  F8B7 8000		ldrh r8, [r7]
A1806426  F360 28CB		bfi r8, r0, #11, #1
A180642A  F8A7 8000		strh r8, [r7]

#58				JMP		$label3	{LNXT:21|22|24}
(-) WORD
A180642E  E009     		b #18 ; 0xA1806444


#59		$label2:
#60		
#61			(* ELSE *)
#62		
#63				(* Alarms.11 := false; *)
#64				MOVE		false,Alarms.11	{LNXT:24|3|-1}
(*) WORD
A1806432  2000     		mov r0, #0 ; 0
A1806434  F8DF 7014		ldr r7, [pc, #+20] ; 0xA0003F0E
A1806438  F8B7 8000		ldrh r8, [r7]
A180643C  F360 28CB		bfi r8, r0, #11, #1
A1806440  F8A7 8000		strh r8, [r7]

A1806444  E018     		b #48

A1806448  FFFFFFFF		; 0xA0003F02
A180644C  FFFFFFFF		; 0xA0003F0E
A1806450  A1A00011		; 0xA1A00011
A1806454  A1A00012		; 0xA1A00012
A1806458  A1A0002B		; 0xA1A0002B
A180645C  A1A0002C		; 0xA1A0002C
A1806460  A1A0002E		; 0xA1A0002E
A1806464  A1A0008A		; 0xA1A0008A
A1806468  A1A000DE		; 0xA1A000DE
A180646C  A1A000DF		; 0xA1A000DF
A1806470  FFFF8300		; 0xFFFF8300
A1806474  FFFFFFFF		; 0x100004AF

END_PROGRAM
**************************************************
	List program: MotoHour
**************************************************

PROGRAM MotoHour

        VAR
MotoHour_Mode_1 : REAL := 0.0;	{ DE:"Час, напрацювання мс насос А" }
MotoHour_Mode_2 : REAL := 0.0;	{ DE:"Час, напрацювання мс насос В" }
MotoHour_Mode_3 : REAL := 0.0;	{ DE:"Час, напрацювання мс насос С" }
	END_VAR

END_PROGRAM

#0		{SRC:MotoHour}
#1		(*$WAITSWITCH$*)
#2		
#3		
#4			(* IF Motor_A *)
#5			LD		Motor_A	{LNXT:3|-1|-1}
(*) UNDEF
A1806478  F8DF 722C		ldr r7, [pc, #+556] ; 0x100004AC
A180647C  7838     		ldrb r0, [r7]

#6			JMPCN	$label0	{LNXT:3|4|6}
(-) BOOL
A180647E  2800     		cmp r0, #0
A1806480  D020     		beq #64 ; 0xA18064C4


#7		
#8			(* THEN *)
#9		
#10				(* MotoHour_Mode_1 := MotoHour_Mode_1 + 1; *)
#11				LD		MotoHour_Mode_1	{LNXT:4|6|-1}
(*) UNDEF
A1806484  F8DF 720C		ldr r7, [pc, #+524] ; 0xA1A000E0
A1806488  6838     		ldr r0, [r7]

#12				ADD		1	{LNXT:4|6|-1}
(*) REAL
A180648A  2701     		mov r7, #1 ; 1
A180648C  B082     		sub sp, sp, #8
A180648E  F8CD 0000		str r0, [sp]
A1806492  4638     		mov r0, r7
A1806494  F8DF 4204		ldr r4, [pc, #+516] ; 0x111F3
A1806498  F044 0401		orr r4, r4, #1
A180649C  47A0     		blx r4
A180649E  4607     		mov r7, r0
A18064A0  F8DD 0000		ldr r0, [sp]
A18064A4  B002     		add sp, sp, #8
A18064A6  B082     		sub sp, sp, #8
A18064A8  F8CD 1000		str r1, [sp]
A18064AC  4639     		mov r1, r7
A18064AE  F8DF 41F0		ldr r4, [pc, #+496] ; 0x11233
A18064B2  F044 0401		orr r4, r4, #1
A18064B6  47A0     		blx r4
A18064B8  F8DD 1000		ldr r1, [sp]
A18064BC  B002     		add sp, sp, #8

#13				ST		MotoHour_Mode_1	{LNXT:4|6|-1}
(*) REAL
A18064BE  F8DF 71D4		ldr r7, [pc, #+468] ; 0xA1A000E0
A18064C2  6038     		str r0, [r7]

#14		
#15		$label0:
#16			(* END_IF *)
#17		
#18		
#19			(* IF Motor_A *)
#20			LD		Motor_A	{LNXT:6|-1|-1}
(*) UNDEF
A18064C4  F8DF 71E0		ldr r7, [pc, #+480] ; 0x100004AC
A18064C8  7838     		ldrb r0, [r7]

#21			NOT	{LNXT:6|-1|-1}
(*) BOOL
A18064CA  2800     		cmp r0, #0
A18064CC  BF08 2001		eqmov r0, #1
A18064D0  BF18 2000		nemov r0, #0

#22			JMPCN	$label1	{LNXT:6|7|11}
(-) BOOL
A18064D4  2800     		cmp r0, #0
A18064D6  D027     		beq #78 ; 0xA1806528


#23		
#24			(* THEN *)
#25		
#26				(* MotoHour_Mode_1 := MotoHour_Mode_1; *)
#27				MOVE		MotoHour_Mode_1,MotoHour_Mode_1	{LNXT:7|8|-1}
(*) BOOL
A18064DA  F8DF 71B8		ldr r7, [pc, #+440] ; 0xA1A000E0
A18064DE  6838     		ldr r0, [r7]
A18064E0  F8DF 71B0		ldr r7, [pc, #+432] ; 0xA1A000E0
A18064E4  6038     		str r0, [r7]

#28		
#29				(* MotoHour_1 := MotoHour_Mode_1 / 3600; *)
#30				LD		MotoHour_Mode_1	{LNXT:8|11|-1}
(*) UNDEF
A18064E6  F8DF 71AC		ldr r7, [pc, #+428] ; 0xA1A000E0
A18064EA  6838     		ldr r0, [r7]

#31				DIV		3600	{LNXT:8|11|-1}
(*) REAL
A18064EC  F44F 6761		mov r7, #3600 ; 3600
A18064F0  B082     		sub sp, sp, #8
A18064F2  F8CD 0000		str r0, [sp]
A18064F6  4638     		mov r0, r7
A18064F8  F8DF 41A0		ldr r4, [pc, #+416] ; 0x111F3
A18064FC  F044 0401		orr r4, r4, #1
A1806500  47A0     		blx r4
A1806502  4607     		mov r7, r0
A1806504  F8DD 0000		ldr r0, [sp]
A1806508  B002     		add sp, sp, #8
A180650A  B082     		sub sp, sp, #8
A180650C  F8CD 1000		str r1, [sp]
A1806510  4639     		mov r1, r7
A1806512  F8DF 4190		ldr r4, [pc, #+400] ; 0x11263
A1806516  F044 0401		orr r4, r4, #1
A180651A  47A0     		blx r4
A180651C  F8DD 1000		ldr r1, [sp]
A1806520  B002     		add sp, sp, #8

#32				ST		MotoHour_1	{LNXT:8|11|-1}
(*) REAL
A1806522  F8DF 7168		ldr r7, [pc, #+360] ; 0xA0003F14
A1806526  6038     		str r0, [r7]

#33		
#34		$label1:
#35			(* END_IF *)
#36		
#37		
#38			(* IF Motor_B *)
#39			LD		Motor_B	{LNXT:11|-1|-1}
(*) UNDEF
A1806528  F8DF 7180		ldr r7, [pc, #+384] ; 0x100004AD
A180652C  7838     		ldrb r0, [r7]

#40			JMPCN	$label2	{LNXT:11|12|14}
(-) BOOL
A180652E  2800     		cmp r0, #0
A1806530  D020     		beq #64 ; 0xA1806574


#41		
#42			(* THEN *)
#43		
#44				(* MotoHour_Mode_2 := MotoHour_Mode_2 + 1; *)
#45				LD		MotoHour_Mode_2	{LNXT:12|14|-1}
(*) UNDEF
A1806534  F8DF 7160		ldr r7, [pc, #+352] ; 0xA1A000E4
A1806538  6838     		ldr r0, [r7]

#46				ADD		1	{LNXT:12|14|-1}
(*) REAL
A180653A  2701     		mov r7, #1 ; 1
A180653C  B082     		sub sp, sp, #8
A180653E  F8CD 0000		str r0, [sp]
A1806542  4638     		mov r0, r7
A1806544  F8DF 4154		ldr r4, [pc, #+340] ; 0x111F3
A1806548  F044 0401		orr r4, r4, #1
A180654C  47A0     		blx r4
A180654E  4607     		mov r7, r0
A1806550  F8DD 0000		ldr r0, [sp]
A1806554  B002     		add sp, sp, #8
A1806556  B082     		sub sp, sp, #8
A1806558  F8CD 1000		str r1, [sp]
A180655C  4639     		mov r1, r7
A180655E  F8DF 4140		ldr r4, [pc, #+320] ; 0x11233
A1806562  F044 0401		orr r4, r4, #1
A1806566  47A0     		blx r4
A1806568  F8DD 1000		ldr r1, [sp]
A180656C  B002     		add sp, sp, #8

#47				ST		MotoHour_Mode_2	{LNXT:12|14|-1}
(*) REAL
A180656E  F8DF 7128		ldr r7, [pc, #+296] ; 0xA1A000E4
A1806572  6038     		str r0, [r7]

#48		
#49		$label2:
#50			(* END_IF *)
#51		
#52		
#53			(* IF Motor_B *)
#54			LD		Motor_B	{LNXT:14|-1|-1}
(*) UNDEF
A1806574  F8DF 7134		ldr r7, [pc, #+308] ; 0x100004AD
A1806578  7838     		ldrb r0, [r7]

#55			NOT	{LNXT:14|-1|-1}
(*) BOOL
A180657A  2800     		cmp r0, #0
A180657C  BF08 2001		eqmov r0, #1
A1806580  BF18 2000		nemov r0, #0

#56			JMPCN	$label3	{LNXT:14|15|19}
(-) BOOL
A1806584  2800     		cmp r0, #0
A1806586  D027     		beq #78 ; 0xA18065D8


#57		
#58			(* THEN *)
#59		
#60				(* MotoHour_Mode_2 := MotoHour_Mode_2; *)
#61				MOVE		MotoHour_Mode_2,MotoHour_Mode_2	{LNXT:15|16|-1}
(*) BOOL
A180658A  F8DF 710C		ldr r7, [pc, #+268] ; 0xA1A000E4
A180658E  6838     		ldr r0, [r7]
A1806590  F8DF 7104		ldr r7, [pc, #+260] ; 0xA1A000E4
A1806594  6038     		str r0, [r7]

#62		
#63				(* MotoHour_2 := MotoHour_Mode_2 / 3600; *)
#64				LD		MotoHour_Mode_2	{LNXT:16|19|-1}
(*) UNDEF
A1806596  F8DF 7100		ldr r7, [pc, #+256] ; 0xA1A000E4
A180659A  6838     		ldr r0, [r7]

#65				DIV		3600	{LNXT:16|19|-1}
(*) REAL
A180659C  F44F 6761		mov r7, #3600 ; 3600
A18065A0  B082     		sub sp, sp, #8
A18065A2  F8CD 0000		str r0, [sp]
A18065A6  4638     		mov r0, r7
A18065A8  F8DF 40F0		ldr r4, [pc, #+240] ; 0x111F3
A18065AC  F044 0401		orr r4, r4, #1
A18065B0  47A0     		blx r4
A18065B2  4607     		mov r7, r0
A18065B4  F8DD 0000		ldr r0, [sp]
A18065B8  B002     		add sp, sp, #8
A18065BA  B082     		sub sp, sp, #8
A18065BC  F8CD 1000		str r1, [sp]
A18065C0  4639     		mov r1, r7
A18065C2  F8DF 40E0		ldr r4, [pc, #+224] ; 0x11263
A18065C6  F044 0401		orr r4, r4, #1
A18065CA  47A0     		blx r4
A18065CC  F8DD 1000		ldr r1, [sp]
A18065D0  B002     		add sp, sp, #8

#66				ST		MotoHour_2	{LNXT:16|19|-1}
(*) REAL
A18065D2  F8DF 70BC		ldr r7, [pc, #+188] ; 0xA0003F18
A18065D6  6038     		str r0, [r7]

#67		
#68		$label3:
#69			(* END_IF *)
#70		
#71		
#72			(* IF Motor_C *)
#73			LD		Motor_C	{LNXT:19|-1|-1}
(*) UNDEF
A18065D8  F8DF 70D4		ldr r7, [pc, #+212] ; 0x100004AE
A18065DC  7838     		ldrb r0, [r7]

#74			JMPCN	$label4	{LNXT:19|20|22}
(-) BOOL
A18065DE  2800     		cmp r0, #0
A18065E0  D020     		beq #64 ; 0xA1806624


#75		
#76			(* THEN *)
#77		
#78				(* MotoHour_Mode_2 := MotoHour_Mode_2 + 1; *)
#79				LD		MotoHour_Mode_2	{LNXT:20|22|-1}
(*) UNDEF
A18065E4  F8DF 70B0		ldr r7, [pc, #+176] ; 0xA1A000E4
A18065E8  6838     		ldr r0, [r7]

#80				ADD		1	{LNXT:20|22|-1}
(*) REAL
A18065EA  2701     		mov r7, #1 ; 1
A18065EC  B082     		sub sp, sp, #8
A18065EE  F8CD 0000		str r0, [sp]
A18065F2  4638     		mov r0, r7
A18065F4  F8DF 40A4		ldr r4, [pc, #+164] ; 0x111F3
A18065F8  F044 0401		orr r4, r4, #1
A18065FC  47A0     		blx r4
A18065FE  4607     		mov r7, r0
A1806600  F8DD 0000		ldr r0, [sp]
A1806604  B002     		add sp, sp, #8
A1806606  B082     		sub sp, sp, #8
A1806608  F8CD 1000		str r1, [sp]
A180660C  4639     		mov r1, r7
A180660E  F8DF 4090		ldr r4, [pc, #+144] ; 0x11233
A1806612  F044 0401		orr r4, r4, #1
A1806616  47A0     		blx r4
A1806618  F8DD 1000		ldr r1, [sp]
A180661C  B002     		add sp, sp, #8

#81				ST		MotoHour_Mode_2	{LNXT:20|22|-1}
(*) REAL
A180661E  F8DF 7078		ldr r7, [pc, #+120] ; 0xA1A000E4
A1806622  6038     		str r0, [r7]

#82		
#83		$label4:
#84			(* END_IF *)
#85		
#86		
#87			(* IF Motor_C *)
#88			LD		Motor_C	{LNXT:22|-1|-1}
(*) UNDEF
A1806624  F8DF 7088		ldr r7, [pc, #+136] ; 0x100004AE
A1806628  7838     		ldrb r0, [r7]

#89			NOT	{LNXT:22|-1|-1}
(*) BOOL
A180662A  2800     		cmp r0, #0
A180662C  BF08 2001		eqmov r0, #1
A1806630  BF18 2000		nemov r0, #0

#90			JMPCN	$label5	{LNXT:22|23|3}
(-) BOOL
A1806634  2800     		cmp r0, #0
A1806636  D027     		beq #78 ; 0xA1806688


#91		
#92			(* THEN *)
#93		
#94				(* MotoHour_Mode_2 := MotoHour_Mode_2; *)
#95				MOVE		MotoHour_Mode_2,MotoHour_Mode_2	{LNXT:23|24|-1}
(*) BOOL
A180663A  F8DF 705C		ldr r7, [pc, #+92] ; 0xA1A000E4
A180663E  6838     		ldr r0, [r7]
A1806640  F8DF 7054		ldr r7, [pc, #+84] ; 0xA1A000E4
A1806644  6038     		str r0, [r7]

#96		
#97				(* MotoHour_2 := MotoHour_Mode_2 / 3600; *)
#98				LD		MotoHour_Mode_2	{LNXT:24|3|-1}
(*) UNDEF
A1806646  F8DF 7050		ldr r7, [pc, #+80] ; 0xA1A000E4
A180664A  6838     		ldr r0, [r7]

#99				DIV		3600	{LNXT:24|3|-1}
(*) REAL
A180664C  F44F 6761		mov r7, #3600 ; 3600
A1806650  B082     		sub sp, sp, #8
A1806652  F8CD 0000		str r0, [sp]
A1806656  4638     		mov r0, r7
A1806658  F8DF 4040		ldr r4, [pc, #+64] ; 0x111F3
A180665C  F044 0401		orr r4, r4, #1
A1806660  47A0     		blx r4
A1806662  4607     		mov r7, r0
A1806664  F8DD 0000		ldr r0, [sp]
A1806668  B002     		add sp, sp, #8
A180666A  B082     		sub sp, sp, #8
A180666C  F8CD 1000		str r1, [sp]
A1806670  4639     		mov r1, r7
A1806672  F8DF 4030		ldr r4, [pc, #+48] ; 0x11263
A1806676  F044 0401		orr r4, r4, #1
A180667A  47A0     		blx r4
A180667C  F8DD 1000		ldr r1, [sp]
A1806680  B002     		add sp, sp, #8

#100				ST		MotoHour_2	{LNXT:24|3|-1}
(*) REAL
A1806682  F8DF 700C		ldr r7, [pc, #+12] ; 0xA0003F18
A1806686  6038     		str r0, [r7]

A1806688  E014     		b #40

A180668C  FFFFFFFF		; 0xA0003F14
A1806690  FFFFFFFF		; 0xA0003F18
A1806694  A1A000E0		; 0xA1A000E0
A1806698  A1A000E4		; 0xA1A000E4
A180669C  FFFFFFFF		; 0x000111F3
A18066A0  FFFFFFFF		; 0x00011233
A18066A4  FFFFFFFF		; 0x00011263
A18066A8  FFFFFFFF		; 0x100004AC
A18066AC  FFFFFFFF		; 0x100004AD
A18066B0  FFFFFFFF		; 0x100004AE

END_PROGRAM
**************************************************
	List program: SaveData
**************************************************

PROGRAM SaveData

        VAR
power_err : R_TRIG;
ton_start_up : TON;
res_lvl_min : BOOL;
res_lvl_1 : BOOL;
res_lvl_2 : BOOL;
res_lvl_3 : BOOL;
res_rotation : BOOL;
	END_VAR

END_PROGRAM

#0		{SRC:SaveData}
#1		(*$WAITSWITCH$*)
#2		
#3			(* ton_start_up *)
#4			MOVE		true,ton_start_up.IN	{LNXT:1|-1|-1}
(*) UDINT
A18066B4  2001     		mov r0, #1 ; 1
A18066B6  F8DF 71DC		ldr r7, [pc, #+476] ; 0xA1A000EC
A18066BA  7038     		strb r0, [r7]

#5			MOVE		5000,ton_start_up.PT	{LNXT:1|-1|-1}
(*) BOOL
A18066BC  F8DF 7200		ldr r7, [pc, #+512] ; 0x1388
A18066C0  4638     		mov r0, r7
A18066C2  F8DF 71D4		ldr r7, [pc, #+468] ; 0xA1A000F0
A18066C6  6038     		str r0, [r7]

#6			CAL		ton_start_up	{LNXT:1|2|-1}
(*) UDINT
A18066C8  E92D 0021		stmdb sp!, { r0, r5 }
A18066CC  F8DF 51C0		ldr r5, [pc, #+448] ; 0xA1A000E8
A18066D0  F8DF 41B4		ldr r4, [pc, #+436] ; 0xA1804550
A18066D4  F044 0401		orr r4, r4, #1
A18066D8  47A0     		blx r4
A18066DA  E8BD 0021		ldmia sp!, { r0, r5 }

#7		
#8			(* power_err *)
#9			LD		ton_start_up.Q	{LNXT:2|-1|-1}
(*) UNDEF
A18066DE  F8DF 71BC		ldr r7, [pc, #+444] ; 0xA1A000F4
A18066E2  7838     		ldrb r0, [r7]

#10			AND		di_rnpp	{LNXT:2|-1|-1}
(*) BOOL
A18066E4  F8DF 71A4		ldr r7, [pc, #+420] ; 0xA1A000DE
A18066E8  783F     		ldrb r7, [r7]
A18066EA  4038     		and r0, r0, r7

#11			ST		power_err.clk	{LNXT:2|-1|-1}
(*) BOOL
A18066EC  F8DF 71B4		ldr r7, [pc, #+436] ; 0xA1A000FD
A18066F0  7038     		strb r0, [r7]

#12			CAL		power_err	{LNXT:2|3|-1}
(*) BOOL
A18066F2  E92D 0021		stmdb sp!, { r0, r5 }
A18066F6  F8DF 51A8		ldr r5, [pc, #+424] ; 0xA1A000FC
A18066FA  F8DF 4188		ldr r4, [pc, #+392] ; 0xA1804518
A18066FE  F044 0401		orr r4, r4, #1
A1806702  47A0     		blx r4
A1806704  E8BD 0021		ldmia sp!, { r0, r5 }

#13		
#14		
#15			(* IF power_err.q *)
#16			LD		power_err.q	{LNXT:3|-1|-1}
(*) UNDEF
A1806708  F8DF 719C		ldr r7, [pc, #+412] ; 0xA1A000FE
A180670C  7838     		ldrb r0, [r7]

#17			JMPCN	$label0	{LNXT:3|4|1}
(-) BOOL
A180670E  2800     		cmp r0, #0
A1806710  F000 809D		beq #314 ; 0xA180684E


#18		
#19			(* THEN *)
#20		
#21		
#22				(* IF ep_level_min <> level_min *)
#23				LD		ep_level_min	{LNXT:4|-1|-1}
(*) UNDEF
A1806714  F8DF 7150		ldr r7, [pc, #+336] ; 0xA00017F6
A1806718  F9B7 0000		ldrsh r0, [r7]

#24				NE		level_min	{LNXT:4|-1|-1}
(*) INT
A180671C  F8DF 7150		ldr r7, [pc, #+336] ; 0xA0003F04
A1806720  F9B7 7000		ldrsh r7, [r7]
A1806724  42B8     		cmp r0, r7
A1806726  BF08 2000		eqmov r0, #0
A180672A  BF18 2001		nemov r0, #1

#25				JMPCN	$label1	{LNXT:4|4|5}
(-) BOOL
A180672E  2800     		cmp r0, #0
A1806730  D010     		beq #32 ; 0xA1806754


#26		
#27				(* THEN *)
#28		
#29					(* res_lvl_min := sysWriteParINT(ADR(ep_level_min), level_min); *)
#30					ADR		ep_level_min	{LNXT:4|5|-1}
(*) BOOL
A1806734  F8DF 0130		ldr r0, [pc, #+304] ; 0xA00017F6

#31					sysWriteParINT		level_min	{LNXT:4|5|-1}
(*) @INT
A1806738  4607     		mov r7, r0
A180673A  4638     		mov r0, r7
A180673C  F8DF 7130		ldr r7, [pc, #+304] ; 0xA0003F04
A1806740  F9B7 1000		ldrsh r1, [r7]
A1806744  F8DF 417C		ldr r4, [pc, #+380] ; 0x27D3B
A1806748  F044 0401		orr r4, r4, #1
A180674C  47A0     		blx r4

#32					ST		res_lvl_min	{LNXT:4|5|-1}
(*) BOOL
A180674E  F8DF 715C		ldr r7, [pc, #+348] ; 0xA1A00100
A1806752  7038     		strb r0, [r7]

#33		
#34		$label1:
#35				(* END_IF *)
#36		
#37		
#38				(* IF ep_level_1 <> Level_1 *)
#39				LD		ep_level_1	{LNXT:5|-1|-1}
(*) UNDEF
A1806754  F8DF 7104		ldr r7, [pc, #+260] ; 0xA00017F0
A1806758  F9B7 0000		ldrsh r0, [r7]

#40				NE		Level_1	{LNXT:5|-1|-1}
(*) INT
A180675C  F8DF 7114		ldr r7, [pc, #+276] ; 0xA0003F06
A1806760  F9B7 7000		ldrsh r7, [r7]
A1806764  42B8     		cmp r0, r7
A1806766  BF08 2000		eqmov r0, #0
A180676A  BF18 2001		nemov r0, #1

#41				JMPCN	$label2	{LNXT:5|5|6}
(-) BOOL
A180676E  2800     		cmp r0, #0
A1806770  D010     		beq #32 ; 0xA1806794


#42		
#43				(* THEN *)
#44		
#45					(* res_lvl_1 := sysWriteParINT(ADR(ep_level_1), Level_1); *)
#46					ADR		ep_level_1	{LNXT:5|6|-1}
(*) BOOL
A1806774  F8DF 00E4		ldr r0, [pc, #+228] ; 0xA00017F0

#47					sysWriteParINT		Level_1	{LNXT:5|6|-1}
(*) @INT
A1806778  4607     		mov r7, r0
A180677A  4638     		mov r0, r7
A180677C  F8DF 70F4		ldr r7, [pc, #+244] ; 0xA0003F06
A1806780  F9B7 1000		ldrsh r1, [r7]
A1806784  F8DF 413C		ldr r4, [pc, #+316] ; 0x27D3B
A1806788  F044 0401		orr r4, r4, #1
A180678C  47A0     		blx r4

#48					ST		res_lvl_1	{LNXT:5|6|-1}
(*) BOOL
A180678E  F8DF 7120		ldr r7, [pc, #+288] ; 0xA1A00101
A1806792  7038     		strb r0, [r7]

#49		
#50		$label2:
#51				(* END_IF *)
#52		
#53		
#54				(* IF ep_level_2 <> Level_2 *)
#55				LD		ep_level_2	{LNXT:6|-1|-1}
(*) UNDEF
A1806794  F8DF 70C8		ldr r7, [pc, #+200] ; 0xA00017F2
A1806798  F9B7 0000		ldrsh r0, [r7]

#56				NE		Level_2	{LNXT:6|-1|-1}
(*) INT
A180679C  F8DF 70D8		ldr r7, [pc, #+216] ; 0xA0003F08
A18067A0  F9B7 7000		ldrsh r7, [r7]
A18067A4  42B8     		cmp r0, r7
A18067A6  BF08 2000		eqmov r0, #0
A18067AA  BF18 2001		nemov r0, #1

#57				JMPCN	$label3	{LNXT:6|6|8}
(-) BOOL
A18067AE  2800     		cmp r0, #0
A18067B0  D010     		beq #32 ; 0xA18067D4


#58		
#59				(* THEN *)
#60		
#61					(* res_lvl_2 := sysWriteParINT(ADR(ep_level_2), Level_2); *)
#62					ADR		ep_level_2	{LNXT:6|8|-1}
(*) BOOL
A18067B4  F8DF 00A8		ldr r0, [pc, #+168] ; 0xA00017F2

#63					sysWriteParINT		Level_2	{LNXT:6|8|-1}
(*) @INT
A18067B8  4607     		mov r7, r0
A18067BA  4638     		mov r0, r7
A18067BC  F8DF 70B8		ldr r7, [pc, #+184] ; 0xA0003F08
A18067C0  F9B7 1000		ldrsh r1, [r7]
A18067C4  F8DF 40FC		ldr r4, [pc, #+252] ; 0x27D3B
A18067C8  F044 0401		orr r4, r4, #1
A18067CC  47A0     		blx r4

#64					ST		res_lvl_2	{LNXT:6|8|-1}
(*) BOOL
A18067CE  F8DF 70E4		ldr r7, [pc, #+228] ; 0xA1A00102
A18067D2  7038     		strb r0, [r7]

#65		
#66		$label3:
#67				(* END_IF *)
#68		
#69		
#70				(* IF ep_level_3 <> Level_3 *)
#71				LD		ep_level_3	{LNXT:8|-1|-1}
(*) UNDEF
A18067D4  F8DF 708C		ldr r7, [pc, #+140] ; 0xA00017F4
A18067D8  F9B7 0000		ldrsh r0, [r7]

#72				NE		Level_3	{LNXT:8|-1|-1}
(*) INT
A18067DC  F8DF 709C		ldr r7, [pc, #+156] ; 0xA0003F0A
A18067E0  F9B7 7000		ldrsh r7, [r7]
A18067E4  42B8     		cmp r0, r7
A18067E6  BF08 2000		eqmov r0, #0
A18067EA  BF18 2001		nemov r0, #1

#73				JMPCN	$label4	{LNXT:8|8|9}
(-) BOOL
A18067EE  2800     		cmp r0, #0
A18067F0  D010     		beq #32 ; 0xA1806814


#74		
#75				(* THEN *)
#76		
#77					(* res_lvl_3 := sysWriteParINT(ADR(ep_level_3), Level_3); *)
#78					ADR		ep_level_3	{LNXT:8|9|-1}
(*) BOOL
A18067F4  F8DF 006C		ldr r0, [pc, #+108] ; 0xA00017F4

#79					sysWriteParINT		Level_3	{LNXT:8|9|-1}
(*) @INT
A18067F8  4607     		mov r7, r0
A18067FA  4638     		mov r0, r7
A18067FC  F8DF 707C		ldr r7, [pc, #+124] ; 0xA0003F0A
A1806800  F9B7 1000		ldrsh r1, [r7]
A1806804  F8DF 40BC		ldr r4, [pc, #+188] ; 0x27D3B
A1806808  F044 0401		orr r4, r4, #1
A180680C  47A0     		blx r4

#80					ST		res_lvl_3	{LNXT:8|9|-1}
(*) BOOL
A180680E  F8DF 70A8		ldr r7, [pc, #+168] ; 0xA1A00103
A1806812  7038     		strb r0, [r7]

#81		
#82		$label4:
#83				(* END_IF *)
#84		
#85		
#86				(* IF ep_rotation <> Rotation *)
#87				LD		ep_rotation	{LNXT:9|-1|-1}
(*) UNDEF
A1806814  F8DF 7054		ldr r7, [pc, #+84] ; 0xA00017F8
A1806818  7838     		ldrb r0, [r7]

#88				NE		Rotation	{LNXT:9|-1|-1}
(*) BOOL
A180681A  F8DF 7064		ldr r7, [pc, #+100] ; 0xA0003F10
A180681E  783F     		ldrb r7, [r7]
A1806820  42B8     		cmp r0, r7
A1806822  BF08 2000		eqmov r0, #0
A1806826  BF18 2001		nemov r0, #1

#89				JMPCN	$label5	{LNXT:9|9|1}
(-) BOOL
A180682A  2800     		cmp r0, #0
A180682C  D00F     		beq #30 ; 0xA180684E


#90		
#91				(* THEN *)
#92		
#93					(* res_rotation := sysWriteParBOOL(ADR(ep_rotation), Rotation); *)
#94					ADR		ep_rotation	{LNXT:9|1|-1}
(*) BOOL
A1806830  F8DF 0038		ldr r0, [pc, #+56] ; 0xA00017F8

#95					sysWriteParBOOL		Rotation	{LNXT:9|1|-1}
(*) @BOOL
A1806834  4607     		mov r7, r0
A1806836  4638     		mov r0, r7
A1806838  F8DF 7044		ldr r7, [pc, #+68] ; 0xA0003F10
A180683C  7839     		ldrb r1, [r7]
A180683E  F8DF 4088		ldr r4, [pc, #+136] ; 0x27DD7
A1806842  F044 0401		orr r4, r4, #1
A1806846  47A0     		blx r4

#96					ST		res_rotation	{LNXT:9|1|-1}
(*) BOOL
A1806848  F8DF 7070		ldr r7, [pc, #+112] ; 0xA1A00104
A180684C  7038     		strb r0, [r7]

A180684E  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
A1806852  F8DD E000		ldr lr, [sp]
A1806856  B002     		add sp, sp, #8

A1806858  4770     		bx lr

A180685C  FFFFFFFF		; 0xA00017F0
A1806860  FFFFFFFF		; 0xA00017F2
A1806864  FFFFFFFF		; 0xA00017F4
A1806868  FFFFFFFF		; 0xA00017F6
A180686C  FFFFFFFF		; 0xA00017F8
A1806870  FFFFFFFF		; 0xA0003F04
A1806874  FFFFFFFF		; 0xA0003F06
A1806878  FFFFFFFF		; 0xA0003F08
A180687C  FFFFFFFF		; 0xA0003F0A
A1806880  FFFFFFFF		; 0xA0003F10
A1806884  A1804518		; 0xA1804518
A1806888  A1804550		; 0xA1804550
A180688C  A1A000DE		; 0xA1A000DE
A1806890  A1A000E8		; 0xA1A000E8
A1806894  A1A000EC		; 0xA1A000EC
A1806898  A1A000F0		; 0xA1A000F0
A180689C  A1A000F4		; 0xA1A000F4
A18068A0  A1A000FC		; 0xA1A000FC
A18068A4  A1A000FD		; 0xA1A000FD
A18068A8  A1A000FE		; 0xA1A000FE
A18068AC  A1A00100		; 0xA1A00100
A18068B0  A1A00101		; 0xA1A00101
A18068B4  A1A00102		; 0xA1A00102
A18068B8  A1A00103		; 0xA1A00103
A18068BC  A1A00104		; 0xA1A00104
A18068C0  00001388		; 0x00001388
A18068C4  FFFFFFFF		; 0x00027D3B
A18068C8  FFFFFFFF		; 0x00027DD7

END_PROGRAM


**************************************************
	Target variable image generation
**************************************************


*** INPUT:
A18068CC  B082     		sub sp, sp, #8
A18068CE  F8CD E000		str lr, [sp]
A18068D2  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

A18068D6  F8DF 70E4		ldr r7, [pc, #+228] ; 0x10000442
A18068DA  8838     		ldrh r0, [r7]
A18068DC  F8DF 708C		ldr r7, [pc, #+140] ; 0xA1A00012
A18068E0  8038     		strh r0, [r7]

A18068E2  F8DF 70C8		ldr r7, [pc, #+200] ; 0x10000426
A18068E6  7838     		ldrb r0, [r7]
A18068E8  F8DF 707C		ldr r7, [pc, #+124] ; 0xA1A00011
A18068EC  7038     		strb r0, [r7]

A18068EE  F8DF 70A4		ldr r7, [pc, #+164] ; 0x10000420
A18068F2  7838     		ldrb r0, [r7]
A18068F4  F8DF 7078		ldr r7, [pc, #+120] ; 0xA1A0002A
A18068F8  7038     		strb r0, [r7]

A18068FA  F8DF 70A4		ldr r7, [pc, #+164] ; 0x10000423
A18068FE  7838     		ldrb r0, [r7]
A1806900  F8DF 7070		ldr r7, [pc, #+112] ; 0xA1A0002B
A1806904  7038     		strb r0, [r7]

A1806906  F8DF 709C		ldr r7, [pc, #+156] ; 0x10000424
A180690A  7838     		ldrb r0, [r7]
A180690C  F8DF 7068		ldr r7, [pc, #+104] ; 0xA1A0002C
A1806910  7038     		strb r0, [r7]

A1806912  F8DF 7084		ldr r7, [pc, #+132] ; 0x10000421
A1806916  7838     		ldrb r0, [r7]
A1806918  F8DF 7060		ldr r7, [pc, #+96] ; 0xA1A0002D
A180691C  7038     		strb r0, [r7]

A180691E  F8DF 7088		ldr r7, [pc, #+136] ; 0x10000425
A1806922  7838     		ldrb r0, [r7]
A1806924  F8DF 7058		ldr r7, [pc, #+88] ; 0xA1A0002E
A1806928  7038     		strb r0, [r7]

A180692A  F8DF 7070		ldr r7, [pc, #+112] ; 0x10000422
A180692E  7838     		ldrb r0, [r7]
A1806930  F8DF 7050		ldr r7, [pc, #+80] ; 0xA1A0002F
A1806934  7038     		strb r0, [r7]

A1806936  F8DF 707C		ldr r7, [pc, #+124] ; 0x10000428
A180693A  7838     		ldrb r0, [r7]
A180693C  F8DF 7048		ldr r7, [pc, #+72] ; 0xA1A0008A
A1806940  7038     		strb r0, [r7]

A1806942  F8DF 706C		ldr r7, [pc, #+108] ; 0x10000427
A1806946  7838     		ldrb r0, [r7]
A1806948  F8DF 7044		ldr r7, [pc, #+68] ; 0xA1A000DF
A180694C  7038     		strb r0, [r7]

A180694E  F8DF 7068		ldr r7, [pc, #+104] ; 0x1000042A
A1806952  7838     		ldrb r0, [r7]
A1806954  F8DF 7034		ldr r7, [pc, #+52] ; 0xA1A000DE
A1806958  7038     		strb r0, [r7]

A180695A  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
A180695E  F8DD E000		ldr lr, [sp]
A1806962  B002     		add sp, sp, #8

A1806964  4770     		bx lr

A1806968  A1A00011		; 0xA1A00011
A180696C  A1A00012		; 0xA1A00012
A1806970  A1A0002A		; 0xA1A0002A
A1806974  A1A0002B		; 0xA1A0002B
A1806978  A1A0002C		; 0xA1A0002C
A180697C  A1A0002D		; 0xA1A0002D
A1806980  A1A0002E		; 0xA1A0002E
A1806984  A1A0002F		; 0xA1A0002F
A1806988  A1A0008A		; 0xA1A0008A
A180698C  A1A000DE		; 0xA1A000DE
A1806990  A1A000DF		; 0xA1A000DF
A1806994  FFFFFFFF		; 0x10000420
A1806998  FFFFFFFF		; 0x10000421
A180699C  FFFFFFFF		; 0x10000422
A18069A0  FFFFFFFF		; 0x10000423
A18069A4  FFFFFFFF		; 0x10000424
A18069A8  FFFFFFFF		; 0x10000425
A18069AC  FFFFFFFF		; 0x10000426
A18069B0  FFFFFFFF		; 0x10000427
A18069B4  FFFFFFFF		; 0x10000428
A18069B8  FFFFFFFF		; 0x1000042A
A18069BC  FFFFFFFF		; 0x10000442


*** OUTPUT:
A18069C0  B082     		sub sp, sp, #8
A18069C2  F8CD E000		str lr, [sp]
A18069C6  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

A18069CA  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
A18069CE  F8DD E000		ldr lr, [sp]
A18069D2  B002     		add sp, sp, #8

A18069D4  4770     		bx lr



**************************************************
	Task Timed init code
**************************************************

A18069D6  B082     		sub sp, sp, #8
A18069D8  F8CD E000		str lr, [sp]
A18069DC  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

Var init: V::LVL.TM_WAIT_START = 2000
A18069E0  F8DF 0038		ldr r0, [pc, #+56] ; 0x7D0
A18069E4  F8DF 7024		ldr r7, [pc, #+36] ; 0xA1A00028
A18069E8  8038     		strh r0, [r7]

Var init: V::LVL.ROTATIONNUMBER = 1
A18069EA  F8DF 002C		ldr r0, [pc, #+44] ; 0x1
A18069EE  F8DF 7020		ldr r7, [pc, #+32] ; 0xA1A0005A
A18069F2  8038     		strh r0, [r7]

Var init: V::LVL.CURRENTPUMP = 1
A18069F4  F8DF 0020		ldr r0, [pc, #+32] ; 0x1
A18069F8  F8DF 7018		ldr r7, [pc, #+24] ; 0xA1A0005C
A18069FC  8038     		strh r0, [r7]

A18069FE  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
A1806A02  F8DD E000		ldr lr, [sp]
A1806A06  B002     		add sp, sp, #8

A1806A08  4770     		bx lr

A1806A0C  A1A00028		; 0xA1A00028
A1806A10  A1A0005A		; 0xA1A0005A
A1806A14  A1A0005C		; 0xA1A0005C
A1806A18  00000001		; 0x00000001
A1806A1C  000007D0		; 0x000007D0



**************************************************
	Global init code
**************************************************

A1806A30  B082     		sub sp, sp, #8
A1806A32  F8CD E000		str lr, [sp]
A1806A36  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

Var init: V:CONFIGURATION_VARIABLES:ROTATION_STATE = '0'
A1806A3A  F8DF 70AC		ldr r7, [pc, #+172] ; 0xA0003FBA
A1806A3E  2030     		mov r0, #0x30
A1806A40  7038     		strb r0, [r7, #+0]
A1806A42  2000     		mov r0, #0x00
A1806A44  7078     		strb r0, [r7, #+1]
A1806A46  F8DF 80A4		ldr r8, [pc, #+164] ; 0x2
A1806A4A  4447     		add r7, r7, r8
A1806A4C  2000     		mov r0, #0
A1806A4E  7038     		strb r0, [r7]

Var init: V:CONFIGURATION_VARIABLES:FLOODING_STATE = '0'
A1806A50  F8DF 7090		ldr r7, [pc, #+144] ; 0xA0003FA4
A1806A54  F8DF 0098		ldr r0, [pc, #+152] ; 0x30
A1806A58  7038     		strb r0, [r7]
A1806A5A  1C7F     		add r7, r7, #1
A1806A5C  2000     		mov r0, #0
A1806A5E  7038     		strb r0, [r7]

Var init: V:CONFIGURATION_VARIABLES:STATE_MOTOR_1 = '0'
A1806A60  F8DF 7068		ldr r7, [pc, #+104] ; 0xA0003F20
A1806A64  F8DF 0088		ldr r0, [pc, #+136] ; 0x30
A1806A68  7038     		strb r0, [r7]
A1806A6A  1C7F     		add r7, r7, #1
A1806A6C  2000     		mov r0, #0
A1806A6E  7038     		strb r0, [r7]

Var init: V:CONFIGURATION_VARIABLES:STATE_MOTOR_2 = '0'
A1806A70  F8DF 705C		ldr r7, [pc, #+92] ; 0xA0003F40
A1806A74  F8DF 0078		ldr r0, [pc, #+120] ; 0x30
A1806A78  7038     		strb r0, [r7]
A1806A7A  1C7F     		add r7, r7, #1
A1806A7C  2000     		mov r0, #0
A1806A7E  7038     		strb r0, [r7]

Var init: V:CONFIGURATION_VARIABLES:STATE_MOTOR_3 = '0'
A1806A80  F8DF 7050		ldr r7, [pc, #+80] ; 0xA0003F60
A1806A84  F8DF 0068		ldr r0, [pc, #+104] ; 0x30
A1806A88  7038     		strb r0, [r7]
A1806A8A  1C7F     		add r7, r7, #1
A1806A8C  2000     		mov r0, #0
A1806A8E  7038     		strb r0, [r7]

Var init: V:CONFIGURATION_VARIABLES:AUTO_STATE_1 = '0'
A1806A90  F8DF 7044		ldr r7, [pc, #+68] ; 0xA0003F80
A1806A94  F8DF 0058		ldr r0, [pc, #+88] ; 0x30
A1806A98  7038     		strb r0, [r7]
A1806A9A  1C7F     		add r7, r7, #1
A1806A9C  2000     		mov r0, #0
A1806A9E  7038     		strb r0, [r7]

Var init: V:CONFIGURATION_VARIABLES:AUTO_STATE_2 = '0'
A1806AA0  F8DF 7038		ldr r7, [pc, #+56] ; 0xA0003F8C
A1806AA4  F8DF 0048		ldr r0, [pc, #+72] ; 0x30
A1806AA8  7038     		strb r0, [r7]
A1806AAA  1C7F     		add r7, r7, #1
A1806AAC  2000     		mov r0, #0
A1806AAE  7038     		strb r0, [r7]

Var init: V:CONFIGURATION_VARIABLES:AUTO_STATE_3 = '0'
A1806AB0  F8DF 702C		ldr r7, [pc, #+44] ; 0xA0003F98
A1806AB4  F8DF 0038		ldr r0, [pc, #+56] ; 0x30
A1806AB8  7038     		strb r0, [r7]
A1806ABA  1C7F     		add r7, r7, #1
A1806ABC  2000     		mov r0, #0
A1806ABE  7038     		strb r0, [r7]

A1806AC0  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
A1806AC4  F8DD E000		ldr lr, [sp]
A1806AC8  B002     		add sp, sp, #8

A1806ACA  4770     		bx lr

A1806ACC  FFFFFFFF		; 0xA0003F20
A1806AD0  FFFFFFFF		; 0xA0003F40
A1806AD4  FFFFFFFF		; 0xA0003F60
A1806AD8  FFFFFFFF		; 0xA0003F80
A1806ADC  FFFFFFFF		; 0xA0003F8C
A1806AE0  FFFFFFFF		; 0xA0003F98
A1806AE4  FFFFFFFF		; 0xA0003FA4
A1806AE8  FFFFFFFF		; 0xA0003FBA
A1806AEC  00000002		; 0x00000002
A1806AF0  00000030		; 0x00000030



**************************************************
	Global RETAIN init code
**************************************************

A1806AF4  B082     		sub sp, sp, #8
A1806AF6  F8CD E000		str lr, [sp]
A1806AFA  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

A1806AFE  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
A1806B02  F8DD E000		ldr lr, [sp]
A1806B06  B002     		add sp, sp, #8

A1806B08  4770     		bx lr



********************************************
MEMORY MAP
********************************************

Code area type:          		       main code
Start code area:          		00000000A1800000h
End code area:            		00000000A1806FD8h
Code size:                		00006FD8h

Start local data area:    		00000000A1A00000h
End local data area:      		00000000A1A00105h
Local data size:          		00000105h

Start retentive data area:		0000000000000000h
End retentive data area:  		0000000000000000h
Retentive data size:      		00000000h

Start bit data area:      		0000000000000000h
End bit data area:        		0000000000000000h
Bit data size:            		00000000h



********************************************
CODE ID:                                5737D412
DEBUG MEMO ID:                          A180B976
FULL MEMO ID:                           0000984E
********************************************
