***********************************************************************
*
*	CODE GENERATION LISTING FOR: 04
*	COMPILER VERSION: 6.0.0.52
*
***********************************************************************

**************************************************
	CODE GENERATOR SUBROUTINES
**************************************************

$$MOD:
A1904520  FB90 F3F1		sdiv r3, r0, r1
A1904524  4359     		mul r1, r1, r3
A1904526  EBC1 0000		rsb r0, r1, r0
A190452A  4770     		bx lr

$$MOD_U:
A190452C  FBB0 F3F1		udiv r3, r0, r1
A1904530  4359     		mul r1, r1, r3
A1904532  EBC1 0000		rsb r0, r1, r0
A1904536  4770     		bx lr

**************************************************
	List function block: R_TRIG
**************************************************

FUNCTION_BLOCK R_TRIG

	{ DE:"<HTML>The output Q will remain FALSE as long as the input variable CLK is FALSE.<br>
As soon as CLK returns TRUE, Q will first return TRUE.<br><br>
This means each time the function is called up, Q will return FALSE until CLK has falling edge followed by an rising edge.<br><br>
<img src= r_trig.png>" }

        VAR_INPUT
clk : BOOL;	{ DE:"Input for edge detection" }
	END_VAR

        VAR_OUTPUT
q : BOOL;	{ DE:"Raising edge output" }
	END_VAR

        VAR
m : BOOL := FALSE;
	END_VAR

END_FUNCTION_BLOCK

A1904538  E92D 4040		stmdb sp!, { r6, lr }
A190453C  462E     		mov r6, r5

#0		{SRC:R_TRIG}
#1		
#2			LD		clk
(*) UNDEF
A190453E  F8DF 7028		ldr r7, [pc, #+40] ; 0x1
A1904542  5DF0     		ldrb r0, [r6, +r7]

#3			ANDN	m
(*) BOOL
A1904544  7837     		ldrb r7, [r6]
A1904546  2F00     		cmp r7, #0
A1904548  BF08 2701		eqmov r7, #1
A190454C  BF18 2700		nemov r7, #0
A1904550  4038     		and r0, r0, r7

#4			ST		q
(*) BOOL
A1904552  F8DF 7018		ldr r7, [pc, #+24] ; 0x2
A1904556  55F0     		strb r0, [r6, +r7]

#5		
#6			LD		clk
(*) UNDEF
A1904558  F8DF 700C		ldr r7, [pc, #+12] ; 0x1
A190455C  5DF0     		ldrb r0, [r6, +r7]

#7			ST		m
(-) BOOL
A190455E  7030     		strb r0, [r6]

A1904560  E8BD 4040		ldmia sp!, { r6, lr }

A1904564  4770     		bx lr

A1904568  00000001		; 0x00000001
A190456C  00000002		; 0x00000002


Frame allocation (hex):

	0000 bit  0: VAR m
	0001 bit  0: VAR clk
	0002 bit  0: VAR q

END_FUNCTION_BLOCK
**************************************************
	List function block: TON
**************************************************

FUNCTION_BLOCK TON

	{ DE:"<HTML>The TON block produces a delayed output Q of the input IN. The delay time is expressed in milliseconds on the PT input.</br></br>
<img src= tonscheme.png>
<ul>
<li>if IN is FALSE Q is false</li>
<li>Q becomes TRUE as IN remains TRUE for PT milliseconds</li>
<li>Q remains TRUE until IN remains TRUE</li>
</ul>" }

        VAR_INPUT
IN : BOOL;	{ DE:"Timer input source" }
PT : UDINT;	{ DE:"Preset time value (ms)" }
	END_VAR

        VAR_OUTPUT
Q : BOOL;	{ DE:"Timer output" }
ET : UDINT;	{ DE:"Timer current value (ms)" }
	END_VAR

        VAR_EXTERNAL
	{G:"System_Timers"}
sysTimer AT %MD0.0 : UDINT;	{ DE:"System timer [ms]" }
	END_VAR

        VAR
timStart : UDINT;	{ DE:"Time value at start of counting" }
	END_VAR

END_FUNCTION_BLOCK

A1904570  E92D 4040		stmdb sp!, { r6, lr }
A1904574  462E     		mov r6, r5

#0		{SRC:TON}
#1		
#2			(*	Check if in counting	*)
#3		
#4			LD		IN
(*) UNDEF
A1904576  F8DF 7084		ldr r7, [pc, #+132] ; 0x4
A190457A  5DF0     		ldrb r0, [r6, +r7]

#5			JMPCN	lReset
(-) BOOL
A190457C  2800     		cmp r0, #0
A190457E  D031     		beq #98 ; 0xA19045E4


#6		
#7			(*	Check if Q is TRUE *)
#8			LD		Q
(*) UNDEF
A1904582  F8DF 7080		ldr r7, [pc, #+128] ; 0xC
A1904586  5DF0     		ldrb r0, [r6, +r7]

#9			RETC
#10			
(-) BOOL
A1904588  2800     		cmp r0, #0
A190458A  D134     		bne #104 ; 0xA19045F6


#11			(*	Check if already in counting *)
#12			LD		timStart
(-) UNDEF
A190458E  6830     		ldr r0, [r6]

#13			EQ		0
(*) UDINT
A1904590  2800     		cmp r0, #0
A1904592  BF18 2000		nemov r0, #0
A1904596  BF08 2001		eqmov r0, #1

#14			JMPCN	lUpdate
(-) BOOL
A190459A  2800     		cmp r0, #0
A190459C  D004     		beq #8 ; 0xA19045A8


#15		
#16			(*	Start of counting *)
#17			LD		sysTimer
(*) UNDEF
A19045A0  F8DF 7068		ldr r7, [pc, #+104] ; 0x1000052C
A19045A4  6838     		ldr r0, [r7]

#18			ST		timStart
(-) UDINT
A19045A6  6030     		str r0, [r6]

#19			
#20		lUpdate:
#21		
#22			(*	Update timer and check if time elapsed *)
#23			LD		sysTimer
(*) UNDEF
A19045A8  F8DF 7060		ldr r7, [pc, #+96] ; 0x1000052C
A19045AC  6838     		ldr r0, [r7]

#24			SUB		timStart
(*) UDINT
A19045AE  6837     		ldr r7, [r6]
A19045B0  1BC0     		sub r0, r0, r7

#25			ST		ET
(*) UDINT
A19045B2  F8DF 7054		ldr r7, [pc, #+84] ; 0x10
A19045B6  51F0     		str r0, [r6, +r7]

#26			GE		PT
(*) UDINT
A19045B8  F8DF 7044		ldr r7, [pc, #+68] ; 0x8
A19045BC  59F7     		ldr r7, [r6, +r7]
A19045BE  42B8     		cmp r0, r7
A19045C0  BF38 2000		lomov r0, #0
A19045C4  BF28 2001		hsmov r0, #1

#27			ST		Q
(*) BOOL
A19045C8  F8DF 7038		ldr r7, [pc, #+56] ; 0xC
A19045CC  55F0     		strb r0, [r6, +r7]

#28			RETCN
#29		
(-) BOOL
A19045CE  2800     		cmp r0, #0
A19045D0  D011     		beq #34 ; 0xA19045F6


#30			(*	Limit actual time value *)
#31			LD		PT
(*) UNDEF
A19045D4  F8DF 7028		ldr r7, [pc, #+40] ; 0x8
A19045D8  59F0     		ldr r0, [r6, +r7]

#32			ST		ET
(*) UDINT
A19045DA  F8DF 702C		ldr r7, [pc, #+44] ; 0x10
A19045DE  51F0     		str r0, [r6, +r7]

#33			RET
#34		
(-) UDINT
A19045E0  E009     		b #18 ; 0xA19045F6


#35		lReset:
#36		
#37			(*	Reset status *)
#38			LD		0
(-) UNDEF
A19045E4  2000     		mov r0, #0 ; 0

#39			ST		ET
(*) USINT
A19045E6  F8DF 7020		ldr r7, [pc, #+32] ; 0x10
A19045EA  51F0     		str r0, [r6, +r7]

#40			ST		timStart
(-) UDINT
A19045EC  6030     		str r0, [r6]

#41			LD		FALSE
(-) UNDEF
A19045EE  2000     		mov r0, #0 ; 0

#42			ST		Q
(*) BOOL
A19045F0  F8DF 7010		ldr r7, [pc, #+16] ; 0xC
A19045F4  55F0     		strb r0, [r6, +r7]

A19045F6  E8BD 4040		ldmia sp!, { r6, lr }

A19045FA  4770     		bx lr

A19045FC  00000004		; 0x00000004
A1904600  00000008		; 0x00000008
A1904604  0000000C		; 0x0000000C
A1904608  00000010		; 0x00000010
A190460C  FFFFFFFF		; 0x1000052C


Frame allocation (hex):

	0000       : VAR timStart
	0004 bit  0: VAR IN
	0008       : VAR PT
	000C bit  0: VAR Q
	0010       : VAR ET

END_FUNCTION_BLOCK
**************************************************
	List program: main
**************************************************

PROGRAM main

END_PROGRAM

A1904610  B082     		sub sp, sp, #8
A1904612  F8CD E000		str lr, [sp]
A1904616  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

#0		{SRC:main}
#1		(*$WAITSWITCH$*)
#2		
#3			(* cnt := cnt + 1; *)
#4			LD		cnt	{LNXT:2|2|-1}
(*) UNDEF
A190461A  F8DF 701C		ldr r7, [pc, #+28] ; 0xA1A000DC
A190461E  F9B7 0000		ldrsh r0, [r7]

#5			ADD		1	{LNXT:2|2|-1}
(-) INT
A1904622  1C40     		add r0, r0, #1

#6			ST		cnt	{LNXT:2|2|-1}
(*) INT
A1904624  F8DF 7010		ldr r7, [pc, #+16] ; 0xA1A000DC
A1904628  8038     		strh r0, [r7]

A190462A  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
A190462E  F8DD E000		ldr lr, [sp]
A1904632  B002     		add sp, sp, #8

A1904634  4770     		bx lr

A1904638  A1A000DC		; 0xA1A000DC

END_PROGRAM


**************************************************
	Target variable image generation
**************************************************


*** INPUT:
A190463C  B082     		sub sp, sp, #8
A190463E  F8CD E000		str lr, [sp]
A1904642  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

A1904646  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
A190464A  F8DD E000		ldr lr, [sp]
A190464E  B002     		add sp, sp, #8

A1904650  4770     		bx lr


*** OUTPUT:
A1904652  B082     		sub sp, sp, #8
A1904654  F8CD E000		str lr, [sp]
A1904658  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

A190465C  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
A1904660  F8DD E000		ldr lr, [sp]
A1904664  B002     		add sp, sp, #8

A1904666  4770     		bx lr



**************************************************
	Task Background init code
**************************************************

A1904668  B082     		sub sp, sp, #8
A190466A  F8CD E000		str lr, [sp]
A190466E  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

A1904672  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
A1904676  F8DD E000		ldr lr, [sp]
A190467A  B002     		add sp, sp, #8

A190467C  4770     		bx lr

**************************************************
	List program: DownloadData
**************************************************

PROGRAM DownloadData

END_PROGRAM

A1904690  B082     		sub sp, sp, #8
A1904692  F8CD E000		str lr, [sp]
A1904696  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

#0		{SRC:DownloadData}
#1		(*$WAITSWITCH$*)
#2		
#3			(* level_min:=ep_level_min; *)
#4			MOVE		ep_level_min,level_min	{LNXT:1|2|-1}
(*) UDINT
A190469A  F8DF 705C		ldr r7, [pc, #+92] ; 0xA00017F6
A190469E  F9B7 0000		ldrsh r0, [r7]
A19046A2  F8DF 705C		ldr r7, [pc, #+92] ; 0xA0003F04
A19046A6  8038     		strh r0, [r7]

#5		
#6			(* Level_1:=ep_level_1; *)
#7			MOVE		ep_level_1,Level_1	{LNXT:2|3|-1}
(*) INT
A19046A8  F8DF 7040		ldr r7, [pc, #+64] ; 0xA00017F0
A19046AC  F9B7 0000		ldrsh r0, [r7]
A19046B0  F8DF 7050		ldr r7, [pc, #+80] ; 0xA0003F06
A19046B4  8038     		strh r0, [r7]

#8		
#9			(* Level_2:=ep_level_2; *)
#10			MOVE		ep_level_2,Level_2	{LNXT:3|4|-1}
(*) INT
A19046B6  F8DF 7038		ldr r7, [pc, #+56] ; 0xA00017F2
A19046BA  F9B7 0000		ldrsh r0, [r7]
A19046BE  F8DF 7048		ldr r7, [pc, #+72] ; 0xA0003F08
A19046C2  8038     		strh r0, [r7]

#11		
#12			(* Level_3:=ep_level_3; *)
#13			MOVE		ep_level_3,Level_3	{LNXT:4|5|-1}
(*) INT
A19046C4  F8DF 702C		ldr r7, [pc, #+44] ; 0xA00017F4
A19046C8  F9B7 0000		ldrsh r0, [r7]
A19046CC  F8DF 703C		ldr r7, [pc, #+60] ; 0xA0003F0A
A19046D0  8038     		strh r0, [r7]

#14		
#15			(* Rotation:=ep_rotation; *)
#16			MOVE		ep_rotation,Rotation	{LNXT:5|1|-1}
(*) INT
A19046D2  F8DF 7028		ldr r7, [pc, #+40] ; 0xA00017F8
A19046D6  7838     		ldrb r0, [r7]
A19046D8  F8DF 7034		ldr r7, [pc, #+52] ; 0xA0003F10
A19046DC  7038     		strb r0, [r7]

A19046DE  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
A19046E2  F8DD E000		ldr lr, [sp]
A19046E6  B002     		add sp, sp, #8

A19046E8  4770     		bx lr

A19046EC  FFFFFFFF		; 0xA00017F0
A19046F0  FFFFFFFF		; 0xA00017F2
A19046F4  FFFFFFFF		; 0xA00017F4
A19046F8  FFFFFFFF		; 0xA00017F6
A19046FC  FFFFFFFF		; 0xA00017F8
A1904700  FFFFFFFF		; 0xA0003F04
A1904704  FFFFFFFF		; 0xA0003F06
A1904708  FFFFFFFF		; 0xA0003F08
A190470C  FFFFFFFF		; 0xA0003F0A
A1904710  FFFFFFFF		; 0xA0003F10

END_PROGRAM


**************************************************
	Target variable image generation
**************************************************


*** INPUT:
A1904714  4770     		bx lr


*** OUTPUT:
A1904716  4770     		bx lr



**************************************************
	Task Boot init code
**************************************************

A1904718  B082     		sub sp, sp, #8
A190471A  F8CD E000		str lr, [sp]
A190471E  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

A1904722  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
A1904726  F8DD E000		ldr lr, [sp]
A190472A  B002     		add sp, sp, #8

A190472C  4770     		bx lr

**************************************************
	List program: ParCheck
**************************************************

PROGRAM ParCheck

END_PROGRAM

A1904740  B082     		sub sp, sp, #8
A1904742  F8CD E000		str lr, [sp]
A1904746  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

#0		{SRC:ParCheck}
#1		(*$WAITSWITCH$*)
#2		
#3		
#4			(* IF Par_POLI AND 16#fc00) <> 2048 *)
#5			LD		Par_POLI	{LNXT:2|-1|-1}
(*) UNDEF
A190474A  F8DF 7034		ldr r7, [pc, #+52] ; 0x10000182
A190474E  8838     		ldrh r0, [r7]

#6			AND		16#fc00	{LNXT:2|-1|-1}
(*) UINT
A1904750  F44F 477C		mov r7, #64512 ; 64512
A1904754  4038     		and r0, r0, r7

#7			NE		2048	{LNXT:2|-1|-1}
(*) UINT
A1904756  F44F 6700		mov r7, #2048 ; 2048
A190475A  42B8     		cmp r0, r7
A190475C  BF08 2000		eqmov r0, #0
A1904760  BF18 2001		nemov r0, #1

#8			JMPCN	$label0	{LNXT:2|3|2}
(-) BOOL
A1904764  2800     		cmp r0, #0
A1904766  D005     		beq #10 ; 0xA1904774


#9		
#10			(* THEN *)
#11		
#12				(* WHILE TRUE *)
#13		$label1:
#14				LD		TRUE	{LNXT:3|-1|-1}
(-) UNDEF
A190476A  2001     		mov r0, #1 ; 1

#15				JMPCN		$label2	{LNXT:3|2|2}
(-) BOOL
A190476C  2800     		cmp r0, #0
A190476E  D001     		beq #2 ; 0xA1904774


#16		
#17				(* DO *)
#18					JMP		$label1	{LNXT:3|2|2}
(-) BOOL
A1904772  E7FA     		b #-12 ; 0xA190476A

A1904774  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
A1904778  F8DD E000		ldr lr, [sp]
A190477C  B002     		add sp, sp, #8

A190477E  4770     		bx lr

A1904780  FFFFFFFF		; 0x10000182

END_PROGRAM


**************************************************
	Target variable image generation
**************************************************


*** INPUT:
A1904784  4770     		bx lr


*** OUTPUT:
A1904786  4770     		bx lr



**************************************************
	Task Init init code
**************************************************

A1904788  B082     		sub sp, sp, #8
A190478A  F8CD E000		str lr, [sp]
A190478E  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

A1904792  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
A1904796  F8DD E000		ldr lr, [sp]
A190479A  B002     		add sp, sp, #8

A190479C  4770     		bx lr

**************************************************
	List program: InitParDB
**************************************************

PROGRAM InitParDB

        VAR
warningsKiller : USINT;
dummyCrc32 : UDINT;
	END_VAR

END_PROGRAM

A19047B0  B082     		sub sp, sp, #8
A19047B2  F8CD E000		str lr, [sp]
A19047B6  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

#0		{SRC:InitParDB}
#1		(*$WAITSWITCH$*)
#2		
#3			(* dummyCrc32 := 3340597055; *)
#4			MOVE		3340597055,dummyCrc32	{LNXT:3|5|-1}
(*) UDINT
A19047BA  F8DF 7040		ldr r7, [pc, #+64] ; 0xC71D773F
A19047BE  4638     		mov r0, r7
A19047C0  F8DF 7030		ldr r7, [pc, #+48] ; 0xA1A0000C
A19047C4  6038     		str r0, [r7]

#5		
#6			(* warningsKiller := sysDBase_SetExtTable( ADR( $$ParDB ), $$ParDBLength ); *)
#7			ADR		$$ParDB	{LNXT:5|3|-1}
(*) UDINT
A19047C6  F8DF 0028		ldr r0, [pc, #+40] ; 0xA1900100

#8			sysDBase_SetExtTable		$$ParDBLength	{LNXT:5|3|-1}
(*) @USINT
A19047CA  4607     		mov r7, r0
A19047CC  4638     		mov r0, r7
A19047CE  271B     		mov r7, #27 ; 27
A19047D0  4639     		mov r1, r7
A19047D2  F8DF 402C		ldr r4, [pc, #+44] ; 0x139A5
A19047D6  F044 0401		orr r4, r4, #1
A19047DA  47A0     		blx r4

#9			ST		warningsKiller	{LNXT:5|3|-1}
(*) USINT
A19047DC  F8DF 7018		ldr r7, [pc, #+24] ; 0xA1A00010
A19047E0  7038     		strb r0, [r7]

A19047E2  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
A19047E6  F8DD E000		ldr lr, [sp]
A19047EA  B002     		add sp, sp, #8

A19047EC  4770     		bx lr

A19047F0  A1900100		; 0xA1900100
A19047F4  A1A0000C		; 0xA1A0000C
A19047F8  A1A00010		; 0xA1A00010
A19047FC  C71D773F		; 0xC71D773F
A1904800  FFFFFFFF		; 0x000139A5

END_PROGRAM


**************************************************
	Target variable image generation
**************************************************


*** INPUT:
A1904804  4770     		bx lr


*** OUTPUT:
A1904806  4770     		bx lr



**************************************************
	Task Serv init code
**************************************************

A1904808  B082     		sub sp, sp, #8
A190480A  F8CD E000		str lr, [sp]
A190480E  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

A1904812  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
A1904816  F8DD E000		ldr lr, [sp]
A190481A  B002     		add sp, sp, #8

A190481C  4770     		bx lr

**************************************************
	List program: LVL
**************************************************

PROGRAM LVL

        VAR
Rotationnumber : INT := 1;	{ DE:"Номер в ротації" }
FastRunMode : BOOL := FALSE;	{ DE:"Локальна змінна Прогонка 0-вимкнена" }
RunTime_START : TIME;	{ DE:"Час роботи двигуна A" }
CurrentMotor : INT := 1;
ErrorCode : INT := 0;
PumpIntervalTimer_1 : TON;	{ DE:"інтервал для запуску прогонки" }
PumpRunTimer_1 : TON;	{ DE:"Час прогонки" }
TestRunActive_1 : BOOL := FALSE;	{ DE:"Тригер готовності прогонки" }
TestRunRunning_1 : BOOL := FALSE;	{ DE:"Прогонка виконується" }
PumpIntervalTimer_2 : TON;	{ DE:"інтервал для запуску прогонки" }
PumpRunTimer_2 : TON;	{ DE:"Час прогонки" }
TestRunActive_2 : BOOL := FALSE;	{ DE:"Тригер готовності прогонки" }
TestRunRunning_2 : BOOL := FALSE;	{ DE:"Прогонка виконується" }
PumpIntervalTimer_3 : TON;	{ DE:"інтервал для запуску прогонки" }
PumpRunTimer_3 : TON;	{ DE:"Час прогонки" }
TestRunActive_3 : BOOL := FALSE;	{ DE:"Тригер готовності прогонки" }
TestRunRunning_3 : BOOL := FALSE;	{ DE:"Прогонка виконується" }
CurrentPump : INT := 1;
ErrorTimer_A_Start : TON;
ErrorTimer_B_Start : TON;
ErrorTimer_C_Start : TON;
TM_WAIT_Start : INT := 5000;
	END_VAR

END_PROGRAM

A1904830  B082     		sub sp, sp, #8
A1904832  F8CD E000		str lr, [sp]
A1904836  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

#0		{SRC:LVL}
#1		(*$WAITSWITCH$*)
#2		
#3			(* o_tank_lvl:= Tank_Level; *)
#4			MOVE		Tank_Level,o_tank_lvl	{LNXT:5|7|-1}
(*) UDINT
A190483A  F8DF 7878		ldr r7, [pc, #+2168] ; 0xA1A00012
A190483E  F9B7 0000		ldrsh r0, [r7]
A1904842  F8DF 78CC		ldr r7, [pc, #+2252] ; 0x10000436
A1904846  8038     		strh r0, [r7]

#5		
#6		
#7			(* IF level_min <> ep_level_min *)
#8			LD		level_min	{LNXT:7|-1|-1}
(*) UNDEF
A1904848  F8DF 7808		ldr r7, [pc, #+2056] ; 0xA0003F04
A190484C  F9B7 0000		ldrsh r0, [r7]

#9			NE		ep_level_min	{LNXT:7|-1|-1}
(*) INT
A1904850  F8DF 77F8		ldr r7, [pc, #+2040] ; 0xA00017F6
A1904854  F9B7 7000		ldrsh r7, [r7]
A1904858  42B8     		cmp r0, r7
A190485A  BF08 2000		eqmov r0, #0
A190485E  BF18 2001		nemov r0, #1

#10			JMPCN	$label0	{LNXT:7|8|11}
(-) BOOL
A1904862  2800     		cmp r0, #0
A1904864  D007     		beq #14 ; 0xA1904876


#11		
#12			(* THEN *)
#13		
#14				(* level_min := ep_level_min; *)
#15				MOVE		ep_level_min,level_min	{LNXT:8|11|-1}
(*) BOOL
A1904868  F8DF 77E0		ldr r7, [pc, #+2016] ; 0xA00017F6
A190486C  F9B7 0000		ldrsh r0, [r7]
A1904870  F8DF 77E0		ldr r7, [pc, #+2016] ; 0xA0003F04
A1904874  8038     		strh r0, [r7]

#16		
#17		$label0:
#18			(* END_IF *)
#19		
#20		
#21			(* IF Level_1 <> ep_level_1 *)
#22			LD		Level_1	{LNXT:11|-1|-1}
(*) UNDEF
A1904876  F8DF 77E0		ldr r7, [pc, #+2016] ; 0xA0003F06
A190487A  F9B7 0000		ldrsh r0, [r7]

#23			NE		ep_level_1	{LNXT:11|-1|-1}
(*) INT
A190487E  F8DF 77C0		ldr r7, [pc, #+1984] ; 0xA00017F0
A1904882  F9B7 7000		ldrsh r7, [r7]
A1904886  42B8     		cmp r0, r7
A1904888  BF08 2000		eqmov r0, #0
A190488C  BF18 2001		nemov r0, #1

#24			JMPCN	$label1	{LNXT:11|12|15}
(-) BOOL
A1904890  2800     		cmp r0, #0
A1904892  D007     		beq #14 ; 0xA19048A4


#25		
#26			(* THEN *)
#27		
#28				(* Level_1 := ep_level_1; *)
#29				MOVE		ep_level_1,Level_1	{LNXT:12|15|-1}
(*) BOOL
A1904896  F8DF 77A8		ldr r7, [pc, #+1960] ; 0xA00017F0
A190489A  F9B7 0000		ldrsh r0, [r7]
A190489E  F8DF 77B8		ldr r7, [pc, #+1976] ; 0xA0003F06
A19048A2  8038     		strh r0, [r7]

#30		
#31		$label1:
#32			(* END_IF *)
#33		
#34		
#35			(* IF Level_2 <> ep_level_2 *)
#36			LD		Level_2	{LNXT:15|-1|-1}
(*) UNDEF
A19048A4  F8DF 77B4		ldr r7, [pc, #+1972] ; 0xA0003F08
A19048A8  F9B7 0000		ldrsh r0, [r7]

#37			NE		ep_level_2	{LNXT:15|-1|-1}
(*) INT
A19048AC  F8DF 7794		ldr r7, [pc, #+1940] ; 0xA00017F2
A19048B0  F9B7 7000		ldrsh r7, [r7]
A19048B4  42B8     		cmp r0, r7
A19048B6  BF08 2000		eqmov r0, #0
A19048BA  BF18 2001		nemov r0, #1

#38			JMPCN	$label2	{LNXT:15|16|19}
(-) BOOL
A19048BE  2800     		cmp r0, #0
A19048C0  D007     		beq #14 ; 0xA19048D2


#39		
#40			(* THEN *)
#41		
#42				(* Level_2 := ep_level_2; *)
#43				MOVE		ep_level_2,Level_2	{LNXT:16|19|-1}
(*) BOOL
A19048C4  F8DF 777C		ldr r7, [pc, #+1916] ; 0xA00017F2
A19048C8  F9B7 0000		ldrsh r0, [r7]
A19048CC  F8DF 778C		ldr r7, [pc, #+1932] ; 0xA0003F08
A19048D0  8038     		strh r0, [r7]

#44		
#45		$label2:
#46			(* END_IF *)
#47		
#48		
#49			(* IF Level_3 <> ep_level_3 *)
#50			LD		Level_3	{LNXT:19|-1|-1}
(*) UNDEF
A19048D2  F8DF 778C		ldr r7, [pc, #+1932] ; 0xA0003F0A
A19048D6  F9B7 0000		ldrsh r0, [r7]

#51			NE		ep_level_3	{LNXT:19|-1|-1}
(*) INT
A19048DA  F8DF 776C		ldr r7, [pc, #+1900] ; 0xA00017F4
A19048DE  F9B7 7000		ldrsh r7, [r7]
A19048E2  42B8     		cmp r0, r7
A19048E4  BF08 2000		eqmov r0, #0
A19048E8  BF18 2001		nemov r0, #1

#52			JMPCN	$label3	{LNXT:19|20|23}
(-) BOOL
A19048EC  2800     		cmp r0, #0
A19048EE  D007     		beq #14 ; 0xA1904900


#53		
#54			(* THEN *)
#55		
#56				(* Level_3 := ep_level_3; *)
#57				MOVE		ep_level_3,Level_3	{LNXT:20|23|-1}
(*) BOOL
A19048F2  F8DF 7754		ldr r7, [pc, #+1876] ; 0xA00017F4
A19048F6  F9B7 0000		ldrsh r0, [r7]
A19048FA  F8DF 7764		ldr r7, [pc, #+1892] ; 0xA0003F0A
A19048FE  8038     		strh r0, [r7]

#58		
#59		$label3:
#60			(* END_IF *)
#61		
#62		
#63			(* IF Rotation <> ep_rotation *)
#64			LD		Rotation	{LNXT:23|-1|-1}
(*) UNDEF
A1904900  F8DF 7764		ldr r7, [pc, #+1892] ; 0xA0003F10
A1904904  7838     		ldrb r0, [r7]

#65			NE		ep_rotation	{LNXT:23|-1|-1}
(*) BOOL
A1904906  F8DF 7748		ldr r7, [pc, #+1864] ; 0xA00017F8
A190490A  783F     		ldrb r7, [r7]
A190490C  42B8     		cmp r0, r7
A190490E  BF08 2000		eqmov r0, #0
A1904912  BF18 2001		nemov r0, #1

#66			JMPCN	$label4	{LNXT:23|24|27}
(-) BOOL
A1904916  2800     		cmp r0, #0
A1904918  D006     		beq #12 ; 0xA1904928


#67		
#68			(* THEN *)
#69		
#70				(* Rotation := ep_rotation; *)
#71				MOVE		ep_rotation,Rotation	{LNXT:24|27|-1}
(*) BOOL
A190491C  F8DF 7730		ldr r7, [pc, #+1840] ; 0xA00017F8
A1904920  7838     		ldrb r0, [r7]
A1904922  F8DF 7744		ldr r7, [pc, #+1860] ; 0xA0003F10
A1904926  7038     		strb r0, [r7]

#72		
#73		$label4:
#74			(* END_IF *)
#75		
#76		
#77			(* IF Rotation *)
#78			LD		Rotation	{LNXT:27|-1|-1}
(*) UNDEF
A1904928  F8DF 773C		ldr r7, [pc, #+1852] ; 0xA0003F10
A190492C  7838     		ldrb r0, [r7]

#79			JMPCN	$label5	{LNXT:27|28|30}
(-) BOOL
A190492E  2800     		cmp r0, #0
A1904930  D017     		beq #46 ; 0xA1904962


#80		
#81			(* THEN *)
#82		
#83				(* rotation_state := 'On'; *)
#84				MOVE		'On',rotation_state	{LNXT:28|33|-1}
(*) BOOL
A1904934  F8DF 775C		ldr r7, [pc, #+1884] ; 0xA19044E0
A1904938  4638     		mov r0, r7
A190493A  B082     		sub sp, sp, #8
A190493C  F8CD 0000		str r0, [sp]
A1904940  E92D 0006		stmdb sp!, { r1, r2 }
A1904944  2205     		mov r2, #5 ; 5
A1904946  F8DF 1744		ldr r1, [pc, #+1860] ; 0xA0003FBA
A190494A  F8DF 47C0		ldr r4, [pc, #+1984] ; 0x1133D
A190494E  F044 0401		orr r4, r4, #1
A1904952  47A0     		blx r4
A1904954  E8BD 0006		ldmia sp!, { r1, r2 }
A1904958  F8DD 0000		ldr r0, [sp]
A190495C  B002     		add sp, sp, #8

#85				JMP		$label6	{LNXT:27|28|30}
(-) STRING
A190495E  E015     		b #42 ; 0xA190498C


#86		$label5:
#87		
#88			(* ELSE *)
#89		
#90				(* rotation_state := 'Off'; *)
#91				MOVE		'Off',rotation_state	{LNXT:30|33|-1}
(*) STRING
A1904962  F8DF 7734		ldr r7, [pc, #+1844] ; 0xA19044E4
A1904966  4638     		mov r0, r7
A1904968  B082     		sub sp, sp, #8
A190496A  F8CD 0000		str r0, [sp]
A190496E  E92D 0006		stmdb sp!, { r1, r2 }
A1904972  2205     		mov r2, #5 ; 5
A1904974  F8DF 1714		ldr r1, [pc, #+1812] ; 0xA0003FBA
A1904978  F8DF 4790		ldr r4, [pc, #+1936] ; 0x1133D
A190497C  F044 0401		orr r4, r4, #1
A1904980  47A0     		blx r4
A1904982  E8BD 0006		ldmia sp!, { r1, r2 }
A1904986  F8DD 0000		ldr r0, [sp]
A190498A  B002     		add sp, sp, #8

#92		
#93		$label6:
#94			(* END_IF *)
#95		
#96		
#97			(* IF di_flooding *)
#98			LD		di_flooding	{LNXT:33|-1|-1}
(*) UNDEF
A190498C  F8DF 7720		ldr r7, [pc, #+1824] ; 0xA1A00011
A1904990  7838     		ldrb r0, [r7]

#99			JMPCN	$label7	{LNXT:33|34|36}
(-) BOOL
A1904992  2800     		cmp r0, #0
A1904994  D017     		beq #46 ; 0xA19049C6


#100		
#101			(* THEN *)
#102		
#103				(* flooding_state := 'Yes'; *)
#104				MOVE		'Yes',flooding_state	{LNXT:34|40|-1}
(*) BOOL
A1904998  F8DF 7700		ldr r7, [pc, #+1792] ; 0xA19044EC
A190499C  4638     		mov r0, r7
A190499E  B082     		sub sp, sp, #8
A19049A0  F8CD 0000		str r0, [sp]
A19049A4  E92D 0006		stmdb sp!, { r1, r2 }
A19049A8  2214     		mov r2, #20 ; 20
A19049AA  F8DF 16DC		ldr r1, [pc, #+1756] ; 0xA0003FA4
A19049AE  F8DF 475C		ldr r4, [pc, #+1884] ; 0x1133D
A19049B2  F044 0401		orr r4, r4, #1
A19049B6  47A0     		blx r4
A19049B8  E8BD 0006		ldmia sp!, { r1, r2 }
A19049BC  F8DD 0000		ldr r0, [sp]
A19049C0  B002     		add sp, sp, #8

#105				JMP		$label8	{LNXT:33|34|36}
(-) STRING
A19049C2  E015     		b #42 ; 0xA19049F0


#106		$label7:
#107		
#108			(* ELSE *)
#109		
#110				(* flooding_state := 'No'; *)
#111				MOVE		'No',flooding_state	{LNXT:36|40|-1}
(*) STRING
A19049C6  F8DF 76D8		ldr r7, [pc, #+1752] ; 0xA19044F4
A19049CA  4638     		mov r0, r7
A19049CC  B082     		sub sp, sp, #8
A19049CE  F8CD 0000		str r0, [sp]
A19049D2  E92D 0006		stmdb sp!, { r1, r2 }
A19049D6  2214     		mov r2, #20 ; 20
A19049D8  F8DF 16AC		ldr r1, [pc, #+1708] ; 0xA0003FA4
A19049DC  F8DF 472C		ldr r4, [pc, #+1836] ; 0x1133D
A19049E0  F044 0401		orr r4, r4, #1
A19049E4  47A0     		blx r4
A19049E6  E8BD 0006		ldmia sp!, { r1, r2 }
A19049EA  F8DD 0000		ldr r0, [sp]
A19049EE  B002     		add sp, sp, #8

#112		
#113		$label8:
#114			(* END_IF *)
#115		
#116			(* ErrorTimer_A_Start *)
#117			MOVE		Motor_A,ErrorTimer_A_Start.IN	{LNXT:40|-1|-1}
(*) STRING
A19049F0  F8DF 7720		ldr r7, [pc, #+1824] ; 0x100004AC
A19049F4  7838     		ldrb r0, [r7]
A19049F6  F8DF 76C4		ldr r7, [pc, #+1732] ; 0xA1A00018
A19049FA  7038     		strb r0, [r7]

#118			MOVE		TM_WAIT_Start,ErrorTimer_A_Start.PT	{LNXT:40|-1|-1}
(*) BOOL
A19049FC  F8DF 76C8		ldr r7, [pc, #+1736] ; 0xA1A00028
A1904A00  F9B7 0000		ldrsh r0, [r7]
A1904A04  F8DF 76B8		ldr r7, [pc, #+1720] ; 0xA1A0001C
A1904A08  6038     		str r0, [r7]

#119			CAL		ErrorTimer_A_Start	{LNXT:40|41|-1}
(*) UDINT
A1904A0A  E92D 0021		stmdb sp!, { r0, r5 }
A1904A0E  F8DF 56A8		ldr r5, [pc, #+1704] ; 0xA1A00014
A1904A12  F8DF 4698		ldr r4, [pc, #+1688] ; 0xA1904570
A1904A16  F044 0401		orr r4, r4, #1
A1904A1A  47A0     		blx r4
A1904A1C  E8BD 0021		ldmia sp!, { r0, r5 }

#120		
#121		
#122			(* IF ErrorTimer_A_Start.Q *)
#123			LD		ErrorTimer_A_Start.Q	{LNXT:41|-1|-1}
(*) UNDEF
A1904A20  F8DF 76A0		ldr r7, [pc, #+1696] ; 0xA1A00020
A1904A24  7838     		ldrb r0, [r7]

#124			JMPCN	$label9	{LNXT:41|42|57}
(-) BOOL
A1904A26  2800     		cmp r0, #0
A1904A28  D064     		beq #200 ; 0xA1904AF4


#125		
#126			(* THEN *)
#127		
#128		
#129				(* IF Motor_A and not is_working_A *)
#130				LD		is_working_A	{LNXT:42|-1|-1}
(*) UNDEF
A1904A2C  F8DF 769C		ldr r7, [pc, #+1692] ; 0xA1A0002A
A1904A30  7838     		ldrb r0, [r7]

#131				NOT	{LNXT:42|-1|-1}
(*) BOOL
A1904A32  2800     		cmp r0, #0
A1904A34  BF08 2001		eqmov r0, #1
A1904A38  BF18 2000		nemov r0, #0

#132				AND		Motor_A	{LNXT:42|-1|-1}
(*) BOOL
A1904A3C  F8DF 76D4		ldr r7, [pc, #+1748] ; 0x100004AC
A1904A40  783F     		ldrb r7, [r7]
A1904A42  4038     		and r0, r0, r7

#133				JMPCN	$label10	{LNXT:42|44|57}
(-) BOOL
A1904A44  2800     		cmp r0, #0
A1904A46  D055     		beq #170 ; 0xA1904AF4


#134		
#135				(* THEN *)
#136		
#137					(* alarm_pumps.0 :=true; *)
#138					MOVE		true,alarm_pumps.0	{LNXT:44|47|-1}
(*) BOOL
A1904A4A  2001     		mov r0, #1 ; 1
A1904A4C  F8DF 7640		ldr r7, [pc, #+1600] ; 0xA0003FC0
A1904A50  F8B7 8000		ldrh r8, [r7]
A1904A54  F360 0800		bfi r8, r0, #0, #1
A1904A58  F8A7 8000		strh r8, [r7]

#139		
#140		
#141					(* IF is_working_B and Avto_B and not alarm_pumps.1 *)
#142					LD		alarm_pumps.1	{LNXT:47|-1|-1}
(*) UNDEF
A1904A5C  F8DF 7630		ldr r7, [pc, #+1584] ; 0xA0003FC0
A1904A60  8838     		ldrh r0, [r7]
A1904A62  F3C0 0040		ubfx r0, r0, #1, #1

#143					NOT	{LNXT:47|-1|-1}
(*) BOOL
A1904A66  2800     		cmp r0, #0
A1904A68  BF08 2001		eqmov r0, #1
A1904A6C  BF18 2000		nemov r0, #0

#144					AND(		is_working_B	{LNXT:47|-1|-1}
(*) BOOL
A1904A70  B082     		sub sp, sp, #8
A1904A72  F8CD 0000		str r0, [sp]
A1904A76  F8DF 7658		ldr r7, [pc, #+1624] ; 0xA1A0002B
A1904A7A  7838     		ldrb r0, [r7]

#145					NOT	{LNXT:47|-1|-1}
(*) BOOL
A1904A7C  2800     		cmp r0, #0
A1904A7E  BF08 2001		eqmov r0, #1
A1904A82  BF18 2000		nemov r0, #0

#146					AND		Avto_B	{LNXT:47|-1|-1}
(*) BOOL
A1904A86  F8DF 764C		ldr r7, [pc, #+1612] ; 0xA1A0002C
A1904A8A  783F     		ldrb r7, [r7]
A1904A8C  4038     		and r0, r0, r7

#147					)	{LNXT:47|-1|-1}
(*) BOOL
A1904A8E  4607     		mov r7, r0
A1904A90  F8DD 0000		ldr r0, [sp]
A1904A94  B002     		add sp, sp, #8
A1904A96  4038     		and r0, r0, r7

#148					JMPCN	$label11	{LNXT:47|48|49}
(-) BOOL
A1904A98  2800     		cmp r0, #0
A1904A9A  D006     		beq #12 ; 0xA1904AAA


#149		
#150					(* THEN *)
#151		
#152						(* Priority := 1; *)
#153						MOVE		1,Priority	{LNXT:48|57|-1}
(*) BOOL
A1904A9E  2001     		mov r0, #1 ; 1
A1904AA0  F8DF 75C0		ldr r7, [pc, #+1472] ; 0xA0003F0C
A1904AA4  8038     		strh r0, [r7]

#154						JMP		$label12	{LNXT:47|48|49}
(-) INT
A1904AA6  E025     		b #74 ; 0xA1904AF4


#155		$label11:
#156		
#157					(* ELSIF is_working_C and Avto_C and not alarm_pumps.2 *)
#158					LD		alarm_pumps.2	{LNXT:49|-1|-1}
(*) UNDEF
A1904AAA  F8DF 75E4		ldr r7, [pc, #+1508] ; 0xA0003FC0
A1904AAE  8838     		ldrh r0, [r7]
A1904AB0  F3C0 0080		ubfx r0, r0, #2, #1

#159					NOT	{LNXT:49|-1|-1}
(*) BOOL
A1904AB4  2800     		cmp r0, #0
A1904AB6  BF08 2001		eqmov r0, #1
A1904ABA  BF18 2000		nemov r0, #0

#160					AND(		is_working_C	{LNXT:49|-1|-1}
(*) BOOL
A1904ABE  B082     		sub sp, sp, #8
A1904AC0  F8CD 0000		str r0, [sp]
A1904AC4  F8DF 7610		ldr r7, [pc, #+1552] ; 0xA1A0002D
A1904AC8  7838     		ldrb r0, [r7]

#161					NOT	{LNXT:49|-1|-1}
(*) BOOL
A1904ACA  2800     		cmp r0, #0
A1904ACC  BF08 2001		eqmov r0, #1
A1904AD0  BF18 2000		nemov r0, #0

#162					AND		Avto_C	{LNXT:49|-1|-1}
(*) BOOL
A1904AD4  F8DF 7604		ldr r7, [pc, #+1540] ; 0xA1A0002E
A1904AD8  783F     		ldrb r7, [r7]
A1904ADA  4038     		and r0, r0, r7

#163					)	{LNXT:49|-1|-1}
(*) BOOL
A1904ADC  4607     		mov r7, r0
A1904ADE  F8DD 0000		ldr r0, [sp]
A1904AE2  B002     		add sp, sp, #8
A1904AE4  4038     		and r0, r0, r7

#164					JMPCN	$label12	{LNXT:49|50|57}
(-) BOOL
A1904AE6  2800     		cmp r0, #0
A1904AE8  D004     		beq #8 ; 0xA1904AF4


#165		
#166					(* THEN *)
#167		
#168						(* Priority := 2; *)
#169						MOVE		2,Priority	{LNXT:50|57|-1}
(*) BOOL
A1904AEC  2002     		mov r0, #2 ; 2
A1904AEE  F8DF 7574		ldr r7, [pc, #+1396] ; 0xA0003F0C
A1904AF2  8038     		strh r0, [r7]

#170		
#171		$label12:
#172					(* END_IF *)
#173		
#174		$label10:
#175				(* END_IF *)
#176		
#177		$label9:
#178			(* END_IF *)
#179		
#180			(* ErrorTimer_B_Start *)
#181			MOVE		Motor_B,ErrorTimer_B_Start.IN	{LNXT:57|-1|-1}
(*) INT
A1904AF4  F8DF 7620		ldr r7, [pc, #+1568] ; 0x100004AD
A1904AF8  7838     		ldrb r0, [r7]
A1904AFA  F8DF 75EC		ldr r7, [pc, #+1516] ; 0xA1A00034
A1904AFE  7038     		strb r0, [r7]

#182			MOVE		TM_WAIT_Start,ErrorTimer_B_Start.PT	{LNXT:57|-1|-1}
(*) BOOL
A1904B00  F8DF 75C4		ldr r7, [pc, #+1476] ; 0xA1A00028
A1904B04  F9B7 0000		ldrsh r0, [r7]
A1904B08  F8DF 75E0		ldr r7, [pc, #+1504] ; 0xA1A00038
A1904B0C  6038     		str r0, [r7]

#183			CAL		ErrorTimer_B_Start	{LNXT:57|58|-1}
(*) UDINT
A1904B0E  E92D 0021		stmdb sp!, { r0, r5 }
A1904B12  F8DF 55D0		ldr r5, [pc, #+1488] ; 0xA1A00030
A1904B16  F8DF 4594		ldr r4, [pc, #+1428] ; 0xA1904570
A1904B1A  F044 0401		orr r4, r4, #1
A1904B1E  47A0     		blx r4
A1904B20  E8BD 0021		ldmia sp!, { r0, r5 }

#184		
#185		
#186			(* IF ErrorTimer_B_Start.Q *)
#187			LD		ErrorTimer_B_Start.Q	{LNXT:58|-1|-1}
(*) UNDEF
A1904B24  F8DF 75C8		ldr r7, [pc, #+1480] ; 0xA1A0003C
A1904B28  7838     		ldrb r0, [r7]

#188			JMPCN	$label13	{LNXT:58|59|74}
(-) BOOL
A1904B2A  2800     		cmp r0, #0
A1904B2C  D064     		beq #200 ; 0xA1904BF8


#189		
#190			(* THEN *)
#191		
#192		
#193				(* IF Motor_B and not is_working_B *)
#194				LD		is_working_B	{LNXT:59|-1|-1}
(*) UNDEF
A1904B30  F8DF 759C		ldr r7, [pc, #+1436] ; 0xA1A0002B
A1904B34  7838     		ldrb r0, [r7]

#195				NOT	{LNXT:59|-1|-1}
(*) BOOL
A1904B36  2800     		cmp r0, #0
A1904B38  BF08 2001		eqmov r0, #1
A1904B3C  BF18 2000		nemov r0, #0

#196				AND		Motor_B	{LNXT:59|-1|-1}
(*) BOOL
A1904B40  F8DF 75D4		ldr r7, [pc, #+1492] ; 0x100004AD
A1904B44  783F     		ldrb r7, [r7]
A1904B46  4038     		and r0, r0, r7

#197				JMPCN	$label14	{LNXT:59|62|74}
(-) BOOL
A1904B48  2800     		cmp r0, #0
A1904B4A  D055     		beq #170 ; 0xA1904BF8


#198		
#199				(* THEN *)
#200		
#201					(* alarm_pumps.1:=true; *)
#202					MOVE		true,alarm_pumps.1	{LNXT:62|64|-1}
(*) BOOL
A1904B4E  2001     		mov r0, #1 ; 1
A1904B50  F8DF 753C		ldr r7, [pc, #+1340] ; 0xA0003FC0
A1904B54  F8B7 8000		ldrh r8, [r7]
A1904B58  F360 0841		bfi r8, r0, #1, #1
A1904B5C  F8A7 8000		strh r8, [r7]

#203		
#204		
#205					(* IF is_working_A and Avto_A and not alarm_pumps.0 *)
#206					LD		alarm_pumps.0	{LNXT:64|-1|-1}
(*) UNDEF
A1904B60  F8DF 752C		ldr r7, [pc, #+1324] ; 0xA0003FC0
A1904B64  8838     		ldrh r0, [r7]
A1904B66  F3C0 0000		ubfx r0, r0, #0, #1

#207					NOT	{LNXT:64|-1|-1}
(*) BOOL
A1904B6A  2800     		cmp r0, #0
A1904B6C  BF08 2001		eqmov r0, #1
A1904B70  BF18 2000		nemov r0, #0

#208					AND(		is_working_A	{LNXT:64|-1|-1}
(*) BOOL
A1904B74  B082     		sub sp, sp, #8
A1904B76  F8CD 0000		str r0, [sp]
A1904B7A  F8DF 7550		ldr r7, [pc, #+1360] ; 0xA1A0002A
A1904B7E  7838     		ldrb r0, [r7]

#209					NOT	{LNXT:64|-1|-1}
(*) BOOL
A1904B80  2800     		cmp r0, #0
A1904B82  BF08 2001		eqmov r0, #1
A1904B86  BF18 2000		nemov r0, #0

#210					AND		Avto_A	{LNXT:64|-1|-1}
(*) BOOL
A1904B8A  F8DF 7554		ldr r7, [pc, #+1364] ; 0xA1A0002F
A1904B8E  783F     		ldrb r7, [r7]
A1904B90  4038     		and r0, r0, r7

#211					)	{LNXT:64|-1|-1}
(*) BOOL
A1904B92  4607     		mov r7, r0
A1904B94  F8DD 0000		ldr r0, [sp]
A1904B98  B002     		add sp, sp, #8
A1904B9A  4038     		and r0, r0, r7

#212					JMPCN	$label15	{LNXT:64|65|66}
(-) BOOL
A1904B9C  2800     		cmp r0, #0
A1904B9E  D006     		beq #12 ; 0xA1904BAE


#213		
#214					(* THEN *)
#215		
#216						(* Priority := 0; *)
#217						MOVE		0,Priority	{LNXT:65|74|-1}
(*) BOOL
A1904BA2  2000     		mov r0, #0 ; 0
A1904BA4  F8DF 74BC		ldr r7, [pc, #+1212] ; 0xA0003F0C
A1904BA8  8038     		strh r0, [r7]

#218						JMP		$label16	{LNXT:64|65|66}
(-) INT
A1904BAA  E025     		b #74 ; 0xA1904BF8


#219		$label15:
#220		
#221					(* ELSIF is_working_C and Avto_C and not alarm_pumps.2 *)
#222					LD		alarm_pumps.2	{LNXT:66|-1|-1}
(*) UNDEF
A1904BAE  F8DF 74E0		ldr r7, [pc, #+1248] ; 0xA0003FC0
A1904BB2  8838     		ldrh r0, [r7]
A1904BB4  F3C0 0080		ubfx r0, r0, #2, #1

#223					NOT	{LNXT:66|-1|-1}
(*) BOOL
A1904BB8  2800     		cmp r0, #0
A1904BBA  BF08 2001		eqmov r0, #1
A1904BBE  BF18 2000		nemov r0, #0

#224					AND(		is_working_C	{LNXT:66|-1|-1}
(*) BOOL
A1904BC2  B082     		sub sp, sp, #8
A1904BC4  F8CD 0000		str r0, [sp]
A1904BC8  F8DF 750C		ldr r7, [pc, #+1292] ; 0xA1A0002D
A1904BCC  7838     		ldrb r0, [r7]

#225					NOT	{LNXT:66|-1|-1}
(*) BOOL
A1904BCE  2800     		cmp r0, #0
A1904BD0  BF08 2001		eqmov r0, #1
A1904BD4  BF18 2000		nemov r0, #0

#226					AND		Avto_C	{LNXT:66|-1|-1}
(*) BOOL
A1904BD8  F8DF 7500		ldr r7, [pc, #+1280] ; 0xA1A0002E
A1904BDC  783F     		ldrb r7, [r7]
A1904BDE  4038     		and r0, r0, r7

#227					)	{LNXT:66|-1|-1}
(*) BOOL
A1904BE0  4607     		mov r7, r0
A1904BE2  F8DD 0000		ldr r0, [sp]
A1904BE6  B002     		add sp, sp, #8
A1904BE8  4038     		and r0, r0, r7

#228					JMPCN	$label16	{LNXT:66|67|74}
(-) BOOL
A1904BEA  2800     		cmp r0, #0
A1904BEC  D004     		beq #8 ; 0xA1904BF8


#229		
#230					(* THEN *)
#231		
#232						(* Priority := 2; *)
#233						MOVE		2,Priority	{LNXT:67|74|-1}
(*) BOOL
A1904BF0  2002     		mov r0, #2 ; 2
A1904BF2  F8DF 7470		ldr r7, [pc, #+1136] ; 0xA0003F0C
A1904BF6  8038     		strh r0, [r7]

#234		
#235		$label16:
#236					(* END_IF *)
#237		
#238		$label14:
#239				(* END_IF *)
#240		
#241		$label13:
#242			(* END_IF *)
#243		
#244			(* ErrorTimer_C_Start *)
#245			MOVE		Motor_C,ErrorTimer_C_Start.IN	{LNXT:74|-1|-1}
(*) INT
A1904BF8  F8DF 7520		ldr r7, [pc, #+1312] ; 0x100004AE
A1904BFC  7838     		ldrb r0, [r7]
A1904BFE  F8DF 74F8		ldr r7, [pc, #+1272] ; 0xA1A00048
A1904C02  7038     		strb r0, [r7]

#246			MOVE		TM_WAIT_Start,ErrorTimer_C_Start.PT	{LNXT:74|-1|-1}
(*) BOOL
A1904C04  F8DF 74C0		ldr r7, [pc, #+1216] ; 0xA1A00028
A1904C08  F9B7 0000		ldrsh r0, [r7]
A1904C0C  F8DF 74EC		ldr r7, [pc, #+1260] ; 0xA1A0004C
A1904C10  6038     		str r0, [r7]

#247			CAL		ErrorTimer_C_Start	{LNXT:74|75|-1}
(*) UDINT
A1904C12  E92D 0021		stmdb sp!, { r0, r5 }
A1904C16  F8DF 54DC		ldr r5, [pc, #+1244] ; 0xA1A00044
A1904C1A  F8DF 4490		ldr r4, [pc, #+1168] ; 0xA1904570
A1904C1E  F044 0401		orr r4, r4, #1
A1904C22  47A0     		blx r4
A1904C24  E8BD 0021		ldmia sp!, { r0, r5 }

#248		
#249		
#250			(* IF ErrorTimer_C_Start.Q *)
#251			LD		ErrorTimer_C_Start.Q	{LNXT:75|-1|-1}
(*) UNDEF
A1904C28  F8DF 74D4		ldr r7, [pc, #+1236] ; 0xA1A00050
A1904C2C  7838     		ldrb r0, [r7]

#252			JMPCN	$label17	{LNXT:75|76|98}
(-) BOOL
A1904C2E  2800     		cmp r0, #0
A1904C30  D064     		beq #200 ; 0xA1904CFC


#253		
#254			(* THEN *)
#255		
#256		
#257				(* IF Motor_C and not is_working_C *)
#258				LD		is_working_C	{LNXT:76|-1|-1}
(*) UNDEF
A1904C34  F8DF 74A0		ldr r7, [pc, #+1184] ; 0xA1A0002D
A1904C38  7838     		ldrb r0, [r7]

#259				NOT	{LNXT:76|-1|-1}
(*) BOOL
A1904C3A  2800     		cmp r0, #0
A1904C3C  BF08 2001		eqmov r0, #1
A1904C40  BF18 2000		nemov r0, #0

#260				AND		Motor_C	{LNXT:76|-1|-1}
(*) BOOL
A1904C44  F8DF 74D4		ldr r7, [pc, #+1236] ; 0x100004AE
A1904C48  783F     		ldrb r7, [r7]
A1904C4A  4038     		and r0, r0, r7

#261				JMPCN	$label18	{LNXT:76|79|98}
(-) BOOL
A1904C4C  2800     		cmp r0, #0
A1904C4E  D055     		beq #170 ; 0xA1904CFC


#262		
#263				(* THEN *)
#264		
#265					(* alarm_pumps.2:=true; *)
#266					MOVE		true,alarm_pumps.2	{LNXT:79|81|-1}
(*) BOOL
A1904C52  2001     		mov r0, #1 ; 1
A1904C54  F8DF 7438		ldr r7, [pc, #+1080] ; 0xA0003FC0
A1904C58  F8B7 8000		ldrh r8, [r7]
A1904C5C  F360 0882		bfi r8, r0, #2, #1
A1904C60  F8A7 8000		strh r8, [r7]

#267		
#268		
#269					(* IF is_working_A and Avto_A and not alarm_pumps.0 *)
#270					LD		alarm_pumps.0	{LNXT:81|-1|-1}
(*) UNDEF
A1904C64  F8DF 7428		ldr r7, [pc, #+1064] ; 0xA0003FC0
A1904C68  8838     		ldrh r0, [r7]
A1904C6A  F3C0 0000		ubfx r0, r0, #0, #1

#271					NOT	{LNXT:81|-1|-1}
(*) BOOL
A1904C6E  2800     		cmp r0, #0
A1904C70  BF08 2001		eqmov r0, #1
A1904C74  BF18 2000		nemov r0, #0

#272					AND(		is_working_A	{LNXT:81|-1|-1}
(*) BOOL
A1904C78  B082     		sub sp, sp, #8
A1904C7A  F8CD 0000		str r0, [sp]
A1904C7E  F8DF 744C		ldr r7, [pc, #+1100] ; 0xA1A0002A
A1904C82  7838     		ldrb r0, [r7]

#273					NOT	{LNXT:81|-1|-1}
(*) BOOL
A1904C84  2800     		cmp r0, #0
A1904C86  BF08 2001		eqmov r0, #1
A1904C8A  BF18 2000		nemov r0, #0

#274					AND		Avto_A	{LNXT:81|-1|-1}
(*) BOOL
A1904C8E  F8DF 7450		ldr r7, [pc, #+1104] ; 0xA1A0002F
A1904C92  783F     		ldrb r7, [r7]
A1904C94  4038     		and r0, r0, r7

#275					)	{LNXT:81|-1|-1}
(*) BOOL
A1904C96  4607     		mov r7, r0
A1904C98  F8DD 0000		ldr r0, [sp]
A1904C9C  B002     		add sp, sp, #8
A1904C9E  4038     		and r0, r0, r7

#276					JMPCN	$label19	{LNXT:81|82|83}
(-) BOOL
A1904CA0  2800     		cmp r0, #0
A1904CA2  D006     		beq #12 ; 0xA1904CB2


#277		
#278					(* THEN *)
#279		
#280						(* Priority := 0; *)
#281						MOVE		0,Priority	{LNXT:82|98|-1}
(*) BOOL
A1904CA6  2000     		mov r0, #0 ; 0
A1904CA8  F8DF 73B8		ldr r7, [pc, #+952] ; 0xA0003F0C
A1904CAC  8038     		strh r0, [r7]

#282						JMP		$label20	{LNXT:81|82|83}
(-) INT
A1904CAE  E025     		b #74 ; 0xA1904CFC


#283		$label19:
#284		
#285					(* ELSIF is_working_B and Avto_B and not alarm_pumps.1 *)
#286					LD		alarm_pumps.1	{LNXT:83|-1|-1}
(*) UNDEF
A1904CB2  F8DF 73DC		ldr r7, [pc, #+988] ; 0xA0003FC0
A1904CB6  8838     		ldrh r0, [r7]
A1904CB8  F3C0 0040		ubfx r0, r0, #1, #1

#287					NOT	{LNXT:83|-1|-1}
(*) BOOL
A1904CBC  2800     		cmp r0, #0
A1904CBE  BF08 2001		eqmov r0, #1
A1904CC2  BF18 2000		nemov r0, #0

#288					AND(		is_working_B	{LNXT:83|-1|-1}
(*) BOOL
A1904CC6  B082     		sub sp, sp, #8
A1904CC8  F8CD 0000		str r0, [sp]
A1904CCC  F8DF 7400		ldr r7, [pc, #+1024] ; 0xA1A0002B
A1904CD0  7838     		ldrb r0, [r7]

#289					NOT	{LNXT:83|-1|-1}
(*) BOOL
A1904CD2  2800     		cmp r0, #0
A1904CD4  BF08 2001		eqmov r0, #1
A1904CD8  BF18 2000		nemov r0, #0

#290					AND		Avto_B	{LNXT:83|-1|-1}
(*) BOOL
A1904CDC  F8DF 73F4		ldr r7, [pc, #+1012] ; 0xA1A0002C
A1904CE0  783F     		ldrb r7, [r7]
A1904CE2  4038     		and r0, r0, r7

#291					)	{LNXT:83|-1|-1}
(*) BOOL
A1904CE4  4607     		mov r7, r0
A1904CE6  F8DD 0000		ldr r0, [sp]
A1904CEA  B002     		add sp, sp, #8
A1904CEC  4038     		and r0, r0, r7

#292					JMPCN	$label20	{LNXT:83|84|98}
(-) BOOL
A1904CEE  2800     		cmp r0, #0
A1904CF0  D004     		beq #8 ; 0xA1904CFC


#293		
#294					(* THEN *)
#295		
#296						(* Priority := 1; *)
#297						MOVE		1,Priority	{LNXT:84|98|-1}
(*) BOOL
A1904CF4  2001     		mov r0, #1 ; 1
A1904CF6  F8DF 736C		ldr r7, [pc, #+876] ; 0xA0003F0C
A1904CFA  8038     		strh r0, [r7]

#298		
#299		$label20:
#300					(* END_IF *)
#301		
#302		$label18:
#303				(* END_IF *)
#304		
#305		$label17:
#306			(* END_IF *)
#307		
#308		
#309			(* IF FastRun <> FastRunMode *)
#310			LD		FastRun	{LNXT:98|-1|-1}
(*) UNDEF
A1904CFC  F8DF 736C		ldr r7, [pc, #+876] ; 0xA0003F12
A1904D00  7838     		ldrb r0, [r7]

#311			NE		FastRunMode	{LNXT:98|-1|-1}
(*) BOOL
A1904D02  F8DF 7400		ldr r7, [pc, #+1024] ; 0xA1A00058
A1904D06  783F     		ldrb r7, [r7]
A1904D08  42B8     		cmp r0, r7
A1904D0A  BF08 2000		eqmov r0, #0
A1904D0E  BF18 2001		nemov r0, #1

#312			JMPCN	$label21	{LNXT:98|99|105}
(-) BOOL
A1904D12  2800     		cmp r0, #0
A1904D14  D006     		beq #12 ; 0xA1904D24


#313		
#314			(* THEN *)
#315		
#316				(* FastRunMode := FastRun; *)
#317				MOVE		FastRun,FastRunMode	{LNXT:99|105|-1}
(*) BOOL
A1904D18  F8DF 7350		ldr r7, [pc, #+848] ; 0xA0003F12
A1904D1C  7838     		ldrb r0, [r7]
A1904D1E  F8DF 73E4		ldr r7, [pc, #+996] ; 0xA1A00058
A1904D22  7038     		strb r0, [r7]

#318		
#319		$label21:
#320			(* END_IF *)
#321		
#322		
#323			(* IF Motor_A and is_working_A *)
#324			LD		Motor_A	{LNXT:105|-1|-1}
(*) UNDEF
A1904D24  F8DF 73EC		ldr r7, [pc, #+1004] ; 0x100004AC
A1904D28  7838     		ldrb r0, [r7]

#325			AND		is_working_A	{LNXT:105|-1|-1}
(*) BOOL
A1904D2A  F8DF 73A0		ldr r7, [pc, #+928] ; 0xA1A0002A
A1904D2E  783F     		ldrb r7, [r7]
A1904D30  4038     		and r0, r0, r7

#326			JMPCN	$label22	{LNXT:105|106|108}
(-) BOOL
A1904D32  2800     		cmp r0, #0
A1904D34  D017     		beq #46 ; 0xA1904D66


#327		
#328			(* THEN *)
#329		
#330				(* state_motor_1 := 'On'; *)
#331				MOVE		'On',state_motor_1	{LNXT:106|111|-1}
(*) BOOL
A1904D38  F8DF 7358		ldr r7, [pc, #+856] ; 0xA19044E0
A1904D3C  4638     		mov r0, r7
A1904D3E  B082     		sub sp, sp, #8
A1904D40  F8CD 0000		str r0, [sp]
A1904D44  E92D 0006		stmdb sp!, { r1, r2 }
A1904D48  221F     		mov r2, #31 ; 31
A1904D4A  F8DF 1324		ldr r1, [pc, #+804] ; 0xA0003F20
A1904D4E  F8DF 43BC		ldr r4, [pc, #+956] ; 0x1133D
A1904D52  F044 0401		orr r4, r4, #1
A1904D56  47A0     		blx r4
A1904D58  E8BD 0006		ldmia sp!, { r1, r2 }
A1904D5C  F8DD 0000		ldr r0, [sp]
A1904D60  B002     		add sp, sp, #8

#332				JMP		$label23	{LNXT:105|106|108}
(-) STRING
A1904D62  E015     		b #42 ; 0xA1904D90


#333		$label22:
#334		
#335			(* ELSE *)
#336		
#337				(* state_motor_1 := 'Off'; *)
#338				MOVE		'Off',state_motor_1	{LNXT:108|111|-1}
(*) STRING
A1904D66  F8DF 7330		ldr r7, [pc, #+816] ; 0xA19044E4
A1904D6A  4638     		mov r0, r7
A1904D6C  B082     		sub sp, sp, #8
A1904D6E  F8CD 0000		str r0, [sp]
A1904D72  E92D 0006		stmdb sp!, { r1, r2 }
A1904D76  221F     		mov r2, #31 ; 31
A1904D78  F8DF 12F4		ldr r1, [pc, #+756] ; 0xA0003F20
A1904D7C  F8DF 438C		ldr r4, [pc, #+908] ; 0x1133D
A1904D80  F044 0401		orr r4, r4, #1
A1904D84  47A0     		blx r4
A1904D86  E8BD 0006		ldmia sp!, { r1, r2 }
A1904D8A  F8DD 0000		ldr r0, [sp]
A1904D8E  B002     		add sp, sp, #8

#339		
#340		$label23:
#341			(* END_IF *)
#342		
#343		
#344			(* IF Motor_B and is_working_B *)
#345			LD		Motor_B	{LNXT:111|-1|-1}
(*) UNDEF
A1904D90  F8DF 7384		ldr r7, [pc, #+900] ; 0x100004AD
A1904D94  7838     		ldrb r0, [r7]

#346			AND		is_working_B	{LNXT:111|-1|-1}
(*) BOOL
A1904D96  F8DF 7338		ldr r7, [pc, #+824] ; 0xA1A0002B
A1904D9A  783F     		ldrb r7, [r7]
A1904D9C  4038     		and r0, r0, r7

#347			JMPCN	$label24	{LNXT:111|112|114}
(-) BOOL
A1904D9E  2800     		cmp r0, #0
A1904DA0  D017     		beq #46 ; 0xA1904DD2


#348		
#349			(* THEN *)
#350		
#351				(* state_motor_2 := 'On'; *)
#352				MOVE		'On',state_motor_2	{LNXT:112|117|-1}
(*) BOOL
A1904DA4  F8DF 72EC		ldr r7, [pc, #+748] ; 0xA19044E0
A1904DA8  4638     		mov r0, r7
A1904DAA  B082     		sub sp, sp, #8
A1904DAC  F8CD 0000		str r0, [sp]
A1904DB0  E92D 0006		stmdb sp!, { r1, r2 }
A1904DB4  221F     		mov r2, #31 ; 31
A1904DB6  F8DF 12BC		ldr r1, [pc, #+700] ; 0xA0003F40
A1904DBA  F8DF 4350		ldr r4, [pc, #+848] ; 0x1133D
A1904DBE  F044 0401		orr r4, r4, #1
A1904DC2  47A0     		blx r4
A1904DC4  E8BD 0006		ldmia sp!, { r1, r2 }
A1904DC8  F8DD 0000		ldr r0, [sp]
A1904DCC  B002     		add sp, sp, #8

#353				JMP		$label25	{LNXT:111|112|114}
(-) STRING
A1904DCE  E015     		b #42 ; 0xA1904DFC


#354		$label24:
#355		
#356			(* ELSE *)
#357		
#358				(* state_motor_2 := 'Off'; *)
#359				MOVE		'Off',state_motor_2	{LNXT:114|117|-1}
(*) STRING
A1904DD2  F8DF 72C4		ldr r7, [pc, #+708] ; 0xA19044E4
A1904DD6  4638     		mov r0, r7
A1904DD8  B082     		sub sp, sp, #8
A1904DDA  F8CD 0000		str r0, [sp]
A1904DDE  E92D 0006		stmdb sp!, { r1, r2 }
A1904DE2  221F     		mov r2, #31 ; 31
A1904DE4  F8DF 128C		ldr r1, [pc, #+652] ; 0xA0003F40
A1904DE8  F8DF 4320		ldr r4, [pc, #+800] ; 0x1133D
A1904DEC  F044 0401		orr r4, r4, #1
A1904DF0  47A0     		blx r4
A1904DF2  E8BD 0006		ldmia sp!, { r1, r2 }
A1904DF6  F8DD 0000		ldr r0, [sp]
A1904DFA  B002     		add sp, sp, #8

#360		
#361		$label25:
#362			(* END_IF *)
#363		
#364		
#365			(* IF Motor_C and is_working_C *)
#366			LD		Motor_C	{LNXT:117|-1|-1}
(*) UNDEF
A1904DFC  F8DF 731C		ldr r7, [pc, #+796] ; 0x100004AE
A1904E00  7838     		ldrb r0, [r7]

#367			AND		is_working_C	{LNXT:117|-1|-1}
(*) BOOL
A1904E02  F8DF 72D4		ldr r7, [pc, #+724] ; 0xA1A0002D
A1904E06  783F     		ldrb r7, [r7]
A1904E08  4038     		and r0, r0, r7

#368			JMPCN	$label26	{LNXT:117|118|120}
(-) BOOL
A1904E0A  2800     		cmp r0, #0
A1904E0C  D017     		beq #46 ; 0xA1904E3E


#369		
#370			(* THEN *)
#371		
#372				(* state_motor_3 := 'On'; *)
#373				MOVE		'On',state_motor_3	{LNXT:118|124|-1}
(*) BOOL
A1904E10  F8DF 7280		ldr r7, [pc, #+640] ; 0xA19044E0
A1904E14  4638     		mov r0, r7
A1904E16  B082     		sub sp, sp, #8
A1904E18  F8CD 0000		str r0, [sp]
A1904E1C  E92D 0006		stmdb sp!, { r1, r2 }
A1904E20  221F     		mov r2, #31 ; 31
A1904E22  F8DF 1254		ldr r1, [pc, #+596] ; 0xA0003F60
A1904E26  F8DF 42E4		ldr r4, [pc, #+740] ; 0x1133D
A1904E2A  F044 0401		orr r4, r4, #1
A1904E2E  47A0     		blx r4
A1904E30  E8BD 0006		ldmia sp!, { r1, r2 }
A1904E34  F8DD 0000		ldr r0, [sp]
A1904E38  B002     		add sp, sp, #8

#374				JMP		$label27	{LNXT:117|118|120}
(-) STRING
A1904E3A  E015     		b #42 ; 0xA1904E68


#375		$label26:
#376		
#377			(* ELSE *)
#378		
#379				(* state_motor_3 := 'Off'; *)
#380				MOVE		'Off',state_motor_3	{LNXT:120|124|-1}
(*) STRING
A1904E3E  F8DF 7258		ldr r7, [pc, #+600] ; 0xA19044E4
A1904E42  4638     		mov r0, r7
A1904E44  B082     		sub sp, sp, #8
A1904E46  F8CD 0000		str r0, [sp]
A1904E4A  E92D 0006		stmdb sp!, { r1, r2 }
A1904E4E  221F     		mov r2, #31 ; 31
A1904E50  F8DF 1224		ldr r1, [pc, #+548] ; 0xA0003F60
A1904E54  F8DF 42B4		ldr r4, [pc, #+692] ; 0x1133D
A1904E58  F044 0401		orr r4, r4, #1
A1904E5C  47A0     		blx r4
A1904E5E  E8BD 0006		ldmia sp!, { r1, r2 }
A1904E62  F8DD 0000		ldr r0, [sp]
A1904E66  B002     		add sp, sp, #8

#381		
#382		$label27:
#383			(* END_IF *)
#384		
#385		
#386			(* IF Avto_A *)
#387			LD		Avto_A	{LNXT:124|-1|-1}
(*) UNDEF
A1904E68  F8DF 7274		ldr r7, [pc, #+628] ; 0xA1A0002F
A1904E6C  7838     		ldrb r0, [r7]

#388			JMPCN	$label28	{LNXT:124|125|127}
(-) BOOL
A1904E6E  2800     		cmp r0, #0
A1904E70  D017     		beq #46 ; 0xA1904EA2


#389		
#390			(* THEN *)
#391		
#392				(* auto_state_1 := 'Auto'; *)
#393				MOVE		'Auto',auto_state_1	{LNXT:125|130|-1}
(*) BOOL
A1904E74  F8DF 722C		ldr r7, [pc, #+556] ; 0xA19044F8
A1904E78  4638     		mov r0, r7
A1904E7A  B082     		sub sp, sp, #8
A1904E7C  F8CD 0000		str r0, [sp]
A1904E80  E92D 0006		stmdb sp!, { r1, r2 }
A1904E84  220A     		mov r2, #10 ; 10
A1904E86  F8DF 11F4		ldr r1, [pc, #+500] ; 0xA0003F80
A1904E8A  F8DF 4280		ldr r4, [pc, #+640] ; 0x1133D
A1904E8E  F044 0401		orr r4, r4, #1
A1904E92  47A0     		blx r4
A1904E94  E8BD 0006		ldmia sp!, { r1, r2 }
A1904E98  F8DD 0000		ldr r0, [sp]
A1904E9C  B002     		add sp, sp, #8

#394				JMP		$label29	{LNXT:124|125|127}
(-) STRING
A1904E9E  E015     		b #42 ; 0xA1904ECC


#395		$label28:
#396		
#397			(* ELSE *)
#398		
#399				(* auto_state_1 := 'Hand'; *)
#400				MOVE		'Hand',auto_state_1	{LNXT:127|130|-1}
(*) STRING
A1904EA2  F8DF 7204		ldr r7, [pc, #+516] ; 0xA1904500
A1904EA6  4638     		mov r0, r7
A1904EA8  B082     		sub sp, sp, #8
A1904EAA  F8CD 0000		str r0, [sp]
A1904EAE  E92D 0006		stmdb sp!, { r1, r2 }
A1904EB2  220A     		mov r2, #10 ; 10
A1904EB4  F8DF 11C4		ldr r1, [pc, #+452] ; 0xA0003F80
A1904EB8  F8DF 4250		ldr r4, [pc, #+592] ; 0x1133D
A1904EBC  F044 0401		orr r4, r4, #1
A1904EC0  47A0     		blx r4
A1904EC2  E8BD 0006		ldmia sp!, { r1, r2 }
A1904EC6  F8DD 0000		ldr r0, [sp]
A1904ECA  B002     		add sp, sp, #8

#401		
#402		$label29:
#403			(* END_IF *)
#404		
#405		
#406			(* IF Avto_B *)
#407			LD		Avto_B	{LNXT:130|-1|-1}
(*) UNDEF
A1904ECC  F8DF 7204		ldr r7, [pc, #+516] ; 0xA1A0002C
A1904ED0  7838     		ldrb r0, [r7]

#408			JMPCN	$label30	{LNXT:130|131|133}
(-) BOOL
A1904ED2  2800     		cmp r0, #0
A1904ED4  D017     		beq #46 ; 0xA1904F06


#409		
#410			(* THEN *)
#411		
#412				(* auto_state_2 := 'Auto'; *)
#413				MOVE		'Auto',auto_state_2	{LNXT:131|136|-1}
(*) BOOL
A1904ED8  F8DF 71C8		ldr r7, [pc, #+456] ; 0xA19044F8
A1904EDC  4638     		mov r0, r7
A1904EDE  B082     		sub sp, sp, #8
A1904EE0  F8CD 0000		str r0, [sp]
A1904EE4  E92D 0006		stmdb sp!, { r1, r2 }
A1904EE8  220A     		mov r2, #10 ; 10
A1904EEA  F8DF 1194		ldr r1, [pc, #+404] ; 0xA0003F8C
A1904EEE  F8DF 421C		ldr r4, [pc, #+540] ; 0x1133D
A1904EF2  F044 0401		orr r4, r4, #1
A1904EF6  47A0     		blx r4
A1904EF8  E8BD 0006		ldmia sp!, { r1, r2 }
A1904EFC  F8DD 0000		ldr r0, [sp]
A1904F00  B002     		add sp, sp, #8

#414				JMP		$label31	{LNXT:130|131|133}
(-) STRING
A1904F02  E015     		b #42 ; 0xA1904F30


#415		$label30:
#416		
#417			(* ELSE *)
#418		
#419				(* auto_state_2 := 'Hand'; *)
#420				MOVE		'Hand',auto_state_2	{LNXT:133|136|-1}
(*) STRING
A1904F06  F8DF 71A0		ldr r7, [pc, #+416] ; 0xA1904500
A1904F0A  4638     		mov r0, r7
A1904F0C  B082     		sub sp, sp, #8
A1904F0E  F8CD 0000		str r0, [sp]
A1904F12  E92D 0006		stmdb sp!, { r1, r2 }
A1904F16  220A     		mov r2, #10 ; 10
A1904F18  F8DF 1164		ldr r1, [pc, #+356] ; 0xA0003F8C
A1904F1C  F8DF 41EC		ldr r4, [pc, #+492] ; 0x1133D
A1904F20  F044 0401		orr r4, r4, #1
A1904F24  47A0     		blx r4
A1904F26  E8BD 0006		ldmia sp!, { r1, r2 }
A1904F2A  F8DD 0000		ldr r0, [sp]
A1904F2E  B002     		add sp, sp, #8

#421		
#422		$label31:
#423			(* END_IF *)
#424		
#425		
#426			(* IF Avto_C *)
#427			LD		Avto_C	{LNXT:136|-1|-1}
(*) UNDEF
A1904F30  F8DF 71A8		ldr r7, [pc, #+424] ; 0xA1A0002E
A1904F34  7838     		ldrb r0, [r7]

#428			JMPCN	$label32	{LNXT:136|137|139}
(-) BOOL
A1904F36  2800     		cmp r0, #0
A1904F38  D017     		beq #46 ; 0xA1904F6A


#429		
#430			(* THEN *)
#431		
#432				(* auto_state_3 := 'Auto'; *)
#433				MOVE		'Auto',auto_state_3	{LNXT:137|145|-1}
(*) BOOL
A1904F3C  F8DF 7164		ldr r7, [pc, #+356] ; 0xA19044F8
A1904F40  4638     		mov r0, r7
A1904F42  B082     		sub sp, sp, #8
A1904F44  F8CD 0000		str r0, [sp]
A1904F48  E92D 0006		stmdb sp!, { r1, r2 }
A1904F4C  220A     		mov r2, #10 ; 10
A1904F4E  F8DF 1134		ldr r1, [pc, #+308] ; 0xA0003F98
A1904F52  F8DF 41B8		ldr r4, [pc, #+440] ; 0x1133D
A1904F56  F044 0401		orr r4, r4, #1
A1904F5A  47A0     		blx r4
A1904F5C  E8BD 0006		ldmia sp!, { r1, r2 }
A1904F60  F8DD 0000		ldr r0, [sp]
A1904F64  B002     		add sp, sp, #8

#434				JMP		$label33	{LNXT:136|137|139}
(-) STRING
A1904F66  E015     		b #42 ; 0xA1904F94


#435		$label32:
#436		
#437			(* ELSE *)
#438		
#439				(* auto_state_3 := 'Hand'; *)
#440				MOVE		'Hand',auto_state_3	{LNXT:139|145|-1}
(*) STRING
A1904F6A  F8DF 713C		ldr r7, [pc, #+316] ; 0xA1904500
A1904F6E  4638     		mov r0, r7
A1904F70  B082     		sub sp, sp, #8
A1904F72  F8CD 0000		str r0, [sp]
A1904F76  E92D 0006		stmdb sp!, { r1, r2 }
A1904F7A  220A     		mov r2, #10 ; 10
A1904F7C  F8DF 1104		ldr r1, [pc, #+260] ; 0xA0003F98
A1904F80  F8DF 4188		ldr r4, [pc, #+392] ; 0x1133D
A1904F84  F044 0401		orr r4, r4, #1
A1904F88  47A0     		blx r4
A1904F8A  E8BD 0006		ldmia sp!, { r1, r2 }
A1904F8E  F8DD 0000		ldr r0, [sp]
A1904F92  B002     		add sp, sp, #8

#441		
#442		$label33:
#443			(* END_IF *)
#444		
#445		
#446			(* IF Tank_Level >= Level_1 and Rotation *)
#447			LD		Tank_Level	{LNXT:145|-1|-1}
(*) UNDEF
A1904F94  F8DF 711C		ldr r7, [pc, #+284] ; 0xA1A00012
A1904F98  F9B7 0000		ldrsh r0, [r7]

#448			GE		Level_1	{LNXT:145|-1|-1}
(*) INT
A1904F9C  F8DF 70B8		ldr r7, [pc, #+184] ; 0xA0003F06
A1904FA0  F9B7 7000		ldrsh r7, [r7]
A1904FA4  42B8     		cmp r0, r7
A1904FA6  BFB8 2000		ltmov r0, #0
A1904FAA  BFA8 2001		gemov r0, #1

#449			AND		Rotation	{LNXT:145|-1|-1}
(*) BOOL
A1904FAE  F8DF 70B8		ldr r7, [pc, #+184] ; 0xA0003F10
A1904FB2  783F     		ldrb r7, [r7]
A1904FB4  4038     		and r0, r0, r7

#450			JMPCN	$label34	{LNXT:145|148|203}
(-) BOOL
A1904FB6  2800     		cmp r0, #0
A1904FB8  F000 82C3		beq #1414 ; 0xA1905542


#451		
#452			(* THEN *)
#453		
#454		
#455				(* CASE Rotationnumber OF *)
#456		
#457				(* 0: *)
#458				LD		Rotationnumber	{LNXT:148|-1|-1}
(*) UNDEF
A1904FBC  F8DF 7148		ldr r7, [pc, #+328] ; 0xA1A0005A
A1904FC0  F9B7 0000		ldrsh r0, [r7]

#459				EQ		0	{LNXT:148|-1|-1}
(*) INT
A1904FC4  2800     		cmp r0, #0
A1904FC6  BF18 2000		nemov r0, #0
A1904FCA  BF08 2001		eqmov r0, #1

#460				JMPC		$label36	{LNXT:148|149|165}
(-) BOOL
A1904FCE  2800     		cmp r0, #0
A1904FD0  D11A     		bne #52 ; 0xA1905008


#461		
#462				(* 1: *)
#463				LD		Rotationnumber	{LNXT:165|-1|-1}
(*) UNDEF
A1904FD4  F8DF 7130		ldr r7, [pc, #+304] ; 0xA1A0005A
A1904FD8  F9B7 0000		ldrsh r0, [r7]

#464				EQ		1	{LNXT:165|-1|-1}
(*) INT
A1904FDC  2801     		cmp r0, #1
A1904FDE  BF18 2000		nemov r0, #0
A1904FE2  BF08 2001		eqmov r0, #1

#465				JMPC		$label37	{LNXT:165|166|182}
(-) BOOL
A1904FE6  2800     		cmp r0, #0
A1904FE8  F040 8139		bne #626 ; 0xA190525E


#466		
#467				(* 2: *)
#468				LD		Rotationnumber	{LNXT:182|-1|-1}
(*) UNDEF
A1904FEC  F8DF 7118		ldr r7, [pc, #+280] ; 0xA1A0005A
A1904FF0  F9B7 0000		ldrsh r0, [r7]

#469				EQ		2	{LNXT:182|-1|-1}
(*) INT
A1904FF4  2802     		cmp r0, #2
A1904FF6  BF18 2000		nemov r0, #0
A1904FFA  BF08 2001		eqmov r0, #1

#470				JMPC		$label38	{LNXT:182|183|203}
(-) BOOL
A1904FFE  2800     		cmp r0, #0
A1905000  F040 81E7		bne #974 ; 0xA19053D2


#471				JMP		$label35	{LNXT:182|183|203}
(-) BOOL
A1905004  E29D     		b #1338 ; 0xA1905542


#472		
#473				(* Istruzioni di ciascun CASE: *)
#474		
#475		$label36:
#476		
#477					(* IF Avto_A and not alarm_pumps.0 AND NOT Motor_B AND NOT Motor_C *)
#478					LD		Motor_C	{LNXT:149|-1|-1}
(*) UNDEF
A1905008  F8DF 7110		ldr r7, [pc, #+272] ; 0x100004AE
A190500C  7838     		ldrb r0, [r7]

#479					NOT	{LNXT:149|-1|-1}
(*) BOOL
A190500E  2800     		cmp r0, #0
A1905010  BF08 2001		eqmov r0, #1
A1905014  BF18 2000		nemov r0, #0

#480					AND(		Motor_B	{LNXT:149|-1|-1}
(*) BOOL
A1905018  B082     		sub sp, sp, #8
A190501A  F8CD 0000		str r0, [sp]
A190501E  F8DF 70F8		ldr r7, [pc, #+248] ; 0x100004AD
A1905022  7838     		ldrb r0, [r7]

#481					NOT	{LNXT:149|-1|-1}
(*) BOOL
A1905024  2800     		cmp r0, #0
A1905026  BF08 2001		eqmov r0, #1
A190502A  BF18 2000		nemov r0, #0

#482					AND(		alarm_pumps.0	{LNXT:149|-1|-1}
(*) BOOL
A190502E  B082     		sub sp, sp, #8
A1905030  F8CD 0000		str r0, [sp]
A1905034  F8DF 7058		ldr r7, [pc, #+88] ; 0xA0003FC0
A1905038  8838     		ldrh r0, [r7]
A190503A  F3C0 0000		ubfx r0, r0, #0, #1

A190503E  E06F     		b #222

A1905040  FFFFFFFF		; 0xA00017F0
A1905044  FFFFFFFF		; 0xA00017F2
A1905048  FFFFFFFF		; 0xA00017F4
A190504C  FFFFFFFF		; 0xA00017F6
A1905050  FFFFFFFF		; 0xA00017F8
A1905054  FFFFFFFF		; 0xA0003F04
A1905058  FFFFFFFF		; 0xA0003F06
A190505C  FFFFFFFF		; 0xA0003F08
A1905060  FFFFFFFF		; 0xA0003F0A
A1905064  FFFFFFFF		; 0xA0003F0C
A1905068  FFFFFFFF		; 0xA0003F10
A190506C  FFFFFFFF		; 0xA0003F12
A1905070  FFFFFFFF		; 0xA0003F20
A1905074  FFFFFFFF		; 0xA0003F40
A1905078  FFFFFFFF		; 0xA0003F60
A190507C  FFFFFFFF		; 0xA0003F80
A1905080  FFFFFFFF		; 0xA0003F8C
A1905084  FFFFFFFF		; 0xA0003F98
A1905088  FFFFFFFF		; 0xA0003FA4
A190508C  FFFFFFFF		; 0xA0003FBA
A1905090  FFFFFFFF		; 0xA0003FC0
A1905094  A19044E0		; 0xA19044E0
A1905098  A19044E4		; 0xA19044E4
A190509C  A19044EC		; 0xA19044EC
A19050A0  A19044F4		; 0xA19044F4
A19050A4  A19044F8		; 0xA19044F8
A19050A8  A1904500		; 0xA1904500
A19050AC  A1904570		; 0xA1904570
A19050B0  A1A00011		; 0xA1A00011
A19050B4  A1A00012		; 0xA1A00012
A19050B8  A1A00014		; 0xA1A00014
A19050BC  A1A00018		; 0xA1A00018
A19050C0  A1A0001C		; 0xA1A0001C
A19050C4  A1A00020		; 0xA1A00020
A19050C8  A1A00028		; 0xA1A00028
A19050CC  A1A0002A		; 0xA1A0002A
A19050D0  A1A0002B		; 0xA1A0002B
A19050D4  A1A0002C		; 0xA1A0002C
A19050D8  A1A0002D		; 0xA1A0002D
A19050DC  A1A0002E		; 0xA1A0002E
A19050E0  A1A0002F		; 0xA1A0002F
A19050E4  A1A00030		; 0xA1A00030
A19050E8  A1A00034		; 0xA1A00034
A19050EC  A1A00038		; 0xA1A00038
A19050F0  A1A0003C		; 0xA1A0003C
A19050F4  A1A00044		; 0xA1A00044
A19050F8  A1A00048		; 0xA1A00048
A19050FC  A1A0004C		; 0xA1A0004C
A1905100  A1A00050		; 0xA1A00050
A1905104  A1A00058		; 0xA1A00058
A1905108  A1A0005A		; 0xA1A0005A
A190510C  FFFFFFFF		; 0x0001133D
A1905110  FFFFFFFF		; 0x10000436
A1905114  FFFFFFFF		; 0x100004AC
A1905118  FFFFFFFF		; 0x100004AD
A190511C  FFFFFFFF		; 0x100004AE

#483					NOT	{LNXT:149|-1|-1}
(*) BOOL
A1905120  2800     		cmp r0, #0
A1905122  BF08 2001		eqmov r0, #1
A1905126  BF18 2000		nemov r0, #0

#484					AND		Avto_A	{LNXT:149|-1|-1}
(*) BOOL
A190512A  F85F 704C		ldr r7, [pc, #-76] ; 0xA1A0002F
A190512E  783F     		ldrb r7, [r7]
A1905130  4038     		and r0, r0, r7

#485					)	{LNXT:149|-1|-1}
(*) BOOL
A1905132  4607     		mov r7, r0
A1905134  F8DD 0000		ldr r0, [sp]
A1905138  B002     		add sp, sp, #8
A190513A  4038     		and r0, r0, r7

#486					)	{LNXT:149|-1|-1}
(*) BOOL
A190513C  4607     		mov r7, r0
A190513E  F8DD 0000		ldr r0, [sp]
A1905142  B002     		add sp, sp, #8
A1905144  4038     		and r0, r0, r7

#487					JMPCN	$label39	{LNXT:149|150|153}
(-) BOOL
A1905146  2800     		cmp r0, #0
A1905148  D014     		beq #40 ; 0xA1905174


#488		
#489					(* THEN *)
#490		
#491						(* Motor_A := TRUE; *)
#492						MOVE		TRUE,Motor_A	{LNXT:150|151|-1}
(*) BOOL
A190514C  2001     		mov r0, #1 ; 1
A190514E  F85F 703C		ldr r7, [pc, #-60] ; 0x100004AC
A1905152  7038     		strb r0, [r7]

#493		
#494						(* Rotationnumber := (Rotationnumber + 1) MOD 3; *)
#495						LD		Rotationnumber	{LNXT:151|203|-1}
(*) UNDEF
A1905154  F85F 7050		ldr r7, [pc, #-80] ; 0xA1A0005A
A1905158  F9B7 0000		ldrsh r0, [r7]

#496						ADD		1	{LNXT:151|203|-1}
(-) INT
A190515C  1C40     		add r0, r0, #1

#497						MOD		3	{LNXT:151|203|-1}
(*) INT
A190515E  2103     		mov r1, #3 ; 3
A1905160  F8DF 47C0		ldr r4, [pc, #+1984] ; 0xA1904520
A1905164  F044 0401		orr r4, r4, #1
A1905168  47A0     		blx r4

#498						ST		Rotationnumber	{LNXT:151|203|-1}
(*) INT
A190516A  F85F 7064		ldr r7, [pc, #-100] ; 0xA1A0005A
A190516E  8038     		strh r0, [r7]

#499						JMP		$label40	{LNXT:149|150|153}
(-) INT
A1905170  E073     		b #230 ; 0xA190525A


#500		$label39:
#501		
#502					(* ELSIF Avto_A AND NOT Motor_B AND NOT Motor_C *)
#503					LD		Motor_C	{LNXT:153|-1|-1}
(*) UNDEF
A1905174  F85F 705C		ldr r7, [pc, #-92] ; 0x100004AE
A1905178  7838     		ldrb r0, [r7]

#504					NOT	{LNXT:153|-1|-1}
(*) BOOL
A190517A  2800     		cmp r0, #0
A190517C  BF08 2001		eqmov r0, #1
A1905180  BF18 2000		nemov r0, #0

#505					AND(		Motor_B	{LNXT:153|-1|-1}
(*) BOOL
A1905184  B082     		sub sp, sp, #8
A1905186  F8CD 0000		str r0, [sp]
A190518A  F85F 7074		ldr r7, [pc, #-116] ; 0x100004AD
A190518E  7838     		ldrb r0, [r7]

#506					NOT	{LNXT:153|-1|-1}
(*) BOOL
A1905190  2800     		cmp r0, #0
A1905192  BF08 2001		eqmov r0, #1
A1905196  BF18 2000		nemov r0, #0

#507					AND(		Avto_A	{LNXT:153|-1|-1}
(*) BOOL
A190519A  B082     		sub sp, sp, #8
A190519C  F8CD 0000		str r0, [sp]
A19051A0  F85F 70C4		ldr r7, [pc, #-196] ; 0xA1A0002F
A19051A4  7838     		ldrb r0, [r7]

#508					NOT	{LNXT:153|-1|-1}
(*) BOOL
A19051A6  2800     		cmp r0, #0
A19051A8  BF08 2001		eqmov r0, #1
A19051AC  BF18 2000		nemov r0, #0

#509					)	{LNXT:153|-1|-1}
(*) BOOL
A19051B0  4607     		mov r7, r0
A19051B2  F8DD 0000		ldr r0, [sp]
A19051B6  B002     		add sp, sp, #8
A19051B8  4038     		and r0, r0, r7

#510					)	{LNXT:153|-1|-1}
(*) BOOL
A19051BA  4607     		mov r7, r0
A19051BC  F8DD 0000		ldr r0, [sp]
A19051C0  B002     		add sp, sp, #8
A19051C2  4038     		and r0, r0, r7

#511					JMPCN	$label40	{LNXT:153|155|203}
(-) BOOL
A19051C4  2800     		cmp r0, #0
A19051C6  D048     		beq #144 ; 0xA190525A


#512		
#513					(* THEN *)
#514		
#515		
#516						(* IF Avto_B and not alarm_pumps.1 *)
#517						LD		alarm_pumps.1	{LNXT:155|-1|-1}
(*) UNDEF
A19051CA  F85F 713C		ldr r7, [pc, #-316] ; 0xA0003FC0
A19051CE  8838     		ldrh r0, [r7]
A19051D0  F3C0 0040		ubfx r0, r0, #1, #1

#518						NOT	{LNXT:155|-1|-1}
(*) BOOL
A19051D4  2800     		cmp r0, #0
A19051D6  BF08 2001		eqmov r0, #1
A19051DA  BF18 2000		nemov r0, #0

#519						AND		Avto_B	{LNXT:155|-1|-1}
(*) BOOL
A19051DE  F85F 710C		ldr r7, [pc, #-268] ; 0xA1A0002C
A19051E2  783F     		ldrb r7, [r7]
A19051E4  4038     		and r0, r0, r7

#520						JMPCN	$label41	{LNXT:155|156|159}
(-) BOOL
A19051E6  2800     		cmp r0, #0
A19051E8  D014     		beq #40 ; 0xA1905214


#521		
#522						(* THEN *)
#523		
#524							(* Motor_B := TRUE; *)
#525							MOVE		TRUE,Motor_B	{LNXT:156|157|-1}
(*) BOOL
A19051EC  2001     		mov r0, #1 ; 1
A19051EE  F85F 70D8		ldr r7, [pc, #-216] ; 0x100004AD
A19051F2  7038     		strb r0, [r7]

#526		
#527							(* Rotationnumber := (Rotationnumber + 1) MOD 3; *)
#528							LD		Rotationnumber	{LNXT:157|203|-1}
(*) UNDEF
A19051F4  F85F 70F0		ldr r7, [pc, #-240] ; 0xA1A0005A
A19051F8  F9B7 0000		ldrsh r0, [r7]

#529							ADD		1	{LNXT:157|203|-1}
(-) INT
A19051FC  1C40     		add r0, r0, #1

#530							MOD		3	{LNXT:157|203|-1}
(*) INT
A19051FE  2103     		mov r1, #3 ; 3
A1905200  F8DF 4720		ldr r4, [pc, #+1824] ; 0xA1904520
A1905204  F044 0401		orr r4, r4, #1
A1905208  47A0     		blx r4

#531							ST		Rotationnumber	{LNXT:157|203|-1}
(*) INT
A190520A  F85F 7104		ldr r7, [pc, #-260] ; 0xA1A0005A
A190520E  8038     		strh r0, [r7]

#532							JMP		$label42	{LNXT:155|156|159}
(-) INT
A1905210  E023     		b #70 ; 0xA190525A


#533		$label41:
#534		
#535						(* ELSIF Avto_C and not alarm_pumps.2 *)
#536						LD		alarm_pumps.2	{LNXT:159|-1|-1}
(*) UNDEF
A1905214  F85F 7188		ldr r7, [pc, #-392] ; 0xA0003FC0
A1905218  8838     		ldrh r0, [r7]
A190521A  F3C0 0080		ubfx r0, r0, #2, #1

#537						NOT	{LNXT:159|-1|-1}
(*) BOOL
A190521E  2800     		cmp r0, #0
A1905220  BF08 2001		eqmov r0, #1
A1905224  BF18 2000		nemov r0, #0

#538						AND		Avto_C	{LNXT:159|-1|-1}
(*) BOOL
A1905228  F85F 7150		ldr r7, [pc, #-336] ; 0xA1A0002E
A190522C  783F     		ldrb r7, [r7]
A190522E  4038     		and r0, r0, r7

#539						JMPCN	$label42	{LNXT:159|160|203}
(-) BOOL
A1905230  2800     		cmp r0, #0
A1905232  D012     		beq #36 ; 0xA190525A


#540		
#541						(* THEN *)
#542		
#543							(* Motor_C := TRUE; *)
#544							MOVE		TRUE,Motor_C	{LNXT:160|161|-1}
(*) BOOL
A1905236  2001     		mov r0, #1 ; 1
A1905238  F85F 7120		ldr r7, [pc, #-288] ; 0x100004AE
A190523C  7038     		strb r0, [r7]

#545		
#546							(* Rotationnumber := (Rotationnumber + 2) MOD 3; *)
#547							LD		Rotationnumber	{LNXT:161|203|-1}
(*) UNDEF
A190523E  F85F 7138		ldr r7, [pc, #-312] ; 0xA1A0005A
A1905242  F9B7 0000		ldrsh r0, [r7]

#548							ADD		2	{LNXT:161|203|-1}
(-) INT
A1905246  1C80     		add r0, r0, #2

#549							MOD		3	{LNXT:161|203|-1}
(*) INT
A1905248  2103     		mov r1, #3 ; 3
A190524A  F8DF 46D8		ldr r4, [pc, #+1752] ; 0xA1904520
A190524E  F044 0401		orr r4, r4, #1
A1905252  47A0     		blx r4

#550							ST		Rotationnumber	{LNXT:161|203|-1}
(*) INT
A1905254  F85F 7150		ldr r7, [pc, #-336] ; 0xA1A0005A
A1905258  8038     		strh r0, [r7]

#551		
#552		$label42:
#553						(* END_IF *)
#554		
#555		$label40:
#556					(* END_IF *)
#557					JMP		$label35	{LNXT:1|203|-1}
(-) INT
A190525A  E172     		b #740 ; 0xA1905542


#558		
#559		$label37:
#560		
#561					(* IF Avto_B and not alarm_pumps.1 AND NOT Motor_A AND NOT Motor_C *)
#562					LD		Motor_C	{LNXT:166|-1|-1}
(*) UNDEF
A190525E  F85F 7144		ldr r7, [pc, #-324] ; 0x100004AE
A1905262  7838     		ldrb r0, [r7]

#563					NOT	{LNXT:166|-1|-1}
(*) BOOL
A1905264  2800     		cmp r0, #0
A1905266  BF08 2001		eqmov r0, #1
A190526A  BF18 2000		nemov r0, #0

#564					AND(		Motor_A	{LNXT:166|-1|-1}
(*) BOOL
A190526E  B082     		sub sp, sp, #8
A1905270  F8CD 0000		str r0, [sp]
A1905274  F85F 7164		ldr r7, [pc, #-356] ; 0x100004AC
A1905278  7838     		ldrb r0, [r7]

#565					NOT	{LNXT:166|-1|-1}
(*) BOOL
A190527A  2800     		cmp r0, #0
A190527C  BF08 2001		eqmov r0, #1
A1905280  BF18 2000		nemov r0, #0

#566					AND(		alarm_pumps.1	{LNXT:166|-1|-1}
(*) BOOL
A1905284  B082     		sub sp, sp, #8
A1905286  F8CD 0000		str r0, [sp]
A190528A  F85F 71FC		ldr r7, [pc, #-508] ; 0xA0003FC0
A190528E  8838     		ldrh r0, [r7]
A1905290  F3C0 0040		ubfx r0, r0, #1, #1

#567					NOT	{LNXT:166|-1|-1}
(*) BOOL
A1905294  2800     		cmp r0, #0
A1905296  BF08 2001		eqmov r0, #1
A190529A  BF18 2000		nemov r0, #0

#568					AND		Avto_B	{LNXT:166|-1|-1}
(*) BOOL
A190529E  F85F 71CC		ldr r7, [pc, #-460] ; 0xA1A0002C
A19052A2  783F     		ldrb r7, [r7]
A19052A4  4038     		and r0, r0, r7

#569					)	{LNXT:166|-1|-1}
(*) BOOL
A19052A6  4607     		mov r7, r0
A19052A8  F8DD 0000		ldr r0, [sp]
A19052AC  B002     		add sp, sp, #8
A19052AE  4038     		and r0, r0, r7

#570					)	{LNXT:166|-1|-1}
(*) BOOL
A19052B0  4607     		mov r7, r0
A19052B2  F8DD 0000		ldr r0, [sp]
A19052B6  B002     		add sp, sp, #8
A19052B8  4038     		and r0, r0, r7

#571					JMPCN	$label43	{LNXT:166|167|170}
(-) BOOL
A19052BA  2800     		cmp r0, #0
A19052BC  D014     		beq #40 ; 0xA19052E8


#572		
#573					(* THEN *)
#574		
#575						(* Motor_B := TRUE; *)
#576						MOVE		TRUE,Motor_B	{LNXT:167|168|-1}
(*) BOOL
A19052C0  2001     		mov r0, #1 ; 1
A19052C2  F85F 71AC		ldr r7, [pc, #-428] ; 0x100004AD
A19052C6  7038     		strb r0, [r7]

#577		
#578						(* Rotationnumber := (Rotationnumber + 1) MOD 3; *)
#579						LD		Rotationnumber	{LNXT:168|203|-1}
(*) UNDEF
A19052C8  F85F 71C4		ldr r7, [pc, #-452] ; 0xA1A0005A
A19052CC  F9B7 0000		ldrsh r0, [r7]

#580						ADD		1	{LNXT:168|203|-1}
(-) INT
A19052D0  1C40     		add r0, r0, #1

#581						MOD		3	{LNXT:168|203|-1}
(*) INT
A19052D2  2103     		mov r1, #3 ; 3
A19052D4  F8DF 464C		ldr r4, [pc, #+1612] ; 0xA1904520
A19052D8  F044 0401		orr r4, r4, #1
A19052DC  47A0     		blx r4

#582						ST		Rotationnumber	{LNXT:168|203|-1}
(*) INT
A19052DE  F85F 71D8		ldr r7, [pc, #-472] ; 0xA1A0005A
A19052E2  8038     		strh r0, [r7]

#583						JMP		$label44	{LNXT:166|167|170}
(-) INT
A19052E4  E073     		b #230 ; 0xA19053CE


#584		$label43:
#585		
#586					(* ELSIF Avto_B AND NOT Motor_A AND NOT Motor_C *)
#587					LD		Motor_C	{LNXT:170|-1|-1}
(*) UNDEF
A19052E8  F85F 71D0		ldr r7, [pc, #-464] ; 0x100004AE
A19052EC  7838     		ldrb r0, [r7]

#588					NOT	{LNXT:170|-1|-1}
(*) BOOL
A19052EE  2800     		cmp r0, #0
A19052F0  BF08 2001		eqmov r0, #1
A19052F4  BF18 2000		nemov r0, #0

#589					AND(		Motor_A	{LNXT:170|-1|-1}
(*) BOOL
A19052F8  B082     		sub sp, sp, #8
A19052FA  F8CD 0000		str r0, [sp]
A19052FE  F85F 71EC		ldr r7, [pc, #-492] ; 0x100004AC
A1905302  7838     		ldrb r0, [r7]

#590					NOT	{LNXT:170|-1|-1}
(*) BOOL
A1905304  2800     		cmp r0, #0
A1905306  BF08 2001		eqmov r0, #1
A190530A  BF18 2000		nemov r0, #0

#591					AND(		Avto_B	{LNXT:170|-1|-1}
(*) BOOL
A190530E  B082     		sub sp, sp, #8
A1905310  F8CD 0000		str r0, [sp]
A1905314  F85F 7244		ldr r7, [pc, #-580] ; 0xA1A0002C
A1905318  7838     		ldrb r0, [r7]

#592					NOT	{LNXT:170|-1|-1}
(*) BOOL
A190531A  2800     		cmp r0, #0
A190531C  BF08 2001		eqmov r0, #1
A1905320  BF18 2000		nemov r0, #0

#593					)	{LNXT:170|-1|-1}
(*) BOOL
A1905324  4607     		mov r7, r0
A1905326  F8DD 0000		ldr r0, [sp]
A190532A  B002     		add sp, sp, #8
A190532C  4038     		and r0, r0, r7

#594					)	{LNXT:170|-1|-1}
(*) BOOL
A190532E  4607     		mov r7, r0
A1905330  F8DD 0000		ldr r0, [sp]
A1905334  B002     		add sp, sp, #8
A1905336  4038     		and r0, r0, r7

#595					JMPCN	$label44	{LNXT:170|172|203}
(-) BOOL
A1905338  2800     		cmp r0, #0
A190533A  D048     		beq #144 ; 0xA19053CE


#596		
#597					(* THEN *)
#598		
#599		
#600						(* IF Avto_A and not alarm_pumps.0 *)
#601						LD		alarm_pumps.0	{LNXT:172|-1|-1}
(*) UNDEF
A190533E  F85F 72B0		ldr r7, [pc, #-688] ; 0xA0003FC0
A1905342  8838     		ldrh r0, [r7]
A1905344  F3C0 0000		ubfx r0, r0, #0, #1

#602						NOT	{LNXT:172|-1|-1}
(*) BOOL
A1905348  2800     		cmp r0, #0
A190534A  BF08 2001		eqmov r0, #1
A190534E  BF18 2000		nemov r0, #0

#603						AND		Avto_A	{LNXT:172|-1|-1}
(*) BOOL
A1905352  F85F 7274		ldr r7, [pc, #-628] ; 0xA1A0002F
A1905356  783F     		ldrb r7, [r7]
A1905358  4038     		and r0, r0, r7

#604						JMPCN	$label45	{LNXT:172|173|176}
(-) BOOL
A190535A  2800     		cmp r0, #0
A190535C  D014     		beq #40 ; 0xA1905388


#605		
#606						(* THEN *)
#607		
#608							(* Motor_A := TRUE; *)
#609							MOVE		TRUE,Motor_A	{LNXT:173|174|-1}
(*) BOOL
A1905360  2001     		mov r0, #1 ; 1
A1905362  F85F 7250		ldr r7, [pc, #-592] ; 0x100004AC
A1905366  7038     		strb r0, [r7]

#610		
#611							(* Rotationnumber := (Rotationnumber - 1) MOD 3; *)
#612							LD		Rotationnumber	{LNXT:174|203|-1}
(*) UNDEF
A1905368  F85F 7264		ldr r7, [pc, #-612] ; 0xA1A0005A
A190536C  F9B7 0000		ldrsh r0, [r7]

#613							SUB		1	{LNXT:174|203|-1}
(-) INT
A1905370  1E40     		sub r0, r0, #1

#614							MOD		3	{LNXT:174|203|-1}
(*) INT
A1905372  2103     		mov r1, #3 ; 3
A1905374  F8DF 45AC		ldr r4, [pc, #+1452] ; 0xA1904520
A1905378  F044 0401		orr r4, r4, #1
A190537C  47A0     		blx r4

#615							ST		Rotationnumber	{LNXT:174|203|-1}
(*) INT
A190537E  F85F 7278		ldr r7, [pc, #-632] ; 0xA1A0005A
A1905382  8038     		strh r0, [r7]

#616							JMP		$label46	{LNXT:172|173|176}
(-) INT
A1905384  E023     		b #70 ; 0xA19053CE


#617		$label45:
#618		
#619						(* ELSIF Avto_C and not alarm_pumps.2 *)
#620						LD		alarm_pumps.2	{LNXT:176|-1|-1}
(*) UNDEF
A1905388  F85F 72FC		ldr r7, [pc, #-764] ; 0xA0003FC0
A190538C  8838     		ldrh r0, [r7]
A190538E  F3C0 0080		ubfx r0, r0, #2, #1

#621						NOT	{LNXT:176|-1|-1}
(*) BOOL
A1905392  2800     		cmp r0, #0
A1905394  BF08 2001		eqmov r0, #1
A1905398  BF18 2000		nemov r0, #0

#622						AND		Avto_C	{LNXT:176|-1|-1}
(*) BOOL
A190539C  F85F 72C4		ldr r7, [pc, #-708] ; 0xA1A0002E
A19053A0  783F     		ldrb r7, [r7]
A19053A2  4038     		and r0, r0, r7

#623						JMPCN	$label46	{LNXT:176|177|203}
(-) BOOL
A19053A4  2800     		cmp r0, #0
A19053A6  D012     		beq #36 ; 0xA19053CE


#624		
#625						(* THEN *)
#626		
#627							(* Motor_C := TRUE; *)
#628							MOVE		TRUE,Motor_C	{LNXT:177|178|-1}
(*) BOOL
A19053AA  2001     		mov r0, #1 ; 1
A19053AC  F85F 7294		ldr r7, [pc, #-660] ; 0x100004AE
A19053B0  7038     		strb r0, [r7]

#629		
#630							(* Rotationnumber := (Rotationnumber + 1) MOD 3; *)
#631							LD		Rotationnumber	{LNXT:178|203|-1}
(*) UNDEF
A19053B2  F85F 72AC		ldr r7, [pc, #-684] ; 0xA1A0005A
A19053B6  F9B7 0000		ldrsh r0, [r7]

#632							ADD		1	{LNXT:178|203|-1}
(-) INT
A19053BA  1C40     		add r0, r0, #1

#633							MOD		3	{LNXT:178|203|-1}
(*) INT
A19053BC  2103     		mov r1, #3 ; 3
A19053BE  F8DF 4564		ldr r4, [pc, #+1380] ; 0xA1904520
A19053C2  F044 0401		orr r4, r4, #1
A19053C6  47A0     		blx r4

#634							ST		Rotationnumber	{LNXT:178|203|-1}
(*) INT
A19053C8  F85F 72C4		ldr r7, [pc, #-708] ; 0xA1A0005A
A19053CC  8038     		strh r0, [r7]

#635		
#636		$label46:
#637						(* END_IF *)
#638		
#639		$label44:
#640					(* END_IF *)
#641					JMP		$label35	{LNXT:1|203|-1}
(-) INT
A19053CE  E0B8     		b #368 ; 0xA1905542


#642		
#643		$label38:
#644		
#645					(* IF Avto_C and not alarm_pumps.2 AND NOT Motor_A AND NOT Motor_B *)
#646					LD		Motor_B	{LNXT:183|-1|-1}
(*) UNDEF
A19053D2  F85F 72BC		ldr r7, [pc, #-700] ; 0x100004AD
A19053D6  7838     		ldrb r0, [r7]

#647					NOT	{LNXT:183|-1|-1}
(*) BOOL
A19053D8  2800     		cmp r0, #0
A19053DA  BF08 2001		eqmov r0, #1
A19053DE  BF18 2000		nemov r0, #0

#648					AND(		Motor_A	{LNXT:183|-1|-1}
(*) BOOL
A19053E2  B082     		sub sp, sp, #8
A19053E4  F8CD 0000		str r0, [sp]
A19053E8  F85F 72D8		ldr r7, [pc, #-728] ; 0x100004AC
A19053EC  7838     		ldrb r0, [r7]

#649					NOT	{LNXT:183|-1|-1}
(*) BOOL
A19053EE  2800     		cmp r0, #0
A19053F0  BF08 2001		eqmov r0, #1
A19053F4  BF18 2000		nemov r0, #0

#650					AND(		alarm_pumps.2	{LNXT:183|-1|-1}
(*) BOOL
A19053F8  B082     		sub sp, sp, #8
A19053FA  F8CD 0000		str r0, [sp]
A19053FE  F85F 7370		ldr r7, [pc, #-880] ; 0xA0003FC0
A1905402  8838     		ldrh r0, [r7]
A1905404  F3C0 0080		ubfx r0, r0, #2, #1

#651					NOT	{LNXT:183|-1|-1}
(*) BOOL
A1905408  2800     		cmp r0, #0
A190540A  BF08 2001		eqmov r0, #1
A190540E  BF18 2000		nemov r0, #0

#652					AND		Avto_C	{LNXT:183|-1|-1}
(*) BOOL
A1905412  F85F 7338		ldr r7, [pc, #-824] ; 0xA1A0002E
A1905416  783F     		ldrb r7, [r7]
A1905418  4038     		and r0, r0, r7

#653					)	{LNXT:183|-1|-1}
(*) BOOL
A190541A  4607     		mov r7, r0
A190541C  F8DD 0000		ldr r0, [sp]
A1905420  B002     		add sp, sp, #8
A1905422  4038     		and r0, r0, r7

#654					)	{LNXT:183|-1|-1}
(*) BOOL
A1905424  4607     		mov r7, r0
A1905426  F8DD 0000		ldr r0, [sp]
A190542A  B002     		add sp, sp, #8
A190542C  4038     		and r0, r0, r7

#655					JMPCN	$label47	{LNXT:183|184|187}
(-) BOOL
A190542E  2800     		cmp r0, #0
A1905430  D014     		beq #40 ; 0xA190545C


#656		
#657					(* THEN *)
#658		
#659						(* Motor_C := TRUE; *)
#660						MOVE		TRUE,Motor_C	{LNXT:184|185|-1}
(*) BOOL
A1905434  2001     		mov r0, #1 ; 1
A1905436  F85F 731C		ldr r7, [pc, #-796] ; 0x100004AE
A190543A  7038     		strb r0, [r7]

#661		
#662						(* Rotationnumber := (Rotationnumber + 1) MOD 3; *)
#663						LD		Rotationnumber	{LNXT:185|203|-1}
(*) UNDEF
A190543C  F85F 7338		ldr r7, [pc, #-824] ; 0xA1A0005A
A1905440  F9B7 0000		ldrsh r0, [r7]

#664						ADD		1	{LNXT:185|203|-1}
(-) INT
A1905444  1C40     		add r0, r0, #1

#665						MOD		3	{LNXT:185|203|-1}
(*) INT
A1905446  2103     		mov r1, #3 ; 3
A1905448  F8DF 44D8		ldr r4, [pc, #+1240] ; 0xA1904520
A190544C  F044 0401		orr r4, r4, #1
A1905450  47A0     		blx r4

#666						ST		Rotationnumber	{LNXT:185|203|-1}
(*) INT
A1905452  F85F 734C		ldr r7, [pc, #-844] ; 0xA1A0005A
A1905456  8038     		strh r0, [r7]

#667						JMP		$label48	{LNXT:183|184|187}
(-) INT
A1905458  E073     		b #230 ; 0xA1905542


#668		$label47:
#669		
#670					(* ELSIF Avto_C AND NOT Motor_A AND NOT Motor_B *)
#671					LD		Motor_B	{LNXT:187|-1|-1}
(*) UNDEF
A190545C  F85F 7348		ldr r7, [pc, #-840] ; 0x100004AD
A1905460  7838     		ldrb r0, [r7]

#672					NOT	{LNXT:187|-1|-1}
(*) BOOL
A1905462  2800     		cmp r0, #0
A1905464  BF08 2001		eqmov r0, #1
A1905468  BF18 2000		nemov r0, #0

#673					AND(		Motor_A	{LNXT:187|-1|-1}
(*) BOOL
A190546C  B082     		sub sp, sp, #8
A190546E  F8CD 0000		str r0, [sp]
A1905472  F85F 7360		ldr r7, [pc, #-864] ; 0x100004AC
A1905476  7838     		ldrb r0, [r7]

#674					NOT	{LNXT:187|-1|-1}
(*) BOOL
A1905478  2800     		cmp r0, #0
A190547A  BF08 2001		eqmov r0, #1
A190547E  BF18 2000		nemov r0, #0

#675					AND(		Avto_C	{LNXT:187|-1|-1}
(*) BOOL
A1905482  B082     		sub sp, sp, #8
A1905484  F8CD 0000		str r0, [sp]
A1905488  F85F 73B0		ldr r7, [pc, #-944] ; 0xA1A0002E
A190548C  7838     		ldrb r0, [r7]

#676					NOT	{LNXT:187|-1|-1}
(*) BOOL
A190548E  2800     		cmp r0, #0
A1905490  BF08 2001		eqmov r0, #1
A1905494  BF18 2000		nemov r0, #0

#677					)	{LNXT:187|-1|-1}
(*) BOOL
A1905498  4607     		mov r7, r0
A190549A  F8DD 0000		ldr r0, [sp]
A190549E  B002     		add sp, sp, #8
A19054A0  4038     		and r0, r0, r7

#678					)	{LNXT:187|-1|-1}
(*) BOOL
A19054A2  4607     		mov r7, r0
A19054A4  F8DD 0000		ldr r0, [sp]
A19054A8  B002     		add sp, sp, #8
A19054AA  4038     		and r0, r0, r7

#679					JMPCN	$label48	{LNXT:187|189|203}
(-) BOOL
A19054AC  2800     		cmp r0, #0
A19054AE  D048     		beq #144 ; 0xA1905542


#680		
#681					(* THEN *)
#682		
#683		
#684						(* IF Avto_A and not alarm_pumps.0 *)
#685						LD		alarm_pumps.0	{LNXT:189|-1|-1}
(*) UNDEF
A19054B2  F85F 7424		ldr r7, [pc, #-1060] ; 0xA0003FC0
A19054B6  8838     		ldrh r0, [r7]
A19054B8  F3C0 0000		ubfx r0, r0, #0, #1

#686						NOT	{LNXT:189|-1|-1}
(*) BOOL
A19054BC  2800     		cmp r0, #0
A19054BE  BF08 2001		eqmov r0, #1
A19054C2  BF18 2000		nemov r0, #0

#687						AND		Avto_A	{LNXT:189|-1|-1}
(*) BOOL
A19054C6  F85F 73E8		ldr r7, [pc, #-1000] ; 0xA1A0002F
A19054CA  783F     		ldrb r7, [r7]
A19054CC  4038     		and r0, r0, r7

#688						JMPCN	$label49	{LNXT:189|190|193}
(-) BOOL
A19054CE  2800     		cmp r0, #0
A19054D0  D014     		beq #40 ; 0xA19054FC


#689		
#690						(* THEN *)
#691		
#692							(* Motor_A := TRUE; *)
#693							MOVE		TRUE,Motor_A	{LNXT:190|191|-1}
(*) BOOL
A19054D4  2001     		mov r0, #1 ; 1
A19054D6  F85F 73C4		ldr r7, [pc, #-964] ; 0x100004AC
A19054DA  7038     		strb r0, [r7]

#694		
#695							(* Rotationnumber := (Rotationnumber + 1) MOD 3; *)
#696							LD		Rotationnumber	{LNXT:191|203|-1}
(*) UNDEF
A19054DC  F85F 73D8		ldr r7, [pc, #-984] ; 0xA1A0005A
A19054E0  F9B7 0000		ldrsh r0, [r7]

#697							ADD		1	{LNXT:191|203|-1}
(-) INT
A19054E4  1C40     		add r0, r0, #1

#698							MOD		3	{LNXT:191|203|-1}
(*) INT
A19054E6  2103     		mov r1, #3 ; 3
A19054E8  F8DF 4438		ldr r4, [pc, #+1080] ; 0xA1904520
A19054EC  F044 0401		orr r4, r4, #1
A19054F0  47A0     		blx r4

#699							ST		Rotationnumber	{LNXT:191|203|-1}
(*) INT
A19054F2  F85F 73EC		ldr r7, [pc, #-1004] ; 0xA1A0005A
A19054F6  8038     		strh r0, [r7]

#700							JMP		$label50	{LNXT:189|190|193}
(-) INT
A19054F8  E023     		b #70 ; 0xA1905542


#701		$label49:
#702		
#703						(* ELSIF Avto_B and not alarm_pumps.1 *)
#704						LD		alarm_pumps.1	{LNXT:193|-1|-1}
(*) UNDEF
A19054FC  F85F 7470		ldr r7, [pc, #-1136] ; 0xA0003FC0
A1905500  8838     		ldrh r0, [r7]
A1905502  F3C0 0040		ubfx r0, r0, #1, #1

#705						NOT	{LNXT:193|-1|-1}
(*) BOOL
A1905506  2800     		cmp r0, #0
A1905508  BF08 2001		eqmov r0, #1
A190550C  BF18 2000		nemov r0, #0

#706						AND		Avto_B	{LNXT:193|-1|-1}
(*) BOOL
A1905510  F85F 7440		ldr r7, [pc, #-1088] ; 0xA1A0002C
A1905514  783F     		ldrb r7, [r7]
A1905516  4038     		and r0, r0, r7

#707						JMPCN	$label50	{LNXT:193|194|203}
(-) BOOL
A1905518  2800     		cmp r0, #0
A190551A  D012     		beq #36 ; 0xA1905542


#708		
#709						(* THEN *)
#710		
#711							(* Motor_B := TRUE; *)
#712							MOVE		TRUE,Motor_B	{LNXT:194|195|-1}
(*) BOOL
A190551E  2001     		mov r0, #1 ; 1
A1905520  F85F 740C		ldr r7, [pc, #-1036] ; 0x100004AD
A1905524  7038     		strb r0, [r7]

#713		
#714							(* Rotationnumber := (Rotationnumber - 1) MOD 3; *)
#715							LD		Rotationnumber	{LNXT:195|203|-1}
(*) UNDEF
A1905526  F85F 7420		ldr r7, [pc, #-1056] ; 0xA1A0005A
A190552A  F9B7 0000		ldrsh r0, [r7]

#716							SUB		1	{LNXT:195|203|-1}
(-) INT
A190552E  1E40     		sub r0, r0, #1

#717							MOD		3	{LNXT:195|203|-1}
(*) INT
A1905530  2103     		mov r1, #3 ; 3
A1905532  F8DF 43F0		ldr r4, [pc, #+1008] ; 0xA1904520
A1905536  F044 0401		orr r4, r4, #1
A190553A  47A0     		blx r4

#718							ST		Rotationnumber	{LNXT:195|203|-1}
(*) INT
A190553C  F85F 7438		ldr r7, [pc, #-1080] ; 0xA1A0005A
A1905540  8038     		strh r0, [r7]

#719		
#720		$label50:
#721						(* END_IF *)
#722		
#723		$label48:
#724					(* END_IF *)
#725		
#726		$label35:
#727		
#728				(* END_CASE *)
#729		
#730		$label34:
#731			(* END_IF *)
#732		
#733		
#734			(* IF Avto_A or alarm_pumps.0 *)
#735			LD		Avto_A	{LNXT:203|-1|-1}
(*) UNDEF
A1905542  F85F 7464		ldr r7, [pc, #-1124] ; 0xA1A0002F
A1905546  7838     		ldrb r0, [r7]

#736			NOT	{LNXT:203|-1|-1}
(*) BOOL
A1905548  2800     		cmp r0, #0
A190554A  BF08 2001		eqmov r0, #1
A190554E  BF18 2000		nemov r0, #0

#737			OR		alarm_pumps.0	{LNXT:203|-1|-1}
(*) BOOL
A1905552  F85F 74C4		ldr r7, [pc, #-1220] ; 0xA0003FC0
A1905556  883F     		ldrh r7, [r7]
A1905558  F3C7 0700		ubfx r7, r7, #0, #1
A190555C  4338     		orr r0, r0, r7

#738			JMPCN	$label51	{LNXT:203|204|206}
(-) BOOL
A190555E  2800     		cmp r0, #0
A1905560  D004     		beq #8 ; 0xA190556C


#739		
#740			(* THEN *)
#741		
#742				(* Motor_A := False; *)
#743				MOVE		False,Motor_A	{LNXT:204|206|-1}
(*) BOOL
A1905564  2000     		mov r0, #0 ; 0
A1905566  F85F 7454		ldr r7, [pc, #-1108] ; 0x100004AC
A190556A  7038     		strb r0, [r7]

#744		
#745		$label51:
#746			(* END_IF *)
#747		
#748		
#749			(* IF Avto_B or alarm_pumps.1 *)
#750			LD		Avto_B	{LNXT:206|-1|-1}
(*) UNDEF
A190556C  F85F 749C		ldr r7, [pc, #-1180] ; 0xA1A0002C
A1905570  7838     		ldrb r0, [r7]

#751			NOT	{LNXT:206|-1|-1}
(*) BOOL
A1905572  2800     		cmp r0, #0
A1905574  BF08 2001		eqmov r0, #1
A1905578  BF18 2000		nemov r0, #0

#752			OR		alarm_pumps.1	{LNXT:206|-1|-1}
(*) BOOL
A190557C  F85F 74F0		ldr r7, [pc, #-1264] ; 0xA0003FC0
A1905580  883F     		ldrh r7, [r7]
A1905582  F3C7 0740		ubfx r7, r7, #1, #1
A1905586  4338     		orr r0, r0, r7

#753			JMPCN	$label52	{LNXT:206|207|209}
(-) BOOL
A1905588  2800     		cmp r0, #0
A190558A  D004     		beq #8 ; 0xA1905596


#754		
#755			(* THEN *)
#756		
#757				(* Motor_B := False; *)
#758				MOVE		False,Motor_B	{LNXT:207|209|-1}
(*) BOOL
A190558E  2000     		mov r0, #0 ; 0
A1905590  F85F 747C		ldr r7, [pc, #-1148] ; 0x100004AD
A1905594  7038     		strb r0, [r7]

#759		
#760		$label52:
#761			(* END_IF *)
#762		
#763		
#764			(* IF Avto_C or alarm_pumps.2 *)
#765			LD		Avto_C	{LNXT:209|-1|-1}
(*) UNDEF
A1905596  F85F 74BC		ldr r7, [pc, #-1212] ; 0xA1A0002E
A190559A  7838     		ldrb r0, [r7]

#766			NOT	{LNXT:209|-1|-1}
(*) BOOL
A190559C  2800     		cmp r0, #0
A190559E  BF08 2001		eqmov r0, #1
A19055A2  BF18 2000		nemov r0, #0

#767			OR		alarm_pumps.2	{LNXT:209|-1|-1}
(*) BOOL
A19055A6  F85F 7518		ldr r7, [pc, #-1304] ; 0xA0003FC0
A19055AA  883F     		ldrh r7, [r7]
A19055AC  F3C7 0780		ubfx r7, r7, #2, #1
A19055B0  4338     		orr r0, r0, r7

#768			JMPCN	$label53	{LNXT:209|210|220}
(-) BOOL
A19055B2  2800     		cmp r0, #0
A19055B4  D004     		beq #8 ; 0xA19055C0


#769		
#770			(* THEN *)
#771		
#772				(* Motor_C := False; *)
#773				MOVE		False,Motor_C	{LNXT:210|220|-1}
(*) BOOL
A19055B8  2000     		mov r0, #0 ; 0
A19055BA  F85F 74A0		ldr r7, [pc, #-1184] ; 0x100004AE
A19055BE  7038     		strb r0, [r7]

#774		
#775		$label53:
#776			(* END_IF *)
#777		
#778		
#779			(* IF Tank_Level >= Level_1 AND NOT Rotation AND NOT FastRunMode *)
#780			LD		FastRunMode	{LNXT:220|-1|-1}
(*) UNDEF
A19055C0  F85F 74C0		ldr r7, [pc, #-1216] ; 0xA1A00058
A19055C4  7838     		ldrb r0, [r7]

#781			NOT	{LNXT:220|-1|-1}
(*) BOOL
A19055C6  2800     		cmp r0, #0
A19055C8  BF08 2001		eqmov r0, #1
A19055CC  BF18 2000		nemov r0, #0

#782			AND(		Rotation	{LNXT:220|-1|-1}
(*) BOOL
A19055D0  B082     		sub sp, sp, #8
A19055D2  F8CD 0000		str r0, [sp]
A19055D6  F85F 7570		ldr r7, [pc, #-1392] ; 0xA0003F10
A19055DA  7838     		ldrb r0, [r7]

#783			NOT	{LNXT:220|-1|-1}
(*) BOOL
A19055DC  2800     		cmp r0, #0
A19055DE  BF08 2001		eqmov r0, #1
A19055E2  BF18 2000		nemov r0, #0

#784			AND(		Tank_Level	{LNXT:220|-1|-1}
(*) BOOL
A19055E6  B082     		sub sp, sp, #8
A19055E8  F8CD 0000		str r0, [sp]
A19055EC  F85F 753C		ldr r7, [pc, #-1340] ; 0xA1A00012
A19055F0  F9B7 0000		ldrsh r0, [r7]

#785			GE		Level_1	{LNXT:220|-1|-1}
(*) INT
A19055F4  F85F 75A0		ldr r7, [pc, #-1440] ; 0xA0003F06
A19055F8  F9B7 7000		ldrsh r7, [r7]
A19055FC  42B8     		cmp r0, r7
A19055FE  BFB8 2000		ltmov r0, #0
A1905602  BFA8 2001		gemov r0, #1

#786			)	{LNXT:220|-1|-1}
(*) BOOL
A1905606  4607     		mov r7, r0
A1905608  F8DD 0000		ldr r0, [sp]
A190560C  B002     		add sp, sp, #8
A190560E  4038     		and r0, r0, r7

#787			)	{LNXT:220|-1|-1}
(*) BOOL
A1905610  4607     		mov r7, r0
A1905612  F8DD 0000		ldr r0, [sp]
A1905616  B002     		add sp, sp, #8
A1905618  4038     		and r0, r0, r7

#788			JMPCN	$label54	{LNXT:220|223|289}
(-) BOOL
A190561A  2800     		cmp r0, #0
A190561C  F000 818C		beq #792 ; 0xA1905938


#789		
#790			(* THEN *)
#791		
#792		
#793				(* CASE Priority OF *)
#794		
#795				(* 0: *)
#796				LD		Priority	{LNXT:223|-1|-1}
(*) UNDEF
A1905620  F85F 75C0		ldr r7, [pc, #-1472] ; 0xA0003F0C
A1905624  F9B7 0000		ldrsh r0, [r7]

#797				EQ		0	{LNXT:223|-1|-1}
(*) INT
A1905628  2800     		cmp r0, #0
A190562A  BF18 2000		nemov r0, #0
A190562E  BF08 2001		eqmov r0, #1

#798				JMPC		$label56	{LNXT:223|224|244}
(-) BOOL
A1905632  2800     		cmp r0, #0
A1905634  D11A     		bne #52 ; 0xA190566C


#799		
#800				(* 1: *)
#801				LD		Priority	{LNXT:244|-1|-1}
(*) UNDEF
A1905638  F85F 75D8		ldr r7, [pc, #-1496] ; 0xA0003F0C
A190563C  F9B7 0000		ldrsh r0, [r7]

#802				EQ		1	{LNXT:244|-1|-1}
(*) INT
A1905640  2801     		cmp r0, #1
A1905642  BF18 2000		nemov r0, #0
A1905646  BF08 2001		eqmov r0, #1

#803				JMPC		$label57	{LNXT:244|245|264}
(-) BOOL
A190564A  2800     		cmp r0, #0
A190564C  F040 8085		bne #266 ; 0xA190575A


#804		
#805				(* 2: *)
#806				LD		Priority	{LNXT:264|-1|-1}
(*) UNDEF
A1905650  F85F 75F0		ldr r7, [pc, #-1520] ; 0xA0003F0C
A1905654  F9B7 0000		ldrsh r0, [r7]

#807				EQ		2	{LNXT:264|-1|-1}
(*) INT
A1905658  2802     		cmp r0, #2
A190565A  BF18 2000		nemov r0, #0
A190565E  BF08 2001		eqmov r0, #1

#808				JMPC		$label58	{LNXT:264|265|289}
(-) BOOL
A1905662  2800     		cmp r0, #0
A1905664  F040 80F0		bne #480 ; 0xA1905848


#809				JMP		$label55	{LNXT:264|265|289}
(-) BOOL
A1905668  E166     		b #716 ; 0xA1905938


#810		
#811				(* Istruzioni di ciascun CASE: *)
#812		
#813		$label56:
#814		
#815					(* IF Motor_B AND NOT Motor_C *)
#816					LD		Motor_C	{LNXT:224|-1|-1}
(*) UNDEF
A190566C  F85F 7554		ldr r7, [pc, #-1364] ; 0x100004AE
A1905670  7838     		ldrb r0, [r7]

#817					NOT	{LNXT:224|-1|-1}
(*) BOOL
A1905672  2800     		cmp r0, #0
A1905674  BF08 2001		eqmov r0, #1
A1905678  BF18 2000		nemov r0, #0

#818					AND(		Motor_B	{LNXT:224|-1|-1}
(*) BOOL
A190567C  B082     		sub sp, sp, #8
A190567E  F8CD 0000		str r0, [sp]
A1905682  F85F 756C		ldr r7, [pc, #-1388] ; 0x100004AD
A1905686  7838     		ldrb r0, [r7]

#819					NOT	{LNXT:224|-1|-1}
(*) BOOL
A1905688  2800     		cmp r0, #0
A190568A  BF08 2001		eqmov r0, #1
A190568E  BF18 2000		nemov r0, #0

#820					)	{LNXT:224|-1|-1}
(*) BOOL
A1905692  4607     		mov r7, r0
A1905694  F8DD 0000		ldr r0, [sp]
A1905698  B002     		add sp, sp, #8
A190569A  4038     		and r0, r0, r7

#821					JMPCN	$label59	{LNXT:224|225|289}
(-) BOOL
A190569C  2800     		cmp r0, #0
A190569E  D05A     		beq #180 ; 0xA1905756


#822		
#823					(* THEN *)
#824		
#825		
#826						(* IF Avto_A and not alarm_pumps.0 *)
#827						LD		alarm_pumps.0	{LNXT:225|-1|-1}
(*) UNDEF
A19056A2  F85F 7614		ldr r7, [pc, #-1556] ; 0xA0003FC0
A19056A6  8838     		ldrh r0, [r7]
A19056A8  F3C0 0000		ubfx r0, r0, #0, #1

#828						NOT	{LNXT:225|-1|-1}
(*) BOOL
A19056AC  2800     		cmp r0, #0
A19056AE  BF08 2001		eqmov r0, #1
A19056B2  BF18 2000		nemov r0, #0

#829						AND		Avto_A	{LNXT:225|-1|-1}
(*) BOOL
A19056B6  F85F 75D8		ldr r7, [pc, #-1496] ; 0xA1A0002F
A19056BA  783F     		ldrb r7, [r7]
A19056BC  4038     		and r0, r0, r7

#830						JMPCN	$label60	{LNXT:225|226|230}
(-) BOOL
A19056BE  2800     		cmp r0, #0
A19056C0  D00A     		beq #20 ; 0xA19056D8


#831		
#832						(* THEN *)
#833		
#834							(* Priority := 0; *)
#835							MOVE		0,Priority	{LNXT:226|227|-1}
(*) BOOL
A19056C4  2000     		mov r0, #0 ; 0
A19056C6  F85F 7664		ldr r7, [pc, #-1636] ; 0xA0003F0C
A19056CA  8038     		strh r0, [r7]

#836		
#837							(* Motor_A := TRUE; *)
#838							MOVE		TRUE,Motor_A	{LNXT:227|289|-1}
(*) INT
A19056CC  2001     		mov r0, #1 ; 1
A19056CE  F85F 75BC		ldr r7, [pc, #-1468] ; 0x100004AC
A19056D2  7038     		strb r0, [r7]

#839							JMP		$label61	{LNXT:225|226|230}
(-) BOOL
A19056D4  E03F     		b #126 ; 0xA1905756


#840		$label60:
#841		
#842						(* ELSIF Avto_A *)
#843						LD		Avto_A	{LNXT:230|-1|-1}
(*) UNDEF
A19056D8  F85F 75FC		ldr r7, [pc, #-1532] ; 0xA1A0002F
A19056DC  7838     		ldrb r0, [r7]

#844						NOT	{LNXT:230|-1|-1}
(*) BOOL
A19056DE  2800     		cmp r0, #0
A19056E0  BF08 2001		eqmov r0, #1
A19056E4  BF18 2000		nemov r0, #0

#845						JMPCN	$label61	{LNXT:230|232|289}
(-) BOOL
A19056E8  2800     		cmp r0, #0
A19056EA  D034     		beq #104 ; 0xA1905756


#846		
#847						(* THEN *)
#848		
#849		
#850							(* IF Avto_B and not alarm_pumps.1 *)
#851							LD		alarm_pumps.1	{LNXT:232|-1|-1}
(*) UNDEF
A19056EE  F85F 7660		ldr r7, [pc, #-1632] ; 0xA0003FC0
A19056F2  8838     		ldrh r0, [r7]
A19056F4  F3C0 0040		ubfx r0, r0, #1, #1

#852							NOT	{LNXT:232|-1|-1}
(*) BOOL
A19056F8  2800     		cmp r0, #0
A19056FA  BF08 2001		eqmov r0, #1
A19056FE  BF18 2000		nemov r0, #0

#853							AND		Avto_B	{LNXT:232|-1|-1}
(*) BOOL
A1905702  F85F 7630		ldr r7, [pc, #-1584] ; 0xA1A0002C
A1905706  783F     		ldrb r7, [r7]
A1905708  4038     		and r0, r0, r7

#854							JMPCN	$label62	{LNXT:232|233|236}
(-) BOOL
A190570A  2800     		cmp r0, #0
A190570C  D00A     		beq #20 ; 0xA1905724


#855		
#856							(* THEN *)
#857		
#858								(* Priority := 1; *)
#859								MOVE		1,Priority	{LNXT:233|234|-1}
(*) BOOL
A1905710  2001     		mov r0, #1 ; 1
A1905712  F85F 76B0		ldr r7, [pc, #-1712] ; 0xA0003F0C
A1905716  8038     		strh r0, [r7]

#860		
#861								(* Motor_B := TRUE; *)
#862								MOVE		TRUE,Motor_B	{LNXT:234|289|-1}
(*) INT
A1905718  2001     		mov r0, #1 ; 1
A190571A  F85F 7604		ldr r7, [pc, #-1540] ; 0x100004AD
A190571E  7038     		strb r0, [r7]

#863								JMP		$label63	{LNXT:232|233|236}
(-) BOOL
A1905720  E019     		b #50 ; 0xA1905756


#864		$label62:
#865		
#866							(* ELSIF Avto_C and not alarm_pumps.2 *)
#867							LD		alarm_pumps.2	{LNXT:236|-1|-1}
(*) UNDEF
A1905724  F85F 7698		ldr r7, [pc, #-1688] ; 0xA0003FC0
A1905728  8838     		ldrh r0, [r7]
A190572A  F3C0 0080		ubfx r0, r0, #2, #1

#868							NOT	{LNXT:236|-1|-1}
(*) BOOL
A190572E  2800     		cmp r0, #0
A1905730  BF08 2001		eqmov r0, #1
A1905734  BF18 2000		nemov r0, #0

#869							AND		Avto_C	{LNXT:236|-1|-1}
(*) BOOL
A1905738  F85F 7660		ldr r7, [pc, #-1632] ; 0xA1A0002E
A190573C  783F     		ldrb r7, [r7]
A190573E  4038     		and r0, r0, r7

#870							JMPCN	$label63	{LNXT:236|237|289}
(-) BOOL
A1905740  2800     		cmp r0, #0
A1905742  D008     		beq #16 ; 0xA1905756


#871		
#872							(* THEN *)
#873		
#874								(* Priority := 2; *)
#875								MOVE		2,Priority	{LNXT:237|238|-1}
(*) BOOL
A1905746  2002     		mov r0, #2 ; 2
A1905748  F85F 76E8		ldr r7, [pc, #-1768] ; 0xA0003F0C
A190574C  8038     		strh r0, [r7]

#876		
#877								(* Motor_C := TRUE; *)
#878								MOVE		TRUE,Motor_C	{LNXT:238|289|-1}
(*) INT
A190574E  2001     		mov r0, #1 ; 1
A1905750  F85F 7638		ldr r7, [pc, #-1592] ; 0x100004AE
A1905754  7038     		strb r0, [r7]

#879		
#880		$label63:
#881							(* END_IF *)
#882		
#883		$label61:
#884						(* END_IF *)
#885		
#886		$label59:
#887					(* END_IF *)
#888					JMP		$label55	{LNXT:1|289|-1}
(-) BOOL
A1905756  E0EF     		b #478 ; 0xA1905938


#889		
#890		$label57:
#891		
#892					(* IF Motor_A AND NOT Motor_C *)
#893					LD		Motor_C	{LNXT:245|-1|-1}
(*) UNDEF
A190575A  F85F 7640		ldr r7, [pc, #-1600] ; 0x100004AE
A190575E  7838     		ldrb r0, [r7]

#894					NOT	{LNXT:245|-1|-1}
(*) BOOL
A1905760  2800     		cmp r0, #0
A1905762  BF08 2001		eqmov r0, #1
A1905766  BF18 2000		nemov r0, #0

#895					AND(		Motor_A	{LNXT:245|-1|-1}
(*) BOOL
A190576A  B082     		sub sp, sp, #8
A190576C  F8CD 0000		str r0, [sp]
A1905770  F85F 7660		ldr r7, [pc, #-1632] ; 0x100004AC
A1905774  7838     		ldrb r0, [r7]

#896					NOT	{LNXT:245|-1|-1}
(*) BOOL
A1905776  2800     		cmp r0, #0
A1905778  BF08 2001		eqmov r0, #1
A190577C  BF18 2000		nemov r0, #0

#897					)	{LNXT:245|-1|-1}
(*) BOOL
A1905780  4607     		mov r7, r0
A1905782  F8DD 0000		ldr r0, [sp]
A1905786  B002     		add sp, sp, #8
A1905788  4038     		and r0, r0, r7

#898					JMPCN	$label64	{LNXT:245|246|289}
(-) BOOL
A190578A  2800     		cmp r0, #0
A190578C  D05A     		beq #180 ; 0xA1905844


#899		
#900					(* THEN *)
#901		
#902		
#903						(* IF Avto_B and not alarm_pumps.1 *)
#904						LD		alarm_pumps.1	{LNXT:246|-1|-1}
(*) UNDEF
A1905790  F85F 7704		ldr r7, [pc, #-1796] ; 0xA0003FC0
A1905794  8838     		ldrh r0, [r7]
A1905796  F3C0 0040		ubfx r0, r0, #1, #1

#905						NOT	{LNXT:246|-1|-1}
(*) BOOL
A190579A  2800     		cmp r0, #0
A190579C  BF08 2001		eqmov r0, #1
A19057A0  BF18 2000		nemov r0, #0

#906						AND		Avto_B	{LNXT:246|-1|-1}
(*) BOOL
A19057A4  F85F 76D4		ldr r7, [pc, #-1748] ; 0xA1A0002C
A19057A8  783F     		ldrb r7, [r7]
A19057AA  4038     		and r0, r0, r7

#907						JMPCN	$label65	{LNXT:246|247|250}
(-) BOOL
A19057AC  2800     		cmp r0, #0
A19057AE  D00A     		beq #20 ; 0xA19057C6


#908		
#909						(* THEN *)
#910		
#911							(* Priority := 1; *)
#912							MOVE		1,Priority	{LNXT:247|248|-1}
(*) BOOL
A19057B2  2001     		mov r0, #1 ; 1
A19057B4  F85F 7754		ldr r7, [pc, #-1876] ; 0xA0003F0C
A19057B8  8038     		strh r0, [r7]

#913		
#914							(* Motor_B := TRUE; *)
#915							MOVE		TRUE,Motor_B	{LNXT:248|289|-1}
(*) INT
A19057BA  2001     		mov r0, #1 ; 1
A19057BC  F85F 76A8		ldr r7, [pc, #-1704] ; 0x100004AD
A19057C0  7038     		strb r0, [r7]

#916							JMP		$label66	{LNXT:246|247|250}
(-) BOOL
A19057C2  E03F     		b #126 ; 0xA1905844


#917		$label65:
#918		
#919						(* ELSIF Avto_B *)
#920						LD		Avto_B	{LNXT:250|-1|-1}
(*) UNDEF
A19057C6  F85F 76F4		ldr r7, [pc, #-1780] ; 0xA1A0002C
A19057CA  7838     		ldrb r0, [r7]

#921						NOT	{LNXT:250|-1|-1}
(*) BOOL
A19057CC  2800     		cmp r0, #0
A19057CE  BF08 2001		eqmov r0, #1
A19057D2  BF18 2000		nemov r0, #0

#922						JMPCN	$label66	{LNXT:250|252|289}
(-) BOOL
A19057D6  2800     		cmp r0, #0
A19057D8  D034     		beq #104 ; 0xA1905844


#923		
#924						(* THEN *)
#925		
#926		
#927							(* IF Avto_A and not alarm_pumps.0 *)
#928							LD		alarm_pumps.0	{LNXT:252|-1|-1}
(*) UNDEF
A19057DC  F85F 7750		ldr r7, [pc, #-1872] ; 0xA0003FC0
A19057E0  8838     		ldrh r0, [r7]
A19057E2  F3C0 0000		ubfx r0, r0, #0, #1

#929							NOT	{LNXT:252|-1|-1}
(*) BOOL
A19057E6  2800     		cmp r0, #0
A19057E8  BF08 2001		eqmov r0, #1
A19057EC  BF18 2000		nemov r0, #0

#930							AND		Avto_A	{LNXT:252|-1|-1}
(*) BOOL
A19057F0  F85F 7714		ldr r7, [pc, #-1812] ; 0xA1A0002F
A19057F4  783F     		ldrb r7, [r7]
A19057F6  4038     		and r0, r0, r7

#931							JMPCN	$label67	{LNXT:252|253|256}
(-) BOOL
A19057F8  2800     		cmp r0, #0
A19057FA  D00A     		beq #20 ; 0xA1905812


#932		
#933							(* THEN *)
#934		
#935								(* Priority := 0; *)
#936								MOVE		0,Priority	{LNXT:253|254|-1}
(*) BOOL
A19057FE  2000     		mov r0, #0 ; 0
A1905800  F85F 77A0		ldr r7, [pc, #-1952] ; 0xA0003F0C
A1905804  8038     		strh r0, [r7]

#937		
#938								(* Motor_A := TRUE; *)
#939								MOVE		TRUE,Motor_A	{LNXT:254|289|-1}
(*) INT
A1905806  2001     		mov r0, #1 ; 1
A1905808  F85F 76F8		ldr r7, [pc, #-1784] ; 0x100004AC
A190580C  7038     		strb r0, [r7]

#940								JMP		$label68	{LNXT:252|253|256}
(-) BOOL
A190580E  E019     		b #50 ; 0xA1905844


#941		$label67:
#942		
#943							(* ELSE *)
#944		
#945		
#946								(* IF Avto_C and not alarm_pumps.2 *)
#947								LD		alarm_pumps.2	{LNXT:256|-1|-1}
(*) UNDEF
A1905812  F85F 7784		ldr r7, [pc, #-1924] ; 0xA0003FC0
A1905816  8838     		ldrh r0, [r7]
A1905818  F3C0 0080		ubfx r0, r0, #2, #1

#948								NOT	{LNXT:256|-1|-1}
(*) BOOL
A190581C  2800     		cmp r0, #0
A190581E  BF08 2001		eqmov r0, #1
A1905822  BF18 2000		nemov r0, #0

#949								AND		Avto_C	{LNXT:256|-1|-1}
(*) BOOL
A1905826  F85F 774C		ldr r7, [pc, #-1868] ; 0xA1A0002E
A190582A  783F     		ldrb r7, [r7]
A190582C  4038     		and r0, r0, r7

#950								JMPCN	$label69	{LNXT:256|257|289}
(-) BOOL
A190582E  2800     		cmp r0, #0
A1905830  D008     		beq #16 ; 0xA1905844


#951		
#952								(* THEN *)
#953		
#954									(* Priority := 2; *)
#955									MOVE		2,Priority	{LNXT:257|258|-1}
(*) BOOL
A1905834  2002     		mov r0, #2 ; 2
A1905836  F85F 77D4		ldr r7, [pc, #-2004] ; 0xA0003F0C
A190583A  8038     		strh r0, [r7]

#956		
#957									(* Motor_C := TRUE; *)
#958									MOVE		TRUE,Motor_C	{LNXT:258|289|-1}
(*) INT
A190583C  2001     		mov r0, #1 ; 1
A190583E  F85F 7724		ldr r7, [pc, #-1828] ; 0x100004AE
A1905842  7038     		strb r0, [r7]

#959		
#960		$label69:
#961								(* END_IF *)
#962		
#963		$label68:
#964							(* END_IF *)
#965		
#966		$label66:
#967						(* END_IF *)
#968		
#969		$label64:
#970					(* END_IF *)
#971					JMP		$label55	{LNXT:1|289|-1}
(-) BOOL
A1905844  E078     		b #240 ; 0xA1905938


#972		
#973		$label58:
#974		
#975					(* IF Motor_A AND NOT Motor_B *)
#976					LD		Motor_B	{LNXT:265|-1|-1}
(*) UNDEF
A1905848  F85F 7734		ldr r7, [pc, #-1844] ; 0x100004AD
A190584C  7838     		ldrb r0, [r7]

#977					NOT	{LNXT:265|-1|-1}
(*) BOOL
A190584E  2800     		cmp r0, #0
A1905850  BF08 2001		eqmov r0, #1
A1905854  BF18 2000		nemov r0, #0

#978					AND(		Motor_A	{LNXT:265|-1|-1}
(*) BOOL
A1905858  B082     		sub sp, sp, #8
A190585A  F8CD 0000		str r0, [sp]
A190585E  F85F 774C		ldr r7, [pc, #-1868] ; 0x100004AC
A1905862  7838     		ldrb r0, [r7]

#979					NOT	{LNXT:265|-1|-1}
(*) BOOL
A1905864  2800     		cmp r0, #0
A1905866  BF08 2001		eqmov r0, #1
A190586A  BF18 2000		nemov r0, #0

#980					)	{LNXT:265|-1|-1}
(*) BOOL
A190586E  4607     		mov r7, r0
A1905870  F8DD 0000		ldr r0, [sp]
A1905874  B002     		add sp, sp, #8
A1905876  4038     		and r0, r0, r7

#981					JMPCN	$label70	{LNXT:265|266|289}
(-) BOOL
A1905878  2800     		cmp r0, #0
A190587A  D05D     		beq #186 ; 0xA1905938


#982		
#983					(* THEN *)
#984		
#985		
#986						(* IF Avto_C and not alarm_pumps.2 *)
#987						LD		alarm_pumps.2	{LNXT:266|-1|-1}
(*) UNDEF
A190587E  F85F 77F0		ldr r7, [pc, #-2032] ; 0xA0003FC0
A1905882  8838     		ldrh r0, [r7]
A1905884  F3C0 0080		ubfx r0, r0, #2, #1

#988						NOT	{LNXT:266|-1|-1}
(*) BOOL
A1905888  2800     		cmp r0, #0
A190588A  BF08 2001		eqmov r0, #1
A190588E  BF18 2000		nemov r0, #0

#989						AND		Avto_C	{LNXT:266|-1|-1}
(*) BOOL
A1905892  F85F 77B8		ldr r7, [pc, #-1976] ; 0xA1A0002E
A1905896  783F     		ldrb r7, [r7]
A1905898  4038     		and r0, r0, r7

#990						JMPCN	$label71	{LNXT:266|267|270}
(-) BOOL
A190589A  2800     		cmp r0, #0
A190589C  D00A     		beq #20 ; 0xA19058B4


#991		
#992						(* THEN *)
#993		
#994							(* Priority := 2; *)
#995							MOVE		2,Priority	{LNXT:267|268|-1}
(*) BOOL
A19058A0  2002     		mov r0, #2 ; 2
A19058A2  F85F 7840		ldr r7, [pc, #-2112] ; 0xA0003F0C
A19058A6  8038     		strh r0, [r7]

#996		
#997							(* Motor_C := TRUE; *)
#998							MOVE		TRUE,Motor_C	{LNXT:268|289|-1}
(*) INT
A19058A8  2001     		mov r0, #1 ; 1
A19058AA  F85F 7790		ldr r7, [pc, #-1936] ; 0x100004AE
A19058AE  7038     		strb r0, [r7]

#999							JMP		$label72	{LNXT:266|267|270}
(-) BOOL
A19058B0  E042     		b #132 ; 0xA1905938


#1000		$label71:
#1001		
#1002						(* ELSIF Avto_C *)
#1003						LD		Avto_C	{LNXT:270|-1|-1}
(*) UNDEF
A19058B4  F85F 77DC		ldr r7, [pc, #-2012] ; 0xA1A0002E
A19058B8  7838     		ldrb r0, [r7]

#1004						NOT	{LNXT:270|-1|-1}
(*) BOOL
A19058BA  2800     		cmp r0, #0
A19058BC  BF08 2001		eqmov r0, #1
A19058C0  BF18 2000		nemov r0, #0

#1005						JMPCN	$label72	{LNXT:270|272|289}
(-) BOOL
A19058C4  2800     		cmp r0, #0
A19058C6  D037     		beq #110 ; 0xA1905938


#1006		
#1007						(* THEN *)
#1008		
#1009		
#1010							(* IF Avto_A and not alarm_pumps.0 *)
#1011							LD		alarm_pumps.0	{LNXT:272|-1|-1}
(*) UNDEF
A19058CA  F85F 783C		ldr r7, [pc, #-2108] ; 0xA0003FC0
A19058CE  8838     		ldrh r0, [r7]
A19058D0  F3C0 0000		ubfx r0, r0, #0, #1

#1012							NOT	{LNXT:272|-1|-1}
(*) BOOL
A19058D4  2800     		cmp r0, #0
A19058D6  BF08 2001		eqmov r0, #1
A19058DA  BF18 2000		nemov r0, #0

#1013							AND		Avto_A	{LNXT:272|-1|-1}
(*) BOOL
A19058DE  F85F 7800		ldr r7, [pc, #-2048] ; 0xA1A0002F
A19058E2  783F     		ldrb r7, [r7]
A19058E4  4038     		and r0, r0, r7

#1014							JMPCN	$label73	{LNXT:272|273|276}
(-) BOOL
A19058E6  2800     		cmp r0, #0
A19058E8  D00A     		beq #20 ; 0xA1905900


#1015		
#1016							(* THEN *)
#1017		
#1018								(* Priority := 0; *)
#1019								MOVE		0,Priority	{LNXT:273|274|-1}
(*) BOOL
A19058EC  2000     		mov r0, #0 ; 0
A19058EE  F85F 788C		ldr r7, [pc, #-2188] ; 0xA0003F0C
A19058F2  8038     		strh r0, [r7]

#1020		
#1021								(* Motor_A := TRUE; *)
#1022								MOVE		TRUE,Motor_A	{LNXT:274|289|-1}
(*) INT
A19058F4  2001     		mov r0, #1 ; 1
A19058F6  F85F 77E4		ldr r7, [pc, #-2020] ; 0x100004AC
A19058FA  7038     		strb r0, [r7]

#1023								JMP		$label74	{LNXT:272|273|276}
(-) BOOL
A19058FC  E01C     		b #56 ; 0xA1905938


#1024		$label73:
#1025		
#1026							(* ELSIF Avto_B and not alarm_pumps.1 *)
#1027							LD		alarm_pumps.1	{LNXT:276|-1|-1}
(*) UNDEF
A1905900  F85F 7874		ldr r7, [pc, #-2164] ; 0xA0003FC0
A1905904  8838     		ldrh r0, [r7]
A1905906  F3C0 0040		ubfx r0, r0, #1, #1

#1028							NOT	{LNXT:276|-1|-1}
(*) BOOL
A190590A  2800     		cmp r0, #0
A190590C  BF08 2001		eqmov r0, #1
A1905910  BF18 2000		nemov r0, #0

#1029							AND		Avto_B	{LNXT:276|-1|-1}
(*) BOOL
A1905914  F85F 7844		ldr r7, [pc, #-2116] ; 0xA1A0002C
A1905918  783F     		ldrb r7, [r7]
A190591A  4038     		and r0, r0, r7

#1030							JMPCN	$label74	{LNXT:276|277|289}
(-) BOOL
A190591C  2800     		cmp r0, #0
A190591E  D00B     		beq #22 ; 0xA1905938


A1905922  E001     		b #2

A1905924  A1904520		; 0xA1904520

#1031		
#1032							(* THEN *)
#1033		
#1034								(* Priority := 1; *)
#1035								MOVE		1,Priority	{LNXT:277|278|-1}
(*) BOOL
A1905928  2001     		mov r0, #1 ; 1
A190592A  F85F 78C8		ldr r7, [pc, #-2248] ; 0xA0003F0C
A190592E  8038     		strh r0, [r7]

#1036		
#1037								(* Motor_B := TRUE; *)
#1038								MOVE		TRUE,Motor_B	{LNXT:278|289|-1}
(*) INT
A1905930  2001     		mov r0, #1 ; 1
A1905932  F85F 781C		ldr r7, [pc, #-2076] ; 0x100004AD
A1905936  7038     		strb r0, [r7]

#1039		
#1040		$label74:
#1041							(* END_IF *)
#1042		
#1043		$label72:
#1044						(* END_IF *)
#1045		
#1046		$label70:
#1047					(* END_IF *)
#1048		
#1049		$label55:
#1050		
#1051				(* END_CASE *)
#1052		
#1053		$label54:
#1054			(* END_IF *)
#1055		
#1056		
#1057			(* IF Rotation AND FastRunMode *)
#1058			LD		Rotation	{LNXT:289|-1|-1}
(*) UNDEF
A1905938  F85F 78D4		ldr r7, [pc, #-2260] ; 0xA0003F10
A190593C  7838     		ldrb r0, [r7]

#1059			NOT	{LNXT:289|-1|-1}
(*) BOOL
A190593E  2800     		cmp r0, #0
A1905940  BF08 2001		eqmov r0, #1
A1905944  BF18 2000		nemov r0, #0

#1060			AND		FastRunMode	{LNXT:289|-1|-1}
(*) BOOL
A1905948  F85F 7848		ldr r7, [pc, #-2120] ; 0xA1A00058
A190594C  783F     		ldrb r7, [r7]
A190594E  4038     		and r0, r0, r7

#1061			JMPCN	$label75	{LNXT:289|292|400}
(-) BOOL
A1905950  2800     		cmp r0, #0
A1905952  F000 8372		beq #1764 ; 0xA190603A


#1062		
#1063			(* THEN *)
#1064		
#1065		
#1066				(* CASE CurrentPump OF *)
#1067		
#1068				(* 1: *)
#1069				LD		CurrentPump	{LNXT:293|-1|-1}
(*) UNDEF
A1905956  F8DF 77E8		ldr r7, [pc, #+2024] ; 0xA1A0005C
A190595A  F9B7 0000		ldrsh r0, [r7]

#1070				EQ		1	{LNXT:293|-1|-1}
(*) INT
A190595E  2801     		cmp r0, #1
A1905960  BF18 2000		nemov r0, #0
A1905964  BF08 2001		eqmov r0, #1

#1071				JMPC		$label77	{LNXT:293|296|328}
(-) BOOL
A1905968  2800     		cmp r0, #0
A190596A  D11A     		bne #52 ; 0xA19059A2


#1072		
#1073				(* 2: *)
#1074				LD		CurrentPump	{LNXT:328|-1|-1}
(*) UNDEF
A190596E  F8DF 77D0		ldr r7, [pc, #+2000] ; 0xA1A0005C
A1905972  F9B7 0000		ldrsh r0, [r7]

#1075				EQ		2	{LNXT:328|-1|-1}
(*) INT
A1905976  2802     		cmp r0, #2
A1905978  BF18 2000		nemov r0, #0
A190597C  BF08 2001		eqmov r0, #1

#1076				JMPC		$label78	{LNXT:328|329|359}
(-) BOOL
A1905980  2800     		cmp r0, #0
A1905982  F040 8128		bne #592 ; 0xA1905BD6


#1077		
#1078				(* 3: *)
#1079				LD		CurrentPump	{LNXT:359|-1|-1}
(*) UNDEF
A1905986  F8DF 77B8		ldr r7, [pc, #+1976] ; 0xA1A0005C
A190598A  F9B7 0000		ldrsh r0, [r7]

#1080				EQ		3	{LNXT:359|-1|-1}
(*) INT
A190598E  2803     		cmp r0, #3
A1905990  BF18 2000		nemov r0, #0
A1905994  BF08 2001		eqmov r0, #1

#1081				JMPC		$label79	{LNXT:359|360|400}
(-) BOOL
A1905998  2800     		cmp r0, #0
A190599A  F040 8236		bne #1132 ; 0xA1905E0A


#1082				JMP		$label76	{LNXT:359|360|400}
(-) BOOL
A190599E  E34C     		b #1688 ; 0xA190603A


#1083		
#1084				(* Istruzioni di ciascun CASE: *)
#1085		
#1086		$label77:
#1087		
#1088					(* IF Tank_Level >= Level_1 AND Priority = 0 *)
#1089					LD		Priority	{LNXT:296|-1|-1}
(*) UNDEF
A19059A2  F85F 7940		ldr r7, [pc, #-2368] ; 0xA0003F0C
A19059A6  F9B7 0000		ldrsh r0, [r7]

#1090					EQ		0	{LNXT:296|-1|-1}
(*) INT
A19059AA  2800     		cmp r0, #0
A19059AC  BF18 2000		nemov r0, #0
A19059B0  BF08 2001		eqmov r0, #1

#1091					AND(		Tank_Level	{LNXT:296|-1|-1}
(*) BOOL
A19059B4  B082     		sub sp, sp, #8
A19059B6  F8CD 0000		str r0, [sp]
A19059BA  F85F 7908		ldr r7, [pc, #-2312] ; 0xA1A00012
A19059BE  F9B7 0000		ldrsh r0, [r7]

#1092					GE		Level_1	{LNXT:296|-1|-1}
(*) INT
A19059C2  F85F 796C		ldr r7, [pc, #-2412] ; 0xA0003F06
A19059C6  F9B7 7000		ldrsh r7, [r7]
A19059CA  42B8     		cmp r0, r7
A19059CC  BFB8 2000		ltmov r0, #0
A19059D0  BFA8 2001		gemov r0, #1

#1093					)	{LNXT:296|-1|-1}
(*) BOOL
A19059D4  4607     		mov r7, r0
A19059D6  F8DD 0000		ldr r0, [sp]
A19059DA  B002     		add sp, sp, #8
A19059DC  4038     		and r0, r0, r7

#1094					JMPCN	$label80	{LNXT:296|297|300}
(-) BOOL
A19059DE  2800     		cmp r0, #0
A19059E0  D014     		beq #40 ; 0xA1905A0C


#1095		
#1096					(* THEN *)
#1097		
#1098						(* CurrentPump := ((CurrentPump) MOD 3) + 1; *)
#1099						LD		CurrentPump	{LNXT:297|298|-1}
(*) UNDEF
A19059E4  F8DF 7758		ldr r7, [pc, #+1880] ; 0xA1A0005C
A19059E8  F9B7 0000		ldrsh r0, [r7]

#1100						MOD		3	{LNXT:297|298|-1}
(*) INT
A19059EC  2103     		mov r1, #3 ; 3
A19059EE  F85F 40CC		ldr r4, [pc, #-204] ; 0xA1904520
A19059F2  F044 0401		orr r4, r4, #1
A19059F6  47A0     		blx r4

#1101						ADD		1	{LNXT:297|298|-1}
(-) INT
A19059F8  1C40     		add r0, r0, #1

#1102						ST		CurrentPump	{LNXT:297|298|-1}
(*) INT
A19059FA  F8DF 7744		ldr r7, [pc, #+1860] ; 0xA1A0005C
A19059FE  8038     		strh r0, [r7]

#1103		
#1104						(* Motor_A := TRUE; *)
#1105						MOVE		TRUE,Motor_A	{LNXT:298|309|-1}
(*) INT
A1905A00  2001     		mov r0, #1 ; 1
A1905A02  F85F 78F0		ldr r7, [pc, #-2288] ; 0x100004AC
A1905A06  7038     		strb r0, [r7]

#1106						JMP		$label81	{LNXT:296|297|300}
(-) BOOL
A1905A08  E049     		b #146 ; 0xA1905A9E


#1107		$label80:
#1108		
#1109					(* ELSE *)
#1110		
#1111		
#1112						(* IF TestRunActive_1 AND NOT TestRunRunning_1 *)
#1113						LD		TestRunRunning_1	{LNXT:300|-1|-1}
(*) UNDEF
A1905A0C  F8DF 772C		ldr r7, [pc, #+1836] ; 0xA1A00059
A1905A10  7838     		ldrb r0, [r7]

#1114						NOT	{LNXT:300|-1|-1}
(*) BOOL
A1905A12  2800     		cmp r0, #0
A1905A14  BF08 2001		eqmov r0, #1
A1905A18  BF18 2000		nemov r0, #0

#1115						AND(		TestRunActive_1	{LNXT:300|-1|-1}
(*) BOOL
A1905A1C  B082     		sub sp, sp, #8
A1905A1E  F8CD 0000		str r0, [sp]
A1905A22  F8DF 7720		ldr r7, [pc, #+1824] ; 0xA1A0005E
A1905A26  7838     		ldrb r0, [r7]

#1116						NOT	{LNXT:300|-1|-1}
(*) BOOL
A1905A28  2800     		cmp r0, #0
A1905A2A  BF08 2001		eqmov r0, #1
A1905A2E  BF18 2000		nemov r0, #0

#1117						)	{LNXT:300|-1|-1}
(*) BOOL
A1905A32  4607     		mov r7, r0
A1905A34  F8DD 0000		ldr r0, [sp]
A1905A38  B002     		add sp, sp, #8
A1905A3A  4038     		and r0, r0, r7

#1118						JMPCN	$label82	{LNXT:300|301|309}
(-) BOOL
A1905A3C  2800     		cmp r0, #0
A1905A3E  D02E     		beq #92 ; 0xA1905A9E


#1119		
#1120						(* THEN *)
#1121		
#1122							(* PumpIntervalTimer_1 *)
#1123							MOVE		TRUE,PumpIntervalTimer_1.IN	{LNXT:301|-1|-1}
(*) BOOL
A1905A42  2001     		mov r0, #1 ; 1
A1905A44  F8DF 7708		ldr r7, [pc, #+1800] ; 0xA1A00064
A1905A48  7038     		strb r0, [r7]

#1124							MOVE		5000,PumpIntervalTimer_1.PT	{LNXT:301|-1|-1}
(*) BOOL
A1905A4A  F8DF 776C		ldr r7, [pc, #+1900] ; 0x1388
A1905A4E  4638     		mov r0, r7
A1905A50  F8DF 7700		ldr r7, [pc, #+1792] ; 0xA1A00068
A1905A54  6038     		str r0, [r7]

#1125							CAL		PumpIntervalTimer_1	{LNXT:301|302|-1}
(*) UDINT
A1905A56  E92D 0021		stmdb sp!, { r0, r5 }
A1905A5A  F8DF 56F0		ldr r5, [pc, #+1776] ; 0xA1A00060
A1905A5E  F85F 49B4		ldr r4, [pc, #-2484] ; 0xA1904570
A1905A62  F044 0401		orr r4, r4, #1
A1905A66  47A0     		blx r4
A1905A68  E8BD 0021		ldmia sp!, { r0, r5 }

#1126		
#1127		
#1128							(* IF PumpIntervalTimer_1.Q *)
#1129							LD		PumpIntervalTimer_1.Q	{LNXT:302|-1|-1}
(*) UNDEF
A1905A6C  F8DF 76E8		ldr r7, [pc, #+1768] ; 0xA1A0006C
A1905A70  7838     		ldrb r0, [r7]

#1130							JMPCN	$label83	{LNXT:302|303|309}
(-) BOOL
A1905A72  2800     		cmp r0, #0
A1905A74  D013     		beq #38 ; 0xA1905A9E


#1131		
#1132							(* THEN *)
#1133		
#1134								(* TestRunActive_1 := TRUE; *)
#1135								MOVE		TRUE,TestRunActive_1	{LNXT:303|304|-1}
(*) BOOL
A1905A78  2001     		mov r0, #1 ; 1
A1905A7A  F8DF 76C8		ldr r7, [pc, #+1736] ; 0xA1A0005E
A1905A7E  7038     		strb r0, [r7]

#1136		
#1137								(* PumpIntervalTimer_1 *)
#1138								MOVE		FALSE,PumpIntervalTimer_1.IN	{LNXT:304|-1|-1}
(*) BOOL
A1905A80  2000     		mov r0, #0 ; 0
A1905A82  F8DF 76CC		ldr r7, [pc, #+1740] ; 0xA1A00064
A1905A86  7038     		strb r0, [r7]

#1139								CAL		PumpIntervalTimer_1	{LNXT:304|309|-1}
(*) BOOL
A1905A88  E92D 0021		stmdb sp!, { r0, r5 }
A1905A8C  F8DF 56BC		ldr r5, [pc, #+1724] ; 0xA1A00060
A1905A90  F85F 49E8		ldr r4, [pc, #-2536] ; 0xA1904570
A1905A94  F044 0401		orr r4, r4, #1
A1905A98  47A0     		blx r4
A1905A9A  E8BD 0021		ldmia sp!, { r0, r5 }

#1140		
#1141		$label83:
#1142							(* END_IF *)
#1143		
#1144		$label82:
#1145						(* END_IF *)
#1146		
#1147		$label81:
#1148					(* END_IF *)
#1149		
#1150		
#1151					(* IF TestRunActive_1 *)
#1152					LD		TestRunActive_1	{LNXT:309|-1|-1}
(*) UNDEF
A1905A9E  F8DF 76A4		ldr r7, [pc, #+1700] ; 0xA1A0005E
A1905AA2  7838     		ldrb r0, [r7]

#1153					JMPCN	$label84	{LNXT:309|310|400}
(-) BOOL
A1905AA4  2800     		cmp r0, #0
A1905AA6  F000 8094		beq #296 ; 0xA1905BD2


#1154		
#1155					(* THEN *)
#1156		
#1157		
#1158						(* IF TestRunRunning_1 *)
#1159						LD		TestRunRunning_1	{LNXT:310|-1|-1}
(*) UNDEF
A1905AAA  F8DF 7690		ldr r7, [pc, #+1680] ; 0xA1A00059
A1905AAE  7838     		ldrb r0, [r7]

#1160						NOT	{LNXT:310|-1|-1}
(*) BOOL
A1905AB0  2800     		cmp r0, #0
A1905AB2  BF08 2001		eqmov r0, #1
A1905AB6  BF18 2000		nemov r0, #0

#1161						JMPCN	$label85	{LNXT:310|311|314}
(-) BOOL
A1905ABA  2800     		cmp r0, #0
A1905ABC  D004     		beq #8 ; 0xA1905AC8


#1162		
#1163						(* THEN *)
#1164		
#1165							(* TestRunRunning_1 := TRUE; *)
#1166							MOVE		TRUE,TestRunRunning_1	{LNXT:311|314|-1}
(*) BOOL
A1905AC0  2001     		mov r0, #1 ; 1
A1905AC2  F8DF 7678		ldr r7, [pc, #+1656] ; 0xA1A00059
A1905AC6  7038     		strb r0, [r7]

#1167		
#1168		$label85:
#1169						(* END_IF *)
#1170		
#1171		
#1172						(* IF TestRunRunning_1 AND Tank_Level < Level_2 And  Avto_A and not alarm_pumps.0 *)
#1173						LD		alarm_pumps.0	{LNXT:314|-1|-1}
(*) UNDEF
A1905AC8  F85F 7A3C		ldr r7, [pc, #-2620] ; 0xA0003FC0
A1905ACC  8838     		ldrh r0, [r7]
A1905ACE  F3C0 0000		ubfx r0, r0, #0, #1

#1174						NOT	{LNXT:314|-1|-1}
(*) BOOL
A1905AD2  2800     		cmp r0, #0
A1905AD4  BF08 2001		eqmov r0, #1
A1905AD8  BF18 2000		nemov r0, #0

#1175						AND(		Tank_Level	{LNXT:314|-1|-1}
(*) BOOL
A1905ADC  B082     		sub sp, sp, #8
A1905ADE  F8CD 0000		str r0, [sp]
A1905AE2  F85F 7A30		ldr r7, [pc, #-2608] ; 0xA1A00012
A1905AE6  F9B7 0000		ldrsh r0, [r7]

#1176						LT		Level_2	{LNXT:314|-1|-1}
(*) INT
A1905AEA  F85F 7A90		ldr r7, [pc, #-2704] ; 0xA0003F08
A1905AEE  F9B7 7000		ldrsh r7, [r7]
A1905AF2  42B8     		cmp r0, r7
A1905AF4  BFA8 2000		gemov r0, #0
A1905AF8  BFB8 2001		ltmov r0, #1

#1177						AND		TestRunRunning_1	{LNXT:314|-1|-1}
(*) BOOL
A1905AFC  F8DF 763C		ldr r7, [pc, #+1596] ; 0xA1A00059
A1905B00  783F     		ldrb r7, [r7]
A1905B02  4038     		and r0, r0, r7

#1178						AND		Avto_A	{LNXT:314|-1|-1}
(*) BOOL
A1905B04  F85F 7A28		ldr r7, [pc, #-2600] ; 0xA1A0002F
A1905B08  783F     		ldrb r7, [r7]
A1905B0A  4038     		and r0, r0, r7

#1179						)	{LNXT:314|-1|-1}
(*) BOOL
A1905B0C  4607     		mov r7, r0
A1905B0E  F8DD 0000		ldr r0, [sp]
A1905B12  B002     		add sp, sp, #8
A1905B14  4038     		and r0, r0, r7

#1180						JMPCN	$label86	{LNXT:314|315|400}
(-) BOOL
A1905B16  2800     		cmp r0, #0
A1905B18  D05B     		beq #182 ; 0xA1905BD2


#1181		
#1182						(* THEN *)
#1183		
#1184							(* PumpRunTimer_1 *)
#1185							LD		TestRunActive_1	{LNXT:315|-1|-1}
(*) UNDEF
A1905B1C  F8DF 7624		ldr r7, [pc, #+1572] ; 0xA1A0005E
A1905B20  7838     		ldrb r0, [r7]

#1186							AND		TestRunRunning_1	{LNXT:315|-1|-1}
(*) BOOL
A1905B22  F8DF 7618		ldr r7, [pc, #+1560] ; 0xA1A00059
A1905B26  783F     		ldrb r7, [r7]
A1905B28  4038     		and r0, r0, r7

#1187							ST		PumpRunTimer_1.IN	{LNXT:315|-1|-1}
(*) BOOL
A1905B2A  F8DF 7634		ldr r7, [pc, #+1588] ; 0xA1A00078
A1905B2E  7038     		strb r0, [r7]

#1188							MOVE		5000,PumpRunTimer_1.PT	{LNXT:315|-1|-1}
(*) BOOL
A1905B30  F8DF 7684		ldr r7, [pc, #+1668] ; 0x1388
A1905B34  4638     		mov r0, r7
A1905B36  F8DF 762C		ldr r7, [pc, #+1580] ; 0xA1A0007C
A1905B3A  6038     		str r0, [r7]

#1189							CAL		PumpRunTimer_1	{LNXT:315|316|-1}
(*) UDINT
A1905B3C  E92D 0021		stmdb sp!, { r0, r5 }
A1905B40  F8DF 5618		ldr r5, [pc, #+1560] ; 0xA1A00074
A1905B44  F85F 4A9C		ldr r4, [pc, #-2716] ; 0xA1904570
A1905B48  F044 0401		orr r4, r4, #1
A1905B4C  47A0     		blx r4
A1905B4E  E8BD 0021		ldmia sp!, { r0, r5 }

#1190		
#1191		
#1192							(* IF PumpRunTimer_1.Q *)
#1193							LD		PumpRunTimer_1.Q	{LNXT:316|-1|-1}
(*) UNDEF
A1905B52  F8DF 7614		ldr r7, [pc, #+1556] ; 0xA1A00080
A1905B56  7838     		ldrb r0, [r7]

#1194							NOT	{LNXT:316|-1|-1}
(*) BOOL
A1905B58  2800     		cmp r0, #0
A1905B5A  BF08 2001		eqmov r0, #1
A1905B5E  BF18 2000		nemov r0, #0

#1195							JMPCN	$label87	{LNXT:316|317|319}
(-) BOOL
A1905B62  2800     		cmp r0, #0
A1905B64  D006     		beq #12 ; 0xA1905B74


#1196		
#1197							(* THEN *)
#1198		
#1199								(* Motor_A := TRUE; *)
#1200								MOVE		TRUE,Motor_A	{LNXT:317|400|-1}
(*) BOOL
A1905B68  2001     		mov r0, #1 ; 1
A1905B6A  F85F 7A58		ldr r7, [pc, #-2648] ; 0x100004AC
A1905B6E  7038     		strb r0, [r7]

#1201								JMP		$label88	{LNXT:316|317|319}
(-) BOOL
A1905B70  E02F     		b #94 ; 0xA1905BD2


#1202		$label87:
#1203		
#1204							(* ELSE *)
#1205		
#1206								(* Motor_A := FALSE; *)
#1207								MOVE		FALSE,Motor_A	{LNXT:319|320|-1}
(*) BOOL
A1905B74  2000     		mov r0, #0 ; 0
A1905B76  F85F 7A64		ldr r7, [pc, #-2660] ; 0x100004AC
A1905B7A  7038     		strb r0, [r7]

#1208		
#1209								(* TestRunRunning_1 := FALSE; *)
#1210								MOVE		FALSE,TestRunRunning_1	{LNXT:320|321|-1}
(*) BOOL
A1905B7C  2000     		mov r0, #0 ; 0
A1905B7E  F8DF 75BC		ldr r7, [pc, #+1468] ; 0xA1A00059
A1905B82  7038     		strb r0, [r7]

#1211		
#1212								(* TestRunActive_1 := FALSE; *)
#1213								MOVE		FALSE,TestRunActive_1	{LNXT:321|322|-1}
(*) BOOL
A1905B84  2000     		mov r0, #0 ; 0
A1905B86  F8DF 75BC		ldr r7, [pc, #+1468] ; 0xA1A0005E
A1905B8A  7038     		strb r0, [r7]

#1214		
#1215								(* PumpRunTimer_1 *)
#1216								MOVE		FALSE,PumpRunTimer_1.IN	{LNXT:322|-1|-1}
(*) BOOL
A1905B8C  2000     		mov r0, #0 ; 0
A1905B8E  F8DF 75D0		ldr r7, [pc, #+1488] ; 0xA1A00078
A1905B92  7038     		strb r0, [r7]

#1217								MOVE		5000,PumpRunTimer_1.PT	{LNXT:322|-1|-1}
(*) BOOL
A1905B94  F8DF 7620		ldr r7, [pc, #+1568] ; 0x1388
A1905B98  4638     		mov r0, r7
A1905B9A  F8DF 75C8		ldr r7, [pc, #+1480] ; 0xA1A0007C
A1905B9E  6038     		str r0, [r7]

#1218								CAL		PumpRunTimer_1	{LNXT:322|323|-1}
(*) UDINT
A1905BA0  E92D 0021		stmdb sp!, { r0, r5 }
A1905BA4  F8DF 55B4		ldr r5, [pc, #+1460] ; 0xA1A00074
A1905BA8  F85F 4B00		ldr r4, [pc, #-2816] ; 0xA1904570
A1905BAC  F044 0401		orr r4, r4, #1
A1905BB0  47A0     		blx r4
A1905BB2  E8BD 0021		ldmia sp!, { r0, r5 }

#1219		
#1220								(* CurrentPump := ((CurrentPump) MOD 3) + 1; *)
#1221								LD		CurrentPump	{LNXT:323|400|-1}
(*) UNDEF
A1905BB6  F8DF 7588		ldr r7, [pc, #+1416] ; 0xA1A0005C
A1905BBA  F9B7 0000		ldrsh r0, [r7]

#1222								MOD		3	{LNXT:323|400|-1}
(*) INT
A1905BBE  2103     		mov r1, #3 ; 3
A1905BC0  F85F 42A0		ldr r4, [pc, #-672] ; 0xA1904520
A1905BC4  F044 0401		orr r4, r4, #1
A1905BC8  47A0     		blx r4

#1223								ADD		1	{LNXT:323|400|-1}
(-) INT
A1905BCA  1C40     		add r0, r0, #1

#1224								ST		CurrentPump	{LNXT:323|400|-1}
(*) INT
A1905BCC  F8DF 7570		ldr r7, [pc, #+1392] ; 0xA1A0005C
A1905BD0  8038     		strh r0, [r7]

#1225		
#1226		$label88:
#1227							(* END_IF *)
#1228		
#1229		$label86:
#1230						(* END_IF *)
#1231		
#1232		$label84:
#1233					(* END_IF *)
#1234					JMP		$label76	{LNXT:1|400|-1}
(-) INT
A1905BD2  E232     		b #1124 ; 0xA190603A


#1235		
#1236		$label78:
#1237		
#1238					(* IF Tank_Level >= Level_1 AND Priority = 1 *)
#1239					LD		Priority	{LNXT:329|-1|-1}
(*) UNDEF
A1905BD6  F85F 7B74		ldr r7, [pc, #-2932] ; 0xA0003F0C
A1905BDA  F9B7 0000		ldrsh r0, [r7]

#1240					EQ		1	{LNXT:329|-1|-1}
(*) INT
A1905BDE  2801     		cmp r0, #1
A1905BE0  BF18 2000		nemov r0, #0
A1905BE4  BF08 2001		eqmov r0, #1

#1241					AND(		Tank_Level	{LNXT:329|-1|-1}
(*) BOOL
A1905BE8  B082     		sub sp, sp, #8
A1905BEA  F8CD 0000		str r0, [sp]
A1905BEE  F85F 7B3C		ldr r7, [pc, #-2876] ; 0xA1A00012
A1905BF2  F9B7 0000		ldrsh r0, [r7]

#1242					GE		Level_1	{LNXT:329|-1|-1}
(*) INT
A1905BF6  F85F 7BA0		ldr r7, [pc, #-2976] ; 0xA0003F06
A1905BFA  F9B7 7000		ldrsh r7, [r7]
A1905BFE  42B8     		cmp r0, r7
A1905C00  BFB8 2000		ltmov r0, #0
A1905C04  BFA8 2001		gemov r0, #1

#1243					)	{LNXT:329|-1|-1}
(*) BOOL
A1905C08  4607     		mov r7, r0
A1905C0A  F8DD 0000		ldr r0, [sp]
A1905C0E  B002     		add sp, sp, #8
A1905C10  4038     		and r0, r0, r7

#1244					JMPCN	$label89	{LNXT:329|330|333}
(-) BOOL
A1905C12  2800     		cmp r0, #0
A1905C14  D014     		beq #40 ; 0xA1905C40


#1245		
#1246					(* THEN *)
#1247		
#1248						(* CurrentPump := ((CurrentPump) MOD 3) + 1; *)
#1249						LD		CurrentPump	{LNXT:330|331|-1}
(*) UNDEF
A1905C18  F8DF 7524		ldr r7, [pc, #+1316] ; 0xA1A0005C
A1905C1C  F9B7 0000		ldrsh r0, [r7]

#1250						MOD		3	{LNXT:330|331|-1}
(*) INT
A1905C20  2103     		mov r1, #3 ; 3
A1905C22  F85F 4300		ldr r4, [pc, #-768] ; 0xA1904520
A1905C26  F044 0401		orr r4, r4, #1
A1905C2A  47A0     		blx r4

#1251						ADD		1	{LNXT:330|331|-1}
(-) INT
A1905C2C  1C40     		add r0, r0, #1

#1252						ST		CurrentPump	{LNXT:330|331|-1}
(*) INT
A1905C2E  F8DF 7510		ldr r7, [pc, #+1296] ; 0xA1A0005C
A1905C32  8038     		strh r0, [r7]

#1253		
#1254						(* Motor_B := TRUE; *)
#1255						MOVE		TRUE,Motor_B	{LNXT:331|341|-1}
(*) INT
A1905C34  2001     		mov r0, #1 ; 1
A1905C36  F85F 7B20		ldr r7, [pc, #-2848] ; 0x100004AD
A1905C3A  7038     		strb r0, [r7]

#1256						JMP		$label90	{LNXT:329|330|333}
(-) BOOL
A1905C3C  E049     		b #146 ; 0xA1905CD2


#1257		$label89:
#1258		
#1259					(* ELSE *)
#1260		
#1261		
#1262						(* IF TestRunActive_2 AND NOT TestRunRunning_2 *)
#1263						LD		TestRunRunning_2	{LNXT:333|-1|-1}
(*) UNDEF
A1905C40  F8DF 7504		ldr r7, [pc, #+1284] ; 0xA1A0005F
A1905C44  7838     		ldrb r0, [r7]

#1264						NOT	{LNXT:333|-1|-1}
(*) BOOL
A1905C46  2800     		cmp r0, #0
A1905C48  BF08 2001		eqmov r0, #1
A1905C4C  BF18 2000		nemov r0, #0

#1265						AND(		TestRunActive_2	{LNXT:333|-1|-1}
(*) BOOL
A1905C50  B082     		sub sp, sp, #8
A1905C52  F8CD 0000		str r0, [sp]
A1905C56  F8DF 7514		ldr r7, [pc, #+1300] ; 0xA1A00088
A1905C5A  7838     		ldrb r0, [r7]

#1266						NOT	{LNXT:333|-1|-1}
(*) BOOL
A1905C5C  2800     		cmp r0, #0
A1905C5E  BF08 2001		eqmov r0, #1
A1905C62  BF18 2000		nemov r0, #0

#1267						)	{LNXT:333|-1|-1}
(*) BOOL
A1905C66  4607     		mov r7, r0
A1905C68  F8DD 0000		ldr r0, [sp]
A1905C6C  B002     		add sp, sp, #8
A1905C6E  4038     		and r0, r0, r7

#1268						JMPCN	$label91	{LNXT:333|334|341}
(-) BOOL
A1905C70  2800     		cmp r0, #0
A1905C72  D02E     		beq #92 ; 0xA1905CD2


#1269		
#1270						(* THEN *)
#1271		
#1272							(* PumpIntervalTimer_2 *)
#1273							MOVE		TRUE,PumpIntervalTimer_2.IN	{LNXT:334|-1|-1}
(*) BOOL
A1905C76  2001     		mov r0, #1 ; 1
A1905C78  F8DF 7500		ldr r7, [pc, #+1280] ; 0xA1A00090
A1905C7C  7038     		strb r0, [r7]

#1274							MOVE		6000,PumpIntervalTimer_2.PT	{LNXT:334|-1|-1}
(*) BOOL
A1905C7E  F8DF 753C		ldr r7, [pc, #+1340] ; 0x1770
A1905C82  4638     		mov r0, r7
A1905C84  F8DF 74F8		ldr r7, [pc, #+1272] ; 0xA1A00094
A1905C88  6038     		str r0, [r7]

#1275							CAL		PumpIntervalTimer_2	{LNXT:334|335|-1}
(*) UDINT
A1905C8A  E92D 0021		stmdb sp!, { r0, r5 }
A1905C8E  F8DF 54E8		ldr r5, [pc, #+1256] ; 0xA1A0008C
A1905C92  F85F 4BE8		ldr r4, [pc, #-3048] ; 0xA1904570
A1905C96  F044 0401		orr r4, r4, #1
A1905C9A  47A0     		blx r4
A1905C9C  E8BD 0021		ldmia sp!, { r0, r5 }

#1276		
#1277		
#1278							(* IF PumpIntervalTimer_2.Q *)
#1279							LD		PumpIntervalTimer_2.Q	{LNXT:335|-1|-1}
(*) UNDEF
A1905CA0  F8DF 74E0		ldr r7, [pc, #+1248] ; 0xA1A00098
A1905CA4  7838     		ldrb r0, [r7]

#1280							JMPCN	$label92	{LNXT:335|336|341}
(-) BOOL
A1905CA6  2800     		cmp r0, #0
A1905CA8  D013     		beq #38 ; 0xA1905CD2


#1281		
#1282							(* THEN *)
#1283		
#1284								(* TestRunActive_2 := TRUE; *)
#1285								MOVE		TRUE,TestRunActive_2	{LNXT:336|337|-1}
(*) BOOL
A1905CAC  2001     		mov r0, #1 ; 1
A1905CAE  F8DF 74BC		ldr r7, [pc, #+1212] ; 0xA1A00088
A1905CB2  7038     		strb r0, [r7]

#1286		
#1287								(* PumpIntervalTimer_2 *)
#1288								MOVE		FALSE,PumpIntervalTimer_2.IN	{LNXT:337|-1|-1}
(*) BOOL
A1905CB4  2000     		mov r0, #0 ; 0
A1905CB6  F8DF 74C4		ldr r7, [pc, #+1220] ; 0xA1A00090
A1905CBA  7038     		strb r0, [r7]

#1289								CAL		PumpIntervalTimer_2	{LNXT:337|341|-1}
(*) BOOL
A1905CBC  E92D 0021		stmdb sp!, { r0, r5 }
A1905CC0  F8DF 54B4		ldr r5, [pc, #+1204] ; 0xA1A0008C
A1905CC4  F85F 4C1C		ldr r4, [pc, #-3100] ; 0xA1904570
A1905CC8  F044 0401		orr r4, r4, #1
A1905CCC  47A0     		blx r4
A1905CCE  E8BD 0021		ldmia sp!, { r0, r5 }

#1290		
#1291		$label92:
#1292							(* END_IF *)
#1293		
#1294		$label91:
#1295						(* END_IF *)
#1296		
#1297		$label90:
#1298					(* END_IF *)
#1299		
#1300		
#1301					(* IF TestRunActive_2 *)
#1302					LD		TestRunActive_2	{LNXT:341|-1|-1}
(*) UNDEF
A1905CD2  F8DF 7498		ldr r7, [pc, #+1176] ; 0xA1A00088
A1905CD6  7838     		ldrb r0, [r7]

#1303					JMPCN	$label93	{LNXT:341|342|400}
(-) BOOL
A1905CD8  2800     		cmp r0, #0
A1905CDA  F000 8094		beq #296 ; 0xA1905E06


#1304		
#1305					(* THEN *)
#1306		
#1307		
#1308						(* IF TestRunRunning_2 *)
#1309						LD		TestRunRunning_2	{LNXT:342|-1|-1}
(*) UNDEF
A1905CDE  F8DF 7468		ldr r7, [pc, #+1128] ; 0xA1A0005F
A1905CE2  7838     		ldrb r0, [r7]

#1310						NOT	{LNXT:342|-1|-1}
(*) BOOL
A1905CE4  2800     		cmp r0, #0
A1905CE6  BF08 2001		eqmov r0, #1
A1905CEA  BF18 2000		nemov r0, #0

#1311						JMPCN	$label94	{LNXT:342|343|345}
(-) BOOL
A1905CEE  2800     		cmp r0, #0
A1905CF0  D004     		beq #8 ; 0xA1905CFC


#1312		
#1313						(* THEN *)
#1314		
#1315							(* TestRunRunning_2 := TRUE; *)
#1316							MOVE		TRUE,TestRunRunning_2	{LNXT:343|345|-1}
(*) BOOL
A1905CF4  2001     		mov r0, #1 ; 1
A1905CF6  F8DF 7450		ldr r7, [pc, #+1104] ; 0xA1A0005F
A1905CFA  7038     		strb r0, [r7]

#1317		
#1318		$label94:
#1319						(* END_IF *)
#1320		
#1321		
#1322						(* IF TestRunRunning_2 AND Tank_Level < Level_2 And  Avto_B and not alarm_pumps.1 *)
#1323						LD		alarm_pumps.1	{LNXT:345|-1|-1}
(*) UNDEF
A1905CFC  F85F 7C70		ldr r7, [pc, #-3184] ; 0xA0003FC0
A1905D00  8838     		ldrh r0, [r7]
A1905D02  F3C0 0040		ubfx r0, r0, #1, #1

#1324						NOT	{LNXT:345|-1|-1}
(*) BOOL
A1905D06  2800     		cmp r0, #0
A1905D08  BF08 2001		eqmov r0, #1
A1905D0C  BF18 2000		nemov r0, #0

#1325						AND(		Tank_Level	{LNXT:345|-1|-1}
(*) BOOL
A1905D10  B082     		sub sp, sp, #8
A1905D12  F8CD 0000		str r0, [sp]
A1905D16  F85F 7C64		ldr r7, [pc, #-3172] ; 0xA1A00012
A1905D1A  F9B7 0000		ldrsh r0, [r7]

#1326						LT		Level_2	{LNXT:345|-1|-1}
(*) INT
A1905D1E  F85F 7CC4		ldr r7, [pc, #-3268] ; 0xA0003F08
A1905D22  F9B7 7000		ldrsh r7, [r7]
A1905D26  42B8     		cmp r0, r7
A1905D28  BFA8 2000		gemov r0, #0
A1905D2C  BFB8 2001		ltmov r0, #1

#1327						AND		TestRunRunning_2	{LNXT:345|-1|-1}
(*) BOOL
A1905D30  F8DF 7414		ldr r7, [pc, #+1044] ; 0xA1A0005F
A1905D34  783F     		ldrb r7, [r7]
A1905D36  4038     		and r0, r0, r7

#1328						AND		Avto_B	{LNXT:345|-1|-1}
(*) BOOL
A1905D38  F85F 7C68		ldr r7, [pc, #-3176] ; 0xA1A0002C
A1905D3C  783F     		ldrb r7, [r7]
A1905D3E  4038     		and r0, r0, r7

#1329						)	{LNXT:345|-1|-1}
(*) BOOL
A1905D40  4607     		mov r7, r0
A1905D42  F8DD 0000		ldr r0, [sp]
A1905D46  B002     		add sp, sp, #8
A1905D48  4038     		and r0, r0, r7

#1330						JMPCN	$label95	{LNXT:345|346|400}
(-) BOOL
A1905D4A  2800     		cmp r0, #0
A1905D4C  D05B     		beq #182 ; 0xA1905E06


#1331		
#1332						(* THEN *)
#1333		
#1334							(* PumpRunTimer_2 *)
#1335							LD		TestRunActive_2	{LNXT:346|-1|-1}
(*) UNDEF
A1905D50  F8DF 7418		ldr r7, [pc, #+1048] ; 0xA1A00088
A1905D54  7838     		ldrb r0, [r7]

#1336							AND		TestRunRunning_2	{LNXT:346|-1|-1}
(*) BOOL
A1905D56  F8DF 73F0		ldr r7, [pc, #+1008] ; 0xA1A0005F
A1905D5A  783F     		ldrb r7, [r7]
A1905D5C  4038     		and r0, r0, r7

#1337							ST		PumpRunTimer_2.IN	{LNXT:346|-1|-1}
(*) BOOL
A1905D5E  F8DF 742C		ldr r7, [pc, #+1068] ; 0xA1A000A4
A1905D62  7038     		strb r0, [r7]

#1338							MOVE		6000,PumpRunTimer_2.PT	{LNXT:346|-1|-1}
(*) BOOL
A1905D64  F8DF 7454		ldr r7, [pc, #+1108] ; 0x1770
A1905D68  4638     		mov r0, r7
A1905D6A  F8DF 7424		ldr r7, [pc, #+1060] ; 0xA1A000A8
A1905D6E  6038     		str r0, [r7]

#1339							CAL		PumpRunTimer_2	{LNXT:346|347|-1}
(*) UDINT
A1905D70  E92D 0021		stmdb sp!, { r0, r5 }
A1905D74  F8DF 5410		ldr r5, [pc, #+1040] ; 0xA1A000A0
A1905D78  F85F 4CD0		ldr r4, [pc, #-3280] ; 0xA1904570
A1905D7C  F044 0401		orr r4, r4, #1
A1905D80  47A0     		blx r4
A1905D82  E8BD 0021		ldmia sp!, { r0, r5 }

#1340		
#1341		
#1342							(* IF PumpRunTimer_2.Q *)
#1343							LD		PumpRunTimer_2.Q	{LNXT:347|-1|-1}
(*) UNDEF
A1905D86  F8DF 740C		ldr r7, [pc, #+1036] ; 0xA1A000AC
A1905D8A  7838     		ldrb r0, [r7]

#1344							NOT	{LNXT:347|-1|-1}
(*) BOOL
A1905D8C  2800     		cmp r0, #0
A1905D8E  BF08 2001		eqmov r0, #1
A1905D92  BF18 2000		nemov r0, #0

#1345							JMPCN	$label96	{LNXT:347|348|350}
(-) BOOL
A1905D96  2800     		cmp r0, #0
A1905D98  D006     		beq #12 ; 0xA1905DA8


#1346		
#1347							(* THEN *)
#1348		
#1349								(* Motor_B := TRUE; *)
#1350								MOVE		TRUE,Motor_B	{LNXT:348|400|-1}
(*) BOOL
A1905D9C  2001     		mov r0, #1 ; 1
A1905D9E  F85F 7C88		ldr r7, [pc, #-3208] ; 0x100004AD
A1905DA2  7038     		strb r0, [r7]

#1351								JMP		$label97	{LNXT:347|348|350}
(-) BOOL
A1905DA4  E02F     		b #94 ; 0xA1905E06


#1352		$label96:
#1353		
#1354							(* ELSE *)
#1355		
#1356								(* Motor_B := FALSE; *)
#1357								MOVE		FALSE,Motor_B	{LNXT:350|351|-1}
(*) BOOL
A1905DA8  2000     		mov r0, #0 ; 0
A1905DAA  F85F 7C94		ldr r7, [pc, #-3220] ; 0x100004AD
A1905DAE  7038     		strb r0, [r7]

#1358		
#1359								(* TestRunRunning_2 := FALSE; *)
#1360								MOVE		FALSE,TestRunRunning_2	{LNXT:351|352|-1}
(*) BOOL
A1905DB0  2000     		mov r0, #0 ; 0
A1905DB2  F8DF 7394		ldr r7, [pc, #+916] ; 0xA1A0005F
A1905DB6  7038     		strb r0, [r7]

#1361		
#1362								(* TestRunActive_2 := FALSE; *)
#1363								MOVE		FALSE,TestRunActive_2	{LNXT:352|353|-1}
(*) BOOL
A1905DB8  2000     		mov r0, #0 ; 0
A1905DBA  F8DF 73B0		ldr r7, [pc, #+944] ; 0xA1A00088
A1905DBE  7038     		strb r0, [r7]

#1364		
#1365								(* PumpRunTimer_2 *)
#1366								MOVE		FALSE,PumpRunTimer_2.IN	{LNXT:353|-1|-1}
(*) BOOL
A1905DC0  2000     		mov r0, #0 ; 0
A1905DC2  F8DF 73C8		ldr r7, [pc, #+968] ; 0xA1A000A4
A1905DC6  7038     		strb r0, [r7]

#1367								MOVE		6000,PumpRunTimer_2.PT	{LNXT:353|-1|-1}
(*) BOOL
A1905DC8  F8DF 73F0		ldr r7, [pc, #+1008] ; 0x1770
A1905DCC  4638     		mov r0, r7
A1905DCE  F8DF 73C0		ldr r7, [pc, #+960] ; 0xA1A000A8
A1905DD2  6038     		str r0, [r7]

#1368								CAL		PumpRunTimer_2	{LNXT:353|354|-1}
(*) UDINT
A1905DD4  E92D 0021		stmdb sp!, { r0, r5 }
A1905DD8  F8DF 53AC		ldr r5, [pc, #+940] ; 0xA1A000A0
A1905DDC  F85F 4D34		ldr r4, [pc, #-3380] ; 0xA1904570
A1905DE0  F044 0401		orr r4, r4, #1
A1905DE4  47A0     		blx r4
A1905DE6  E8BD 0021		ldmia sp!, { r0, r5 }

#1369		
#1370								(* CurrentPump := ((CurrentPump) MOD 3) + 1; *)
#1371								LD		CurrentPump	{LNXT:354|400|-1}
(*) UNDEF
A1905DEA  F8DF 7354		ldr r7, [pc, #+852] ; 0xA1A0005C
A1905DEE  F9B7 0000		ldrsh r0, [r7]

#1372								MOD		3	{LNXT:354|400|-1}
(*) INT
A1905DF2  2103     		mov r1, #3 ; 3
A1905DF4  F85F 44D4		ldr r4, [pc, #-1236] ; 0xA1904520
A1905DF8  F044 0401		orr r4, r4, #1
A1905DFC  47A0     		blx r4

#1373								ADD		1	{LNXT:354|400|-1}
(-) INT
A1905DFE  1C40     		add r0, r0, #1

#1374								ST		CurrentPump	{LNXT:354|400|-1}
(*) INT
A1905E00  F8DF 733C		ldr r7, [pc, #+828] ; 0xA1A0005C
A1905E04  8038     		strh r0, [r7]

#1375		
#1376		$label97:
#1377							(* END_IF *)
#1378		
#1379		$label95:
#1380						(* END_IF *)
#1381		
#1382		$label93:
#1383					(* END_IF *)
#1384					JMP		$label76	{LNXT:1|400|-1}
(-) INT
A1905E06  E118     		b #560 ; 0xA190603A


#1385		
#1386		$label79:
#1387		
#1388					(* IF Tank_Level >= Level_1 AND Priority = 2 *)
#1389					LD		Priority	{LNXT:360|-1|-1}
(*) UNDEF
A1905E0A  F85F 7DA8		ldr r7, [pc, #-3496] ; 0xA0003F0C
A1905E0E  F9B7 0000		ldrsh r0, [r7]

#1390					EQ		2	{LNXT:360|-1|-1}
(*) INT
A1905E12  2802     		cmp r0, #2
A1905E14  BF18 2000		nemov r0, #0
A1905E18  BF08 2001		eqmov r0, #1

#1391					AND(		Tank_Level	{LNXT:360|-1|-1}
(*) BOOL
A1905E1C  B082     		sub sp, sp, #8
A1905E1E  F8CD 0000		str r0, [sp]
A1905E22  F85F 7D70		ldr r7, [pc, #-3440] ; 0xA1A00012
A1905E26  F9B7 0000		ldrsh r0, [r7]

#1392					GE		Level_1	{LNXT:360|-1|-1}
(*) INT
A1905E2A  F85F 7DD4		ldr r7, [pc, #-3540] ; 0xA0003F06
A1905E2E  F9B7 7000		ldrsh r7, [r7]
A1905E32  42B8     		cmp r0, r7
A1905E34  BFB8 2000		ltmov r0, #0
A1905E38  BFA8 2001		gemov r0, #1

#1393					)	{LNXT:360|-1|-1}
(*) BOOL
A1905E3C  4607     		mov r7, r0
A1905E3E  F8DD 0000		ldr r0, [sp]
A1905E42  B002     		add sp, sp, #8
A1905E44  4038     		and r0, r0, r7

#1394					JMPCN	$label98	{LNXT:360|361|364}
(-) BOOL
A1905E46  2800     		cmp r0, #0
A1905E48  D014     		beq #40 ; 0xA1905E74


#1395		
#1396					(* THEN *)
#1397		
#1398						(* CurrentPump := ((CurrentPump) MOD 3) + 1; *)
#1399						LD		CurrentPump	{LNXT:361|362|-1}
(*) UNDEF
A1905E4C  F8DF 72F0		ldr r7, [pc, #+752] ; 0xA1A0005C
A1905E50  F9B7 0000		ldrsh r0, [r7]

#1400						MOD		3	{LNXT:361|362|-1}
(*) INT
A1905E54  2103     		mov r1, #3 ; 3
A1905E56  F85F 4534		ldr r4, [pc, #-1332] ; 0xA1904520
A1905E5A  F044 0401		orr r4, r4, #1
A1905E5E  47A0     		blx r4

#1401						ADD		1	{LNXT:361|362|-1}
(-) INT
A1905E60  1C40     		add r0, r0, #1

#1402						ST		CurrentPump	{LNXT:361|362|-1}
(*) INT
A1905E62  F8DF 72DC		ldr r7, [pc, #+732] ; 0xA1A0005C
A1905E66  8038     		strh r0, [r7]

#1403		
#1404						(* Motor_C := TRUE; *)
#1405						MOVE		TRUE,Motor_C	{LNXT:362|372|-1}
(*) INT
A1905E68  2001     		mov r0, #1 ; 1
A1905E6A  F85F 7D50		ldr r7, [pc, #-3408] ; 0x100004AE
A1905E6E  7038     		strb r0, [r7]

#1406						JMP		$label99	{LNXT:360|361|364}
(-) BOOL
A1905E70  E049     		b #146 ; 0xA1905F06


#1407		$label98:
#1408		
#1409					(* ELSE *)
#1410		
#1411		
#1412						(* IF TestRunActive_3 AND NOT TestRunRunning_3 *)
#1413						LD		TestRunRunning_3	{LNXT:364|-1|-1}
(*) UNDEF
A1905E74  F8DF 72F8		ldr r7, [pc, #+760] ; 0xA1A00089
A1905E78  7838     		ldrb r0, [r7]

#1414						NOT	{LNXT:364|-1|-1}
(*) BOOL
A1905E7A  2800     		cmp r0, #0
A1905E7C  BF08 2001		eqmov r0, #1
A1905E80  BF18 2000		nemov r0, #0

#1415						AND(		TestRunActive_3	{LNXT:364|-1|-1}
(*) BOOL
A1905E84  B082     		sub sp, sp, #8
A1905E86  F8CD 0000		str r0, [sp]
A1905E8A  F8DF 72E8		ldr r7, [pc, #+744] ; 0xA1A0008B
A1905E8E  7838     		ldrb r0, [r7]

#1416						NOT	{LNXT:364|-1|-1}
(*) BOOL
A1905E90  2800     		cmp r0, #0
A1905E92  BF08 2001		eqmov r0, #1
A1905E96  BF18 2000		nemov r0, #0

#1417						)	{LNXT:364|-1|-1}
(*) BOOL
A1905E9A  4607     		mov r7, r0
A1905E9C  F8DD 0000		ldr r0, [sp]
A1905EA0  B002     		add sp, sp, #8
A1905EA2  4038     		and r0, r0, r7

#1418						JMPCN	$label100	{LNXT:364|365|372}
(-) BOOL
A1905EA4  2800     		cmp r0, #0
A1905EA6  D02E     		beq #92 ; 0xA1905F06


#1419		
#1420						(* THEN *)
#1421		
#1422							(* PumpIntervalTimer_3 *)
#1423							MOVE		TRUE,PumpIntervalTimer_3.IN	{LNXT:365|-1|-1}
(*) BOOL
A1905EAA  2001     		mov r0, #1 ; 1
A1905EAC  F8DF 72EC		ldr r7, [pc, #+748] ; 0xA1A000B8
A1905EB0  7038     		strb r0, [r7]

#1424							MOVE		7000,PumpIntervalTimer_3.PT	{LNXT:365|-1|-1}
(*) BOOL
A1905EB2  F8DF 730C		ldr r7, [pc, #+780] ; 0x1B58
A1905EB6  4638     		mov r0, r7
A1905EB8  F8DF 72E4		ldr r7, [pc, #+740] ; 0xA1A000BC
A1905EBC  6038     		str r0, [r7]

#1425							CAL		PumpIntervalTimer_3	{LNXT:365|366|-1}
(*) UDINT
A1905EBE  E92D 0021		stmdb sp!, { r0, r5 }
A1905EC2  F8DF 52D4		ldr r5, [pc, #+724] ; 0xA1A000B4
A1905EC6  F85F 4E1C		ldr r4, [pc, #-3612] ; 0xA1904570
A1905ECA  F044 0401		orr r4, r4, #1
A1905ECE  47A0     		blx r4
A1905ED0  E8BD 0021		ldmia sp!, { r0, r5 }

#1426		
#1427		
#1428							(* IF PumpIntervalTimer_3.Q *)
#1429							LD		PumpIntervalTimer_3.Q	{LNXT:366|-1|-1}
(*) UNDEF
A1905ED4  F8DF 72CC		ldr r7, [pc, #+716] ; 0xA1A000C0
A1905ED8  7838     		ldrb r0, [r7]

#1430							JMPCN	$label101	{LNXT:366|367|372}
(-) BOOL
A1905EDA  2800     		cmp r0, #0
A1905EDC  D013     		beq #38 ; 0xA1905F06


#1431		
#1432							(* THEN *)
#1433		
#1434								(* TestRunActive_3 := TRUE; *)
#1435								MOVE		TRUE,TestRunActive_3	{LNXT:367|368|-1}
(*) BOOL
A1905EE0  2001     		mov r0, #1 ; 1
A1905EE2  F8DF 7290		ldr r7, [pc, #+656] ; 0xA1A0008B
A1905EE6  7038     		strb r0, [r7]

#1436		
#1437								(* PumpIntervalTimer_3 *)
#1438								MOVE		FALSE,PumpIntervalTimer_3.IN	{LNXT:368|-1|-1}
(*) BOOL
A1905EE8  2000     		mov r0, #0 ; 0
A1905EEA  F8DF 72B0		ldr r7, [pc, #+688] ; 0xA1A000B8
A1905EEE  7038     		strb r0, [r7]

#1439								CAL		PumpIntervalTimer_3	{LNXT:368|372|-1}
(*) BOOL
A1905EF0  E92D 0021		stmdb sp!, { r0, r5 }
A1905EF4  F8DF 52A0		ldr r5, [pc, #+672] ; 0xA1A000B4
A1905EF8  F85F 4E50		ldr r4, [pc, #-3664] ; 0xA1904570
A1905EFC  F044 0401		orr r4, r4, #1
A1905F00  47A0     		blx r4
A1905F02  E8BD 0021		ldmia sp!, { r0, r5 }

#1440		
#1441		$label101:
#1442							(* END_IF *)
#1443		
#1444		$label100:
#1445						(* END_IF *)
#1446		
#1447		$label99:
#1448					(* END_IF *)
#1449		
#1450		
#1451					(* IF TestRunActive_3 *)
#1452					LD		TestRunActive_3	{LNXT:372|-1|-1}
(*) UNDEF
A1905F06  F8DF 726C		ldr r7, [pc, #+620] ; 0xA1A0008B
A1905F0A  7838     		ldrb r0, [r7]

#1453					JMPCN	$label102	{LNXT:372|373|400}
(-) BOOL
A1905F0C  2800     		cmp r0, #0
A1905F0E  F000 8094		beq #296 ; 0xA190603A


#1454		
#1455					(* THEN *)
#1456		
#1457		
#1458						(* IF TestRunRunning_3 *)
#1459						LD		TestRunRunning_3	{LNXT:373|-1|-1}
(*) UNDEF
A1905F12  F8DF 725C		ldr r7, [pc, #+604] ; 0xA1A00089
A1905F16  7838     		ldrb r0, [r7]

#1460						NOT	{LNXT:373|-1|-1}
(*) BOOL
A1905F18  2800     		cmp r0, #0
A1905F1A  BF08 2001		eqmov r0, #1
A1905F1E  BF18 2000		nemov r0, #0

#1461						JMPCN	$label103	{LNXT:373|374|376}
(-) BOOL
A1905F22  2800     		cmp r0, #0
A1905F24  D004     		beq #8 ; 0xA1905F30


#1462		
#1463						(* THEN *)
#1464		
#1465							(* TestRunRunning_3 := TRUE; *)
#1466							MOVE		TRUE,TestRunRunning_3	{LNXT:374|376|-1}
(*) BOOL
A1905F28  2001     		mov r0, #1 ; 1
A1905F2A  F8DF 7244		ldr r7, [pc, #+580] ; 0xA1A00089
A1905F2E  7038     		strb r0, [r7]

#1467		
#1468		$label103:
#1469						(* END_IF *)
#1470		
#1471		
#1472						(* IF TestRunRunning_3 AND Tank_Level < Level_2 And Avto_C and not alarm_pumps.2 *)
#1473						LD		alarm_pumps.2	{LNXT:376|-1|-1}
(*) UNDEF
A1905F30  F85F 7EA4		ldr r7, [pc, #-3748] ; 0xA0003FC0
A1905F34  8838     		ldrh r0, [r7]
A1905F36  F3C0 0080		ubfx r0, r0, #2, #1

#1474						NOT	{LNXT:376|-1|-1}
(*) BOOL
A1905F3A  2800     		cmp r0, #0
A1905F3C  BF08 2001		eqmov r0, #1
A1905F40  BF18 2000		nemov r0, #0

#1475						AND(		Tank_Level	{LNXT:376|-1|-1}
(*) BOOL
A1905F44  B082     		sub sp, sp, #8
A1905F46  F8CD 0000		str r0, [sp]
A1905F4A  F85F 7E98		ldr r7, [pc, #-3736] ; 0xA1A00012
A1905F4E  F9B7 0000		ldrsh r0, [r7]

#1476						LT		Level_2	{LNXT:376|-1|-1}
(*) INT
A1905F52  F85F 7EF8		ldr r7, [pc, #-3832] ; 0xA0003F08
A1905F56  F9B7 7000		ldrsh r7, [r7]
A1905F5A  42B8     		cmp r0, r7
A1905F5C  BFA8 2000		gemov r0, #0
A1905F60  BFB8 2001		ltmov r0, #1

#1477						AND		TestRunRunning_3	{LNXT:376|-1|-1}
(*) BOOL
A1905F64  F8DF 7208		ldr r7, [pc, #+520] ; 0xA1A00089
A1905F68  783F     		ldrb r7, [r7]
A1905F6A  4038     		and r0, r0, r7

#1478						AND		Avto_C	{LNXT:376|-1|-1}
(*) BOOL
A1905F6C  F85F 7E94		ldr r7, [pc, #-3732] ; 0xA1A0002E
A1905F70  783F     		ldrb r7, [r7]
A1905F72  4038     		and r0, r0, r7

#1479						)	{LNXT:376|-1|-1}
(*) BOOL
A1905F74  4607     		mov r7, r0
A1905F76  F8DD 0000		ldr r0, [sp]
A1905F7A  B002     		add sp, sp, #8
A1905F7C  4038     		and r0, r0, r7

#1480						JMPCN	$label104	{LNXT:376|377|400}
(-) BOOL
A1905F7E  2800     		cmp r0, #0
A1905F80  D05B     		beq #182 ; 0xA190603A


#1481		
#1482						(* THEN *)
#1483		
#1484							(* PumpRunTimer_3 *)
#1485							LD		TestRunActive_3	{LNXT:377|-1|-1}
(*) UNDEF
A1905F84  F8DF 71EC		ldr r7, [pc, #+492] ; 0xA1A0008B
A1905F88  7838     		ldrb r0, [r7]

#1486							AND		TestRunRunning_3	{LNXT:377|-1|-1}
(*) BOOL
A1905F8A  F8DF 71E4		ldr r7, [pc, #+484] ; 0xA1A00089
A1905F8E  783F     		ldrb r7, [r7]
A1905F90  4038     		and r0, r0, r7

#1487							ST		PumpRunTimer_3.IN	{LNXT:377|-1|-1}
(*) BOOL
A1905F92  F8DF 7218		ldr r7, [pc, #+536] ; 0xA1A000CC
A1905F96  7038     		strb r0, [r7]

#1488							MOVE		7000,PumpRunTimer_3.PT	{LNXT:377|-1|-1}
(*) BOOL
A1905F98  F8DF 7224		ldr r7, [pc, #+548] ; 0x1B58
A1905F9C  4638     		mov r0, r7
A1905F9E  F8DF 7210		ldr r7, [pc, #+528] ; 0xA1A000D0
A1905FA2  6038     		str r0, [r7]

#1489							CAL		PumpRunTimer_3	{LNXT:377|378|-1}
(*) UDINT
A1905FA4  E92D 0021		stmdb sp!, { r0, r5 }
A1905FA8  F8DF 51FC		ldr r5, [pc, #+508] ; 0xA1A000C8
A1905FAC  F85F 4F04		ldr r4, [pc, #-3844] ; 0xA1904570
A1905FB0  F044 0401		orr r4, r4, #1
A1905FB4  47A0     		blx r4
A1905FB6  E8BD 0021		ldmia sp!, { r0, r5 }

#1490		
#1491		
#1492							(* IF PumpRunTimer_3.Q *)
#1493							LD		PumpRunTimer_3.Q	{LNXT:378|-1|-1}
(*) UNDEF
A1905FBA  F8DF 71F8		ldr r7, [pc, #+504] ; 0xA1A000D4
A1905FBE  7838     		ldrb r0, [r7]

#1494							NOT	{LNXT:378|-1|-1}
(*) BOOL
A1905FC0  2800     		cmp r0, #0
A1905FC2  BF08 2001		eqmov r0, #1
A1905FC6  BF18 2000		nemov r0, #0

#1495							JMPCN	$label105	{LNXT:378|379|381}
(-) BOOL
A1905FCA  2800     		cmp r0, #0
A1905FCC  D006     		beq #12 ; 0xA1905FDC


#1496		
#1497							(* THEN *)
#1498		
#1499								(* Motor_C := TRUE; *)
#1500								MOVE		TRUE,Motor_C	{LNXT:379|400|-1}
(*) BOOL
A1905FD0  2001     		mov r0, #1 ; 1
A1905FD2  F85F 7EB8		ldr r7, [pc, #-3768] ; 0x100004AE
A1905FD6  7038     		strb r0, [r7]

#1501								JMP		$label106	{LNXT:378|379|381}
(-) BOOL
A1905FD8  E02F     		b #94 ; 0xA190603A


#1502		$label105:
#1503		
#1504							(* ELSE *)
#1505		
#1506								(* Motor_C := FALSE; *)
#1507								MOVE		FALSE,Motor_C	{LNXT:381|382|-1}
(*) BOOL
A1905FDC  2000     		mov r0, #0 ; 0
A1905FDE  F85F 7EC4		ldr r7, [pc, #-3780] ; 0x100004AE
A1905FE2  7038     		strb r0, [r7]

#1508		
#1509								(* TestRunRunning_3 := FALSE; *)
#1510								MOVE		FALSE,TestRunRunning_3	{LNXT:382|383|-1}
(*) BOOL
A1905FE4  2000     		mov r0, #0 ; 0
A1905FE6  F8DF 7188		ldr r7, [pc, #+392] ; 0xA1A00089
A1905FEA  7038     		strb r0, [r7]

#1511		
#1512								(* TestRunActive_3 := FALSE; *)
#1513								MOVE		FALSE,TestRunActive_3	{LNXT:383|384|-1}
(*) BOOL
A1905FEC  2000     		mov r0, #0 ; 0
A1905FEE  F8DF 7184		ldr r7, [pc, #+388] ; 0xA1A0008B
A1905FF2  7038     		strb r0, [r7]

#1514		
#1515								(* PumpRunTimer_3 *)
#1516								MOVE		FALSE,PumpRunTimer_3.IN	{LNXT:384|-1|-1}
(*) BOOL
A1905FF4  2000     		mov r0, #0 ; 0
A1905FF6  F8DF 71B4		ldr r7, [pc, #+436] ; 0xA1A000CC
A1905FFA  7038     		strb r0, [r7]

#1517								MOVE		7000,PumpRunTimer_3.PT	{LNXT:384|-1|-1}
(*) BOOL
A1905FFC  F8DF 71C0		ldr r7, [pc, #+448] ; 0x1B58
A1906000  4638     		mov r0, r7
A1906002  F8DF 71AC		ldr r7, [pc, #+428] ; 0xA1A000D0
A1906006  6038     		str r0, [r7]

#1518								CAL		PumpRunTimer_3	{LNXT:384|385|-1}
(*) UDINT
A1906008  E92D 0021		stmdb sp!, { r0, r5 }
A190600C  F8DF 5198		ldr r5, [pc, #+408] ; 0xA1A000C8
A1906010  F85F 4F68		ldr r4, [pc, #-3944] ; 0xA1904570
A1906014  F044 0401		orr r4, r4, #1
A1906018  47A0     		blx r4
A190601A  E8BD 0021		ldmia sp!, { r0, r5 }

#1519		
#1520								(* CurrentPump := ((CurrentPump) MOD 3) + 1; *)
#1521								LD		CurrentPump	{LNXT:385|400|-1}
(*) UNDEF
A190601E  F8DF 7120		ldr r7, [pc, #+288] ; 0xA1A0005C
A1906022  F9B7 0000		ldrsh r0, [r7]

#1522								MOD		3	{LNXT:385|400|-1}
(*) INT
A1906026  2103     		mov r1, #3 ; 3
A1906028  F85F 4708		ldr r4, [pc, #-1800] ; 0xA1904520
A190602C  F044 0401		orr r4, r4, #1
A1906030  47A0     		blx r4

#1523								ADD		1	{LNXT:385|400|-1}
(-) INT
A1906032  1C40     		add r0, r0, #1

#1524								ST		CurrentPump	{LNXT:385|400|-1}
(*) INT
A1906034  F8DF 7108		ldr r7, [pc, #+264] ; 0xA1A0005C
A1906038  8038     		strh r0, [r7]

#1525		
#1526		$label106:
#1527							(* END_IF *)
#1528		
#1529		$label104:
#1530						(* END_IF *)
#1531		
#1532		$label102:
#1533					(* END_IF *)
#1534		
#1535		$label76:
#1536		
#1537				(* END_CASE *)
#1538		
#1539		$label75:
#1540			(* END_IF *)
#1541		
#1542		
#1543			(* IF Tank_Level >= Level_2 AND Tank_Level < Level_3 *)
#1544			LD		Tank_Level	{LNXT:400|-1|-1}
(*) UNDEF
A190603A  F85F 7F88		ldr r7, [pc, #-3976] ; 0xA1A00012
A190603E  F9B7 0000		ldrsh r0, [r7]

#1545			LT		Level_3	{LNXT:400|-1|-1}
(*) INT
A1906042  F85F 7FE4		ldr r7, [pc, #-4068] ; 0xA0003F0A
A1906046  F9B7 7000		ldrsh r7, [r7]
A190604A  42B8     		cmp r0, r7
A190604C  BFA8 2000		gemov r0, #0
A1906050  BFB8 2001		ltmov r0, #1

#1546			AND(		Tank_Level	{LNXT:400|-1|-1}
(*) BOOL
A1906054  B082     		sub sp, sp, #8
A1906056  F8CD 0000		str r0, [sp]
A190605A  F85F 7FA8		ldr r7, [pc, #-4008] ; 0xA1A00012
A190605E  F9B7 0000		ldrsh r0, [r7]

#1547			GE		Level_2	{LNXT:400|-1|-1}
(*) INT
A1906062  F8DF 70C8		ldr r7, [pc, #+200] ; 0xA0003F08
A1906066  F9B7 7000		ldrsh r7, [r7]
A190606A  42B8     		cmp r0, r7
A190606C  BFB8 2000		ltmov r0, #0
A1906070  BFA8 2001		gemov r0, #1

#1548			)	{LNXT:400|-1|-1}
(*) BOOL
A1906074  4607     		mov r7, r0
A1906076  F8DD 0000		ldr r0, [sp]
A190607A  B002     		add sp, sp, #8
A190607C  4038     		and r0, r0, r7

#1549			JMPCN	$label107	{LNXT:400|403|438}
(-) BOOL
A190607E  2800     		cmp r0, #0
A1906080  F000 814C		beq #664 ; 0xA190631C


#1550		
#1551			(* THEN *)
#1552		
#1553		
#1554				(* IF MOTOR_A AND NOT MOTOR_B AND NOT MOTOR_C *)
#1555				LD		MOTOR_C	{LNXT:403|-1|-1}
(*) UNDEF
A1906084  F85F 7F6C		ldr r7, [pc, #-3948] ; 0x100004AE
A1906088  7838     		ldrb r0, [r7]

#1556				NOT	{LNXT:403|-1|-1}
(*) BOOL
A190608A  2800     		cmp r0, #0
A190608C  BF08 2001		eqmov r0, #1
A1906090  BF18 2000		nemov r0, #0

#1557				AND(		MOTOR_B	{LNXT:403|-1|-1}
(*) BOOL
A1906094  B082     		sub sp, sp, #8
A1906096  F8CD 0000		str r0, [sp]
A190609A  F85F 7F84		ldr r7, [pc, #-3972] ; 0x100004AD
A190609E  7838     		ldrb r0, [r7]

#1558				NOT	{LNXT:403|-1|-1}
(*) BOOL
A19060A0  2800     		cmp r0, #0
A19060A2  BF08 2001		eqmov r0, #1
A19060A6  BF18 2000		nemov r0, #0

#1559				AND		MOTOR_A	{LNXT:403|-1|-1}
(*) BOOL
A19060AA  F85F 7F98		ldr r7, [pc, #-3992] ; 0x100004AC
A19060AE  783F     		ldrb r7, [r7]
A19060B0  4038     		and r0, r0, r7

#1560				)	{LNXT:403|-1|-1}
(*) BOOL
A19060B2  4607     		mov r7, r0
A19060B4  F8DD 0000		ldr r0, [sp]
A19060B8  B002     		add sp, sp, #8
A19060BA  4038     		and r0, r0, r7

#1561				JMPCN	$label108	{LNXT:403|406|416}
(-) BOOL
A19060BC  2800     		cmp r0, #0
A19060BE  D02C     		beq #88 ; 0xA190611A


#1562		
#1563				(* THEN *)
#1564		
#1565		
#1566					(* IF Avto_B and not alarm_pumps.1 *)
#1567					LD		alarm_pumps.1	{LNXT:406|-1|-1}
(*) UNDEF
A19060C2  F8DF 706C		ldr r7, [pc, #+108] ; 0xA0003FC0
A19060C6  8838     		ldrh r0, [r7]
A19060C8  F3C0 0040		ubfx r0, r0, #1, #1

#1568					NOT	{LNXT:406|-1|-1}
(*) BOOL
A19060CC  2800     		cmp r0, #0
A19060CE  BF08 2001		eqmov r0, #1
A19060D2  BF18 2000		nemov r0, #0

#1569					AND		Avto_B	{LNXT:406|-1|-1}
(*) BOOL
A19060D6  F8DF 705C		ldr r7, [pc, #+92] ; 0xA1A0002C
A19060DA  783F     		ldrb r7, [r7]
A19060DC  4038     		and r0, r0, r7

#1570					JMPCN	$label109	{LNXT:406|407|409}
(-) BOOL
A19060DE  2800     		cmp r0, #0
A19060E0  D006     		beq #12 ; 0xA19060F0


#1571		
#1572					(* THEN *)
#1573		
#1574						(* Motor_B:= TRUE; *)
#1575						MOVE		TRUE,Motor_B	{LNXT:407|416|-1}
(*) BOOL
A19060E4  2001     		mov r0, #1 ; 1
A19060E6  F85F 7FD0		ldr r7, [pc, #-4048] ; 0x100004AD
A19060EA  7038     		strb r0, [r7]

#1576						JMP		$label110	{LNXT:406|407|409}
(-) BOOL
A19060EC  E015     		b #42 ; 0xA190611A


#1577		$label109:
#1578		
#1579					(* ELSIF Avto_C and not alarm_pumps.2 *)
#1580					LD		alarm_pumps.2	{LNXT:409|-1|-1}
(*) UNDEF
A19060F0  F8DF 703C		ldr r7, [pc, #+60] ; 0xA0003FC0
A19060F4  8838     		ldrh r0, [r7]
A19060F6  F3C0 0080		ubfx r0, r0, #2, #1

#1581					NOT	{LNXT:409|-1|-1}
(*) BOOL
A19060FA  2800     		cmp r0, #0
A19060FC  BF08 2001		eqmov r0, #1
A1906100  BF18 2000		nemov r0, #0

#1582					AND		Avto_C	{LNXT:409|-1|-1}
(*) BOOL
A1906104  F8DF 7030		ldr r7, [pc, #+48] ; 0xA1A0002E
A1906108  783F     		ldrb r7, [r7]
A190610A  4038     		and r0, r0, r7

#1583					JMPCN	$label110	{LNXT:409|410|416}
(-) BOOL
A190610C  2800     		cmp r0, #0
A190610E  D004     		beq #8 ; 0xA190611A


#1584		
#1585					(* THEN *)
#1586		
#1587						(* Motor_C:= TRUE; *)
#1588						MOVE		TRUE,Motor_C	{LNXT:410|416|-1}
(*) BOOL
A1906112  2001     		mov r0, #1 ; 1
A1906114  F85F 7FFC		ldr r7, [pc, #-4092] ; 0x100004AE
A1906118  7038     		strb r0, [r7]

#1589		
#1590		$label110:
#1591					(* END_IF *)
#1592		
#1593		$label108:
#1594				(* END_IF *)
#1595		
#1596		
#1597				(* IF MOTOR_B AND NOT MOTOR_A AND NOT MOTOR_C *)
#1598				LD		MOTOR_C	{LNXT:416|-1|-1}
(*) UNDEF
A190611A  F8DF 70A8		ldr r7, [pc, #+168] ; 0x100004AE
A190611E  7838     		ldrb r0, [r7]

#1599				NOT	{LNXT:416|-1|-1}
(*) BOOL
A1906120  2800     		cmp r0, #0
A1906122  BF08 2001		eqmov r0, #1
A1906126  BF18 2000		nemov r0, #0

A190612A  E04D     		b #154

A190612C  FFFFFFFF		; 0xA0003F08
A1906130  FFFFFFFF		; 0xA0003FC0
A1906134  A1A0002C		; 0xA1A0002C
A1906138  A1A0002E		; 0xA1A0002E
A190613C  A1A00059		; 0xA1A00059
A1906140  A1A0005C		; 0xA1A0005C
A1906144  A1A0005E		; 0xA1A0005E
A1906148  A1A0005F		; 0xA1A0005F
A190614C  A1A00060		; 0xA1A00060
A1906150  A1A00064		; 0xA1A00064
A1906154  A1A00068		; 0xA1A00068
A1906158  A1A0006C		; 0xA1A0006C
A190615C  A1A00074		; 0xA1A00074
A1906160  A1A00078		; 0xA1A00078
A1906164  A1A0007C		; 0xA1A0007C
A1906168  A1A00080		; 0xA1A00080
A190616C  A1A00088		; 0xA1A00088
A1906170  A1A00089		; 0xA1A00089
A1906174  A1A0008B		; 0xA1A0008B
A1906178  A1A0008C		; 0xA1A0008C
A190617C  A1A00090		; 0xA1A00090
A1906180  A1A00094		; 0xA1A00094
A1906184  A1A00098		; 0xA1A00098
A1906188  A1A000A0		; 0xA1A000A0
A190618C  A1A000A4		; 0xA1A000A4
A1906190  A1A000A8		; 0xA1A000A8
A1906194  A1A000AC		; 0xA1A000AC
A1906198  A1A000B4		; 0xA1A000B4
A190619C  A1A000B8		; 0xA1A000B8
A19061A0  A1A000BC		; 0xA1A000BC
A19061A4  A1A000C0		; 0xA1A000C0
A19061A8  A1A000C8		; 0xA1A000C8
A19061AC  A1A000CC		; 0xA1A000CC
A19061B0  A1A000D0		; 0xA1A000D0
A19061B4  A1A000D4		; 0xA1A000D4
A19061B8  00001388		; 0x00001388
A19061BC  00001770		; 0x00001770
A19061C0  00001B58		; 0x00001B58
A19061C4  FFFFFFFF		; 0x100004AE

#1600				AND(		MOTOR_A	{LNXT:416|-1|-1}
(*) BOOL
A19061C8  B082     		sub sp, sp, #8
A19061CA  F8CD 0000		str r0, [sp]
A19061CE  F8DF 7278		ldr r7, [pc, #+632] ; 0x100004AC
A19061D2  7838     		ldrb r0, [r7]

#1601				NOT	{LNXT:416|-1|-1}
(*) BOOL
A19061D4  2800     		cmp r0, #0
A19061D6  BF08 2001		eqmov r0, #1
A19061DA  BF18 2000		nemov r0, #0

#1602				AND		MOTOR_B	{LNXT:416|-1|-1}
(*) BOOL
A19061DE  F8DF 726C		ldr r7, [pc, #+620] ; 0x100004AD
A19061E2  783F     		ldrb r7, [r7]
A19061E4  4038     		and r0, r0, r7

#1603				)	{LNXT:416|-1|-1}
(*) BOOL
A19061E6  4607     		mov r7, r0
A19061E8  F8DD 0000		ldr r0, [sp]
A19061EC  B002     		add sp, sp, #8
A19061EE  4038     		and r0, r0, r7

#1604				JMPCN	$label111	{LNXT:416|417|425}
(-) BOOL
A19061F0  2800     		cmp r0, #0
A19061F2  D03A     		beq #116 ; 0xA190626A


#1605		
#1606				(* THEN *)
#1607		
#1608		
#1609					(* IF Avto_B and not alarm_pumps.1 *)
#1610					LD		alarm_pumps.1	{LNXT:417|-1|-1}
(*) UNDEF
A19061F6  F85F 70C8		ldr r7, [pc, #-200] ; 0xA0003FC0
A19061FA  8838     		ldrh r0, [r7]
A19061FC  F3C0 0040		ubfx r0, r0, #1, #1

#1611					NOT	{LNXT:417|-1|-1}
(*) BOOL
A1906200  2800     		cmp r0, #0
A1906202  BF08 2001		eqmov r0, #1
A1906206  BF18 2000		nemov r0, #0

#1612					AND		Avto_B	{LNXT:417|-1|-1}
(*) BOOL
A190620A  F85F 70D8		ldr r7, [pc, #-216] ; 0xA1A0002C
A190620E  783F     		ldrb r7, [r7]
A1906210  4038     		and r0, r0, r7

#1613					JMPCN	$label112	{LNXT:417|418|420}
(-) BOOL
A1906212  2800     		cmp r0, #0
A1906214  D004     		beq #8 ; 0xA1906220


#1614		
#1615					(* THEN *)
#1616		
#1617						(* Motor_C:= TRUE; *)
#1618						MOVE		TRUE,Motor_C	{LNXT:418|420|-1}
(*) BOOL
A1906218  2001     		mov r0, #1 ; 1
A190621A  F85F 7058		ldr r7, [pc, #-88] ; 0x100004AE
A190621E  7038     		strb r0, [r7]

#1619		
#1620		$label112:
#1621					(* END_IF *)
#1622		
#1623		
#1624					(* IF Avto_A and not alarm_pumps.0 AND NOT MOTOR_C *)
#1625					LD		MOTOR_C	{LNXT:420|-1|-1}
(*) UNDEF
A1906220  F85F 7060		ldr r7, [pc, #-96] ; 0x100004AE
A1906224  7838     		ldrb r0, [r7]

#1626					NOT	{LNXT:420|-1|-1}
(*) BOOL
A1906226  2800     		cmp r0, #0
A1906228  BF08 2001		eqmov r0, #1
A190622C  BF18 2000		nemov r0, #0

#1627					AND(		alarm_pumps.0	{LNXT:420|-1|-1}
(*) BOOL
A1906230  B082     		sub sp, sp, #8
A1906232  F8CD 0000		str r0, [sp]
A1906236  F85F 7108		ldr r7, [pc, #-264] ; 0xA0003FC0
A190623A  8838     		ldrh r0, [r7]
A190623C  F3C0 0000		ubfx r0, r0, #0, #1

#1628					NOT	{LNXT:420|-1|-1}
(*) BOOL
A1906240  2800     		cmp r0, #0
A1906242  BF08 2001		eqmov r0, #1
A1906246  BF18 2000		nemov r0, #0

#1629					AND		Avto_A	{LNXT:420|-1|-1}
(*) BOOL
A190624A  F8DF 71F8		ldr r7, [pc, #+504] ; 0xA1A0002F
A190624E  783F     		ldrb r7, [r7]
A1906250  4038     		and r0, r0, r7

#1630					)	{LNXT:420|-1|-1}
(*) BOOL
A1906252  4607     		mov r7, r0
A1906254  F8DD 0000		ldr r0, [sp]
A1906258  B002     		add sp, sp, #8
A190625A  4038     		and r0, r0, r7

#1631					JMPCN	$label113	{LNXT:420|421|425}
(-) BOOL
A190625C  2800     		cmp r0, #0
A190625E  D004     		beq #8 ; 0xA190626A


#1632		
#1633					(* THEN *)
#1634		
#1635						(* Motor_A:= TRUE; *)
#1636						MOVE		TRUE,Motor_A	{LNXT:421|425|-1}
(*) BOOL
A1906262  2001     		mov r0, #1 ; 1
A1906264  F8DF 71E0		ldr r7, [pc, #+480] ; 0x100004AC
A1906268  7038     		strb r0, [r7]

#1637		
#1638		$label113:
#1639					(* END_IF *)
#1640		
#1641		$label111:
#1642				(* END_IF *)
#1643		
#1644		
#1645				(* IF MOTOR_C AND NOT MOTOR_A AND NOT MOTOR_B *)
#1646				LD		MOTOR_B	{LNXT:425|-1|-1}
(*) UNDEF
A190626A  F8DF 71E0		ldr r7, [pc, #+480] ; 0x100004AD
A190626E  7838     		ldrb r0, [r7]

#1647				NOT	{LNXT:425|-1|-1}
(*) BOOL
A1906270  2800     		cmp r0, #0
A1906272  BF08 2001		eqmov r0, #1
A1906276  BF18 2000		nemov r0, #0

#1648				AND(		MOTOR_A	{LNXT:425|-1|-1}
(*) BOOL
A190627A  B082     		sub sp, sp, #8
A190627C  F8CD 0000		str r0, [sp]
A1906280  F8DF 71C4		ldr r7, [pc, #+452] ; 0x100004AC
A1906284  7838     		ldrb r0, [r7]

#1649				NOT	{LNXT:425|-1|-1}
(*) BOOL
A1906286  2800     		cmp r0, #0
A1906288  BF08 2001		eqmov r0, #1
A190628C  BF18 2000		nemov r0, #0

#1650				AND		MOTOR_C	{LNXT:425|-1|-1}
(*) BOOL
A1906290  F85F 70D0		ldr r7, [pc, #-208] ; 0x100004AE
A1906294  783F     		ldrb r7, [r7]
A1906296  4038     		and r0, r0, r7

#1651				)	{LNXT:425|-1|-1}
(*) BOOL
A1906298  4607     		mov r7, r0
A190629A  F8DD 0000		ldr r0, [sp]
A190629E  B002     		add sp, sp, #8
A19062A0  4038     		and r0, r0, r7

#1652				JMPCN	$label114	{LNXT:425|426|438}
(-) BOOL
A19062A2  2800     		cmp r0, #0
A19062A4  D03A     		beq #116 ; 0xA190631C


#1653		
#1654				(* THEN *)
#1655		
#1656		
#1657					(* IF Avto_A and not alarm_pumps.0 *)
#1658					LD		alarm_pumps.0	{LNXT:426|-1|-1}
(*) UNDEF
A19062A8  F85F 717C		ldr r7, [pc, #-380] ; 0xA0003FC0
A19062AC  8838     		ldrh r0, [r7]
A19062AE  F3C0 0000		ubfx r0, r0, #0, #1

#1659					NOT	{LNXT:426|-1|-1}
(*) BOOL
A19062B2  2800     		cmp r0, #0
A19062B4  BF08 2001		eqmov r0, #1
A19062B8  BF18 2000		nemov r0, #0

#1660					AND		Avto_A	{LNXT:426|-1|-1}
(*) BOOL
A19062BC  F8DF 7184		ldr r7, [pc, #+388] ; 0xA1A0002F
A19062C0  783F     		ldrb r7, [r7]
A19062C2  4038     		and r0, r0, r7

#1661					JMPCN	$label115	{LNXT:426|427|429}
(-) BOOL
A19062C4  2800     		cmp r0, #0
A19062C6  D004     		beq #8 ; 0xA19062D2


#1662		
#1663					(* THEN *)
#1664		
#1665						(* Motor_A:= TRUE; *)
#1666						MOVE		TRUE,Motor_A	{LNXT:427|429|-1}
(*) BOOL
A19062CA  2001     		mov r0, #1 ; 1
A19062CC  F8DF 7178		ldr r7, [pc, #+376] ; 0x100004AC
A19062D0  7038     		strb r0, [r7]

#1667		
#1668		$label115:
#1669					(* END_IF *)
#1670		
#1671		
#1672					(* IF Avto_B and not alarm_pumps.1 AND NOT MOTOR_A *)
#1673					LD		MOTOR_A	{LNXT:429|-1|-1}
(*) UNDEF
A19062D2  F8DF 7174		ldr r7, [pc, #+372] ; 0x100004AC
A19062D6  7838     		ldrb r0, [r7]

#1674					NOT	{LNXT:429|-1|-1}
(*) BOOL
A19062D8  2800     		cmp r0, #0
A19062DA  BF08 2001		eqmov r0, #1
A19062DE  BF18 2000		nemov r0, #0

#1675					AND(		alarm_pumps.1	{LNXT:429|-1|-1}
(*) BOOL
A19062E2  B082     		sub sp, sp, #8
A19062E4  F8CD 0000		str r0, [sp]
A19062E8  F85F 71BC		ldr r7, [pc, #-444] ; 0xA0003FC0
A19062EC  8838     		ldrh r0, [r7]
A19062EE  F3C0 0040		ubfx r0, r0, #1, #1

#1676					NOT	{LNXT:429|-1|-1}
(*) BOOL
A19062F2  2800     		cmp r0, #0
A19062F4  BF08 2001		eqmov r0, #1
A19062F8  BF18 2000		nemov r0, #0

#1677					AND		Avto_B	{LNXT:429|-1|-1}
(*) BOOL
A19062FC  F85F 71CC		ldr r7, [pc, #-460] ; 0xA1A0002C
A1906300  783F     		ldrb r7, [r7]
A1906302  4038     		and r0, r0, r7

#1678					)	{LNXT:429|-1|-1}
(*) BOOL
A1906304  4607     		mov r7, r0
A1906306  F8DD 0000		ldr r0, [sp]
A190630A  B002     		add sp, sp, #8
A190630C  4038     		and r0, r0, r7

#1679					JMPCN	$label116	{LNXT:429|430|438}
(-) BOOL
A190630E  2800     		cmp r0, #0
A1906310  D004     		beq #8 ; 0xA190631C


#1680		
#1681					(* THEN *)
#1682		
#1683						(* Motor_B:= TRUE; *)
#1684						MOVE		TRUE,Motor_B	{LNXT:430|438|-1}
(*) BOOL
A1906314  2001     		mov r0, #1 ; 1
A1906316  F8DF 7134		ldr r7, [pc, #+308] ; 0x100004AD
A190631A  7038     		strb r0, [r7]

#1685		
#1686		$label116:
#1687					(* END_IF *)
#1688		
#1689		$label114:
#1690				(* END_IF *)
#1691		
#1692		$label107:
#1693			(* END_IF *)
#1694		
#1695		
#1696			(* IF Tank_Level <= Level_1 and Motor_A and Motor_B and Motor_C *)
#1697			LD		Tank_Level	{LNXT:438|-1|-1}
(*) UNDEF
A190631C  F8DF 7120		ldr r7, [pc, #+288] ; 0xA1A00012
A1906320  F9B7 0000		ldrsh r0, [r7]

#1698			LE		Level_1	{LNXT:438|-1|-1}
(*) INT
A1906324  F8DF 7110		ldr r7, [pc, #+272] ; 0xA0003F06
A1906328  F9B7 7000		ldrsh r7, [r7]
A190632C  42B8     		cmp r0, r7
A190632E  BFC8 2000		gtmov r0, #0
A1906332  BFD8 2001		lemov r0, #1

#1699			AND		Motor_A	{LNXT:438|-1|-1}
(*) BOOL
A1906336  F8DF 7110		ldr r7, [pc, #+272] ; 0x100004AC
A190633A  783F     		ldrb r7, [r7]
A190633C  4038     		and r0, r0, r7

#1700			AND		Motor_B	{LNXT:438|-1|-1}
(*) BOOL
A190633E  F8DF 710C		ldr r7, [pc, #+268] ; 0x100004AD
A1906342  783F     		ldrb r7, [r7]
A1906344  4038     		and r0, r0, r7

#1701			AND		Motor_C	{LNXT:438|-1|-1}
(*) BOOL
A1906346  F85F 7184		ldr r7, [pc, #-388] ; 0x100004AE
A190634A  783F     		ldrb r7, [r7]
A190634C  4038     		and r0, r0, r7

#1702			JMPCN	$label117	{LNXT:438|439|445}
(-) BOOL
A190634E  2800     		cmp r0, #0
A1906350  D004     		beq #8 ; 0xA190635C


#1703		
#1704			(* THEN *)
#1705		
#1706				(* Motor_A := False; *)
#1707				MOVE		False,Motor_A	{LNXT:439|445|-1}
(*) BOOL
A1906354  2000     		mov r0, #0 ; 0
A1906356  F8DF 70F0		ldr r7, [pc, #+240] ; 0x100004AC
A190635A  7038     		strb r0, [r7]

#1708		
#1709		$label117:
#1710			(* END_IF *)
#1711		
#1712		
#1713			(* IF Tank_Level > Level_3 *)
#1714			LD		Tank_Level	{LNXT:445|-1|-1}
(*) UNDEF
A190635C  F8DF 70E0		ldr r7, [pc, #+224] ; 0xA1A00012
A1906360  F9B7 0000		ldrsh r0, [r7]

#1715			GT		Level_3	{LNXT:445|-1|-1}
(*) INT
A1906364  F8DF 70D4		ldr r7, [pc, #+212] ; 0xA0003F0A
A1906368  F9B7 7000		ldrsh r7, [r7]
A190636C  42B8     		cmp r0, r7
A190636E  BFD8 2000		lemov r0, #0
A1906372  BFC8 2001		gtmov r0, #1

#1716			JMPCN	$label118	{LNXT:445|446|464}
(-) BOOL
A1906376  2800     		cmp r0, #0
A1906378  D03F     		beq #126 ; 0xA19063FA


#1717		
#1718			(* THEN *)
#1719		
#1720		
#1721				(* IF Avto_A and not alarm_pumps.0 *)
#1722				LD		alarm_pumps.0	{LNXT:446|-1|-1}
(*) UNDEF
A190637C  F85F 7250		ldr r7, [pc, #-592] ; 0xA0003FC0
A1906380  8838     		ldrh r0, [r7]
A1906382  F3C0 0000		ubfx r0, r0, #0, #1

#1723				NOT	{LNXT:446|-1|-1}
(*) BOOL
A1906386  2800     		cmp r0, #0
A1906388  BF08 2001		eqmov r0, #1
A190638C  BF18 2000		nemov r0, #0

#1724				AND		Avto_A	{LNXT:446|-1|-1}
(*) BOOL
A1906390  F8DF 70B0		ldr r7, [pc, #+176] ; 0xA1A0002F
A1906394  783F     		ldrb r7, [r7]
A1906396  4038     		and r0, r0, r7

#1725				JMPCN	$label119	{LNXT:446|447|450}
(-) BOOL
A1906398  2800     		cmp r0, #0
A190639A  D004     		beq #8 ; 0xA19063A6


#1726		
#1727				(* THEN *)
#1728		
#1729					(* Motor_A := TRUE; *)
#1730					MOVE		TRUE,Motor_A	{LNXT:447|450|-1}
(*) BOOL
A190639E  2001     		mov r0, #1 ; 1
A19063A0  F8DF 70A4		ldr r7, [pc, #+164] ; 0x100004AC
A19063A4  7038     		strb r0, [r7]

#1731		
#1732		$label119:
#1733				(* END_IF *)
#1734		
#1735		
#1736				(* IF Avto_B and not alarm_pumps.1 *)
#1737				LD		alarm_pumps.1	{LNXT:450|-1|-1}
(*) UNDEF
A19063A6  F85F 7278		ldr r7, [pc, #-632] ; 0xA0003FC0
A19063AA  8838     		ldrh r0, [r7]
A19063AC  F3C0 0040		ubfx r0, r0, #1, #1

#1738				NOT	{LNXT:450|-1|-1}
(*) BOOL
A19063B0  2800     		cmp r0, #0
A19063B2  BF08 2001		eqmov r0, #1
A19063B6  BF18 2000		nemov r0, #0

#1739				AND		Avto_B	{LNXT:450|-1|-1}
(*) BOOL
A19063BA  F85F 7288		ldr r7, [pc, #-648] ; 0xA1A0002C
A19063BE  783F     		ldrb r7, [r7]
A19063C0  4038     		and r0, r0, r7

#1740				JMPCN	$label120	{LNXT:450|451|454}
(-) BOOL
A19063C2  2800     		cmp r0, #0
A19063C4  D004     		beq #8 ; 0xA19063D0


#1741		
#1742				(* THEN *)
#1743		
#1744					(* Motor_B := TRUE; *)
#1745					MOVE		TRUE,Motor_B	{LNXT:451|454|-1}
(*) BOOL
A19063C8  2001     		mov r0, #1 ; 1
A19063CA  F8DF 7080		ldr r7, [pc, #+128] ; 0x100004AD
A19063CE  7038     		strb r0, [r7]

#1746		
#1747		$label120:
#1748				(* END_IF *)
#1749		
#1750		
#1751				(* IF Avto_C and not alarm_pumps.2 *)
#1752				LD		alarm_pumps.2	{LNXT:454|-1|-1}
(*) UNDEF
A19063D0  F85F 72A4		ldr r7, [pc, #-676] ; 0xA0003FC0
A19063D4  8838     		ldrh r0, [r7]
A19063D6  F3C0 0080		ubfx r0, r0, #2, #1

#1753				NOT	{LNXT:454|-1|-1}
(*) BOOL
A19063DA  2800     		cmp r0, #0
A19063DC  BF08 2001		eqmov r0, #1
A19063E0  BF18 2000		nemov r0, #0

#1754				AND		Avto_C	{LNXT:454|-1|-1}
(*) BOOL
A19063E4  F85F 72B0		ldr r7, [pc, #-688] ; 0xA1A0002E
A19063E8  783F     		ldrb r7, [r7]
A19063EA  4038     		and r0, r0, r7

#1755				JMPCN	$label121	{LNXT:454|455|464}
(-) BOOL
A19063EC  2800     		cmp r0, #0
A19063EE  D004     		beq #8 ; 0xA19063FA


#1756		
#1757				(* THEN *)
#1758		
#1759					(* Motor_C := TRUE; *)
#1760					MOVE		TRUE,Motor_C	{LNXT:455|464|-1}
(*) BOOL
A19063F2  2001     		mov r0, #1 ; 1
A19063F4  F85F 7234		ldr r7, [pc, #-564] ; 0x100004AE
A19063F8  7038     		strb r0, [r7]

#1761		
#1762		$label121:
#1763				(* END_IF *)
#1764		
#1765		$label118:
#1766			(* END_IF *)
#1767		
#1768		
#1769			(* IF Tank_Level <= level_min *)
#1770			LD		Tank_Level	{LNXT:464|-1|-1}
(*) UNDEF
A19063FA  F8DF 7044		ldr r7, [pc, #+68] ; 0xA1A00012
A19063FE  F9B7 0000		ldrsh r0, [r7]

#1771			LE		level_min	{LNXT:464|-1|-1}
(*) INT
A1906402  F8DF 7030		ldr r7, [pc, #+48] ; 0xA0003F04
A1906406  F9B7 7000		ldrsh r7, [r7]
A190640A  42B8     		cmp r0, r7
A190640C  BFC8 2000		gtmov r0, #0
A1906410  BFD8 2001		lemov r0, #1

#1772			JMPCN	$label122	{LNXT:464|465|5}
(-) BOOL
A1906414  2800     		cmp r0, #0
A1906416  D00C     		beq #24 ; 0xA1906432


#1773		
#1774			(* THEN *)
#1775		
#1776				(* Motor_A := False; *)
#1777				MOVE		False,Motor_A	{LNXT:465|466|-1}
(*) BOOL
A190641A  2000     		mov r0, #0 ; 0
A190641C  F8DF 7028		ldr r7, [pc, #+40] ; 0x100004AC
A1906420  7038     		strb r0, [r7]

#1778		
#1779				(* Motor_B := False; *)
#1780				MOVE		False,Motor_B	{LNXT:466|467|-1}
(*) BOOL
A1906422  2000     		mov r0, #0 ; 0
A1906424  F8DF 7024		ldr r7, [pc, #+36] ; 0x100004AD
A1906428  7038     		strb r0, [r7]

#1781		
#1782				(* Motor_C := False; *)
#1783				MOVE		False,Motor_C	{LNXT:467|5|-1}
(*) BOOL
A190642A  2000     		mov r0, #0 ; 0
A190642C  F85F 726C		ldr r7, [pc, #-620] ; 0x100004AE
A1906430  7038     		strb r0, [r7]

A1906432  E00D     		b #26

A1906434  FFFFFFFF		; 0xA0003F04
A1906438  FFFFFFFF		; 0xA0003F06
A190643C  FFFFFFFF		; 0xA0003F0A
A1906440  A1A00012		; 0xA1A00012
A1906444  A1A0002F		; 0xA1A0002F
A1906448  FFFFFFFF		; 0x100004AC
A190644C  FFFFFFFF		; 0x100004AD

END_PROGRAM
**************************************************
	List program: Register
**************************************************

PROGRAM Register

END_PROGRAM

#0		{SRC:Register}
#1		(*$WAITSWITCH$*)
#2		
#3			(* level_tank := Tank_Level; *)
#4			MOVE		Tank_Level,level_tank	{LNXT:3|6|-1}
(*) UDINT
A1906450  F8DF 7104		ldr r7, [pc, #+260] ; 0xA1A00012
A1906454  F9B7 0000		ldrsh r0, [r7]
A1906458  F8DF 70EC		ldr r7, [pc, #+236] ; 0xA0003F02
A190645C  8038     		strh r0, [r7]

#5		
#6		
#7			(* IF Alarms >0 or alarm_pumps >0 *)
#8			LD		alarm_pumps	{LNXT:6|-1|-1}
(*) UNDEF
A190645E  F8DF 70F0		ldr r7, [pc, #+240] ; 0xA0003FC0
A1906462  8838     		ldrh r0, [r7]

#9			GT		0	{LNXT:6|-1|-1}
(*) WORD
A1906464  2800     		cmp r0, #0
A1906466  BFD8 2000		lemov r0, #0
A190646A  BFC8 2001		gtmov r0, #1

#10			OR(		Alarms	{LNXT:6|-1|-1}
(*) BOOL
A190646E  B082     		sub sp, sp, #8
A1906470  F8CD 0000		str r0, [sp]
A1906474  F8DF 70D4		ldr r7, [pc, #+212] ; 0xA0003F0E
A1906478  8838     		ldrh r0, [r7]

#11			GT		0	{LNXT:6|-1|-1}
(*) WORD
A190647A  2800     		cmp r0, #0
A190647C  BFD8 2000		lemov r0, #0
A1906480  BFC8 2001		gtmov r0, #1

#12			)	{LNXT:6|-1|-1}
(*) BOOL
A1906484  4607     		mov r7, r0
A1906486  F8DD 0000		ldr r0, [sp]
A190648A  B002     		add sp, sp, #8
A190648C  4338     		orr r0, r0, r7

#13			JMPCN	$label0	{LNXT:6|7|9}
(-) BOOL
A190648E  2800     		cmp r0, #0
A1906490  D006     		beq #12 ; 0xA19064A0


#14		
#15			(* THEN *)
#16		
#17				(* general_alarm := true; *)
#18				MOVE		true,general_alarm	{LNXT:7|14|-1}
(*) BOOL
A1906494  2001     		mov r0, #1 ; 1
A1906496  F8DF 70D4		ldr r7, [pc, #+212] ; 0x100004AF
A190649A  7038     		strb r0, [r7]

#19				JMP		$label1	{LNXT:6|7|9}
(-) BOOL
A190649C  E004     		b #8 ; 0xA19064A8


#20		$label0:
#21		
#22			(* ELSE *)
#23		
#24				(* general_alarm := false; *)
#25				MOVE		false,general_alarm	{LNXT:9|14|-1}
(*) BOOL
A19064A0  2000     		mov r0, #0 ; 0
A19064A2  F8DF 70C8		ldr r7, [pc, #+200] ; 0x100004AF
A19064A6  7038     		strb r0, [r7]

#26		
#27		$label1:
#28			(* END_IF *)
#29		
#30			(* Alarms.0 := di_sensor_Min; *)
#31			MOVE		di_sensor_Min,Alarms.0	{LNXT:14|15|-1}
(*) BOOL
A19064A8  F8DF 70B0		ldr r7, [pc, #+176] ; 0xA1A0008A
A19064AC  7838     		ldrb r0, [r7]
A19064AE  F8DF 709C		ldr r7, [pc, #+156] ; 0xA0003F0E
A19064B2  F8B7 8000		ldrh r8, [r7]
A19064B6  F360 0800		bfi r8, r0, #0, #1
A19064BA  F8A7 8000		strh r8, [r7]

#32		
#33			(* Alarms.1 := di_sensor_Max; *)
#34			MOVE		di_sensor_Max,Alarms.1	{LNXT:15|16|-1}
(*) BOOL
A19064BE  F8DF 70A4		ldr r7, [pc, #+164] ; 0xA1A000DF
A19064C2  7838     		ldrb r0, [r7]
A19064C4  F8DF 7084		ldr r7, [pc, #+132] ; 0xA0003F0E
A19064C8  F8B7 8000		ldrh r8, [r7]
A19064CC  F360 0841		bfi r8, r0, #1, #1
A19064D0  F8A7 8000		strh r8, [r7]

#35		
#36			(* Alarms.2 := di_flooding; *)
#37			MOVE		di_flooding,Alarms.2	{LNXT:16|17|-1}
(*) BOOL
A19064D4  F8DF 707C		ldr r7, [pc, #+124] ; 0xA1A00011
A19064D8  7838     		ldrb r0, [r7]
A19064DA  F8DF 7070		ldr r7, [pc, #+112] ; 0xA0003F0E
A19064DE  F8B7 8000		ldrh r8, [r7]
A19064E2  F360 0882		bfi r8, r0, #2, #1
A19064E6  F8A7 8000		strh r8, [r7]

#38		
#39			(* Alarms.4 := di_rnpp; *)
#40			MOVE		di_rnpp,Alarms.4	{LNXT:17|33|-1}
(*) BOOL
A19064EA  F8DF 7074		ldr r7, [pc, #+116] ; 0xA1A000DE
A19064EE  7838     		ldrb r0, [r7]
A19064F0  F8DF 7058		ldr r7, [pc, #+88] ; 0xA0003F0E
A19064F4  F8B7 8000		ldrh r8, [r7]
A19064F8  F360 1804		bfi r8, r0, #4, #1
A19064FC  F8A7 8000		strh r8, [r7]

#41		
#42		
#43			(* IF Tank_Level < -32000 *)
#44			LD		Tank_Level	{LNXT:33|-1|-1}
(*) UNDEF
A1906500  F8DF 7054		ldr r7, [pc, #+84] ; 0xA1A00012
A1906504  F9B7 0000		ldrsh r0, [r7]

#45			LT		-32000	{LNXT:33|-1|-1}
(*) INT
A1906508  F8DF 705C		ldr r7, [pc, #+92] ; 0xFFFF8300
A190650C  463F     		mov r7, r7
A190650E  42B8     		cmp r0, r7
A1906510  BFA8 2000		gemov r0, #0
A1906514  BFB8 2001		ltmov r0, #1

#46			JMPCN	$label2	{LNXT:33|34|36}
(-) BOOL
A1906518  2800     		cmp r0, #0
A190651A  D00B     		beq #22 ; 0xA1906534


#47		
#48			(* THEN *)
#49		
#50				(* Alarms.11 := True; *)
#51				MOVE		True,Alarms.11	{LNXT:34|3|-1}
(*) BOOL
A190651E  2001     		mov r0, #1 ; 1
A1906520  F8DF 7028		ldr r7, [pc, #+40] ; 0xA0003F0E
A1906524  F8B7 8000		ldrh r8, [r7]
A1906528  F360 28CB		bfi r8, r0, #11, #1
A190652C  F8A7 8000		strh r8, [r7]

#52				JMP		$label3	{LNXT:33|34|36}
(-) WORD
A1906530  E009     		b #18 ; 0xA1906546


#53		$label2:
#54		
#55			(* ELSE *)
#56		
#57				(* Alarms.11 := false; *)
#58				MOVE		false,Alarms.11	{LNXT:36|3|-1}
(*) WORD
A1906534  2000     		mov r0, #0 ; 0
A1906536  F8DF 7014		ldr r7, [pc, #+20] ; 0xA0003F0E
A190653A  F8B7 8000		ldrh r8, [r7]
A190653E  F360 28CB		bfi r8, r0, #11, #1
A1906542  F8A7 8000		strh r8, [r7]

A1906546  E013     		b #38

A1906548  FFFFFFFF		; 0xA0003F02
A190654C  FFFFFFFF		; 0xA0003F0E
A1906550  FFFFFFFF		; 0xA0003FC0
A1906554  A1A00011		; 0xA1A00011
A1906558  A1A00012		; 0xA1A00012
A190655C  A1A0008A		; 0xA1A0008A
A1906560  A1A000DE		; 0xA1A000DE
A1906564  A1A000DF		; 0xA1A000DF
A1906568  FFFF8300		; 0xFFFF8300
A190656C  FFFFFFFF		; 0x100004AF

END_PROGRAM
**************************************************
	List program: MotoHour
**************************************************

PROGRAM MotoHour

        VAR
MotoHour_Mode_1 : REAL := 0.0;	{ DE:"Час, напрацювання мс насос А" }
MotoHour_Mode_2 : REAL := 0.0;	{ DE:"Час, напрацювання мс насос В" }
MotoHour_Mode_3 : REAL := 0.0;	{ DE:"Час, напрацювання мс насос С" }
	END_VAR

END_PROGRAM

#0		{SRC:MotoHour}
#1		(*$WAITSWITCH$*)
#2		
#3		
#4			(* IF Motor_A *)
#5			LD		Motor_A	{LNXT:3|-1|-1}
(*) UNDEF
A1906570  F8DF 722C		ldr r7, [pc, #+556] ; 0x100004AC
A1906574  7838     		ldrb r0, [r7]

#6			JMPCN	$label0	{LNXT:3|4|6}
(-) BOOL
A1906576  2800     		cmp r0, #0
A1906578  D020     		beq #64 ; 0xA19065BC


#7		
#8			(* THEN *)
#9		
#10				(* MotoHour_Mode_1 := MotoHour_Mode_1 + 1; *)
#11				LD		MotoHour_Mode_1	{LNXT:4|6|-1}
(*) UNDEF
A190657C  F8DF 720C		ldr r7, [pc, #+524] ; 0xA1A000E0
A1906580  6838     		ldr r0, [r7]

#12				ADD		1	{LNXT:4|6|-1}
(*) REAL
A1906582  2701     		mov r7, #1 ; 1
A1906584  B082     		sub sp, sp, #8
A1906586  F8CD 0000		str r0, [sp]
A190658A  4638     		mov r0, r7
A190658C  F8DF 4204		ldr r4, [pc, #+516] ; 0x111F3
A1906590  F044 0401		orr r4, r4, #1
A1906594  47A0     		blx r4
A1906596  4607     		mov r7, r0
A1906598  F8DD 0000		ldr r0, [sp]
A190659C  B002     		add sp, sp, #8
A190659E  B082     		sub sp, sp, #8
A19065A0  F8CD 1000		str r1, [sp]
A19065A4  4639     		mov r1, r7
A19065A6  F8DF 41F0		ldr r4, [pc, #+496] ; 0x11233
A19065AA  F044 0401		orr r4, r4, #1
A19065AE  47A0     		blx r4
A19065B0  F8DD 1000		ldr r1, [sp]
A19065B4  B002     		add sp, sp, #8

#13				ST		MotoHour_Mode_1	{LNXT:4|6|-1}
(*) REAL
A19065B6  F8DF 71D4		ldr r7, [pc, #+468] ; 0xA1A000E0
A19065BA  6038     		str r0, [r7]

#14		
#15		$label0:
#16			(* END_IF *)
#17		
#18		
#19			(* IF Motor_A *)
#20			LD		Motor_A	{LNXT:6|-1|-1}
(*) UNDEF
A19065BC  F8DF 71E0		ldr r7, [pc, #+480] ; 0x100004AC
A19065C0  7838     		ldrb r0, [r7]

#21			NOT	{LNXT:6|-1|-1}
(*) BOOL
A19065C2  2800     		cmp r0, #0
A19065C4  BF08 2001		eqmov r0, #1
A19065C8  BF18 2000		nemov r0, #0

#22			JMPCN	$label1	{LNXT:6|7|11}
(-) BOOL
A19065CC  2800     		cmp r0, #0
A19065CE  D027     		beq #78 ; 0xA1906620


#23		
#24			(* THEN *)
#25		
#26				(* MotoHour_Mode_1 := MotoHour_Mode_1; *)
#27				MOVE		MotoHour_Mode_1,MotoHour_Mode_1	{LNXT:7|8|-1}
(*) BOOL
A19065D2  F8DF 71B8		ldr r7, [pc, #+440] ; 0xA1A000E0
A19065D6  6838     		ldr r0, [r7]
A19065D8  F8DF 71B0		ldr r7, [pc, #+432] ; 0xA1A000E0
A19065DC  6038     		str r0, [r7]

#28		
#29				(* MotoHour_1 := MotoHour_Mode_1 / 3600; *)
#30				LD		MotoHour_Mode_1	{LNXT:8|11|-1}
(*) UNDEF
A19065DE  F8DF 71AC		ldr r7, [pc, #+428] ; 0xA1A000E0
A19065E2  6838     		ldr r0, [r7]

#31				DIV		3600	{LNXT:8|11|-1}
(*) REAL
A19065E4  F44F 6761		mov r7, #3600 ; 3600
A19065E8  B082     		sub sp, sp, #8
A19065EA  F8CD 0000		str r0, [sp]
A19065EE  4638     		mov r0, r7
A19065F0  F8DF 41A0		ldr r4, [pc, #+416] ; 0x111F3
A19065F4  F044 0401		orr r4, r4, #1
A19065F8  47A0     		blx r4
A19065FA  4607     		mov r7, r0
A19065FC  F8DD 0000		ldr r0, [sp]
A1906600  B002     		add sp, sp, #8
A1906602  B082     		sub sp, sp, #8
A1906604  F8CD 1000		str r1, [sp]
A1906608  4639     		mov r1, r7
A190660A  F8DF 4190		ldr r4, [pc, #+400] ; 0x11263
A190660E  F044 0401		orr r4, r4, #1
A1906612  47A0     		blx r4
A1906614  F8DD 1000		ldr r1, [sp]
A1906618  B002     		add sp, sp, #8

#32				ST		MotoHour_1	{LNXT:8|11|-1}
(*) REAL
A190661A  F8DF 7168		ldr r7, [pc, #+360] ; 0xA0003F14
A190661E  6038     		str r0, [r7]

#33		
#34		$label1:
#35			(* END_IF *)
#36		
#37		
#38			(* IF Motor_B *)
#39			LD		Motor_B	{LNXT:11|-1|-1}
(*) UNDEF
A1906620  F8DF 7180		ldr r7, [pc, #+384] ; 0x100004AD
A1906624  7838     		ldrb r0, [r7]

#40			JMPCN	$label2	{LNXT:11|12|14}
(-) BOOL
A1906626  2800     		cmp r0, #0
A1906628  D020     		beq #64 ; 0xA190666C


#41		
#42			(* THEN *)
#43		
#44				(* MotoHour_Mode_2 := MotoHour_Mode_2 + 1; *)
#45				LD		MotoHour_Mode_2	{LNXT:12|14|-1}
(*) UNDEF
A190662C  F8DF 7160		ldr r7, [pc, #+352] ; 0xA1A000E4
A1906630  6838     		ldr r0, [r7]

#46				ADD		1	{LNXT:12|14|-1}
(*) REAL
A1906632  2701     		mov r7, #1 ; 1
A1906634  B082     		sub sp, sp, #8
A1906636  F8CD 0000		str r0, [sp]
A190663A  4638     		mov r0, r7
A190663C  F8DF 4154		ldr r4, [pc, #+340] ; 0x111F3
A1906640  F044 0401		orr r4, r4, #1
A1906644  47A0     		blx r4
A1906646  4607     		mov r7, r0
A1906648  F8DD 0000		ldr r0, [sp]
A190664C  B002     		add sp, sp, #8
A190664E  B082     		sub sp, sp, #8
A1906650  F8CD 1000		str r1, [sp]
A1906654  4639     		mov r1, r7
A1906656  F8DF 4140		ldr r4, [pc, #+320] ; 0x11233
A190665A  F044 0401		orr r4, r4, #1
A190665E  47A0     		blx r4
A1906660  F8DD 1000		ldr r1, [sp]
A1906664  B002     		add sp, sp, #8

#47				ST		MotoHour_Mode_2	{LNXT:12|14|-1}
(*) REAL
A1906666  F8DF 7128		ldr r7, [pc, #+296] ; 0xA1A000E4
A190666A  6038     		str r0, [r7]

#48		
#49		$label2:
#50			(* END_IF *)
#51		
#52		
#53			(* IF Motor_B *)
#54			LD		Motor_B	{LNXT:14|-1|-1}
(*) UNDEF
A190666C  F8DF 7134		ldr r7, [pc, #+308] ; 0x100004AD
A1906670  7838     		ldrb r0, [r7]

#55			NOT	{LNXT:14|-1|-1}
(*) BOOL
A1906672  2800     		cmp r0, #0
A1906674  BF08 2001		eqmov r0, #1
A1906678  BF18 2000		nemov r0, #0

#56			JMPCN	$label3	{LNXT:14|15|19}
(-) BOOL
A190667C  2800     		cmp r0, #0
A190667E  D027     		beq #78 ; 0xA19066D0


#57		
#58			(* THEN *)
#59		
#60				(* MotoHour_Mode_2 := MotoHour_Mode_2; *)
#61				MOVE		MotoHour_Mode_2,MotoHour_Mode_2	{LNXT:15|16|-1}
(*) BOOL
A1906682  F8DF 710C		ldr r7, [pc, #+268] ; 0xA1A000E4
A1906686  6838     		ldr r0, [r7]
A1906688  F8DF 7104		ldr r7, [pc, #+260] ; 0xA1A000E4
A190668C  6038     		str r0, [r7]

#62		
#63				(* MotoHour_2 := MotoHour_Mode_2 / 3600; *)
#64				LD		MotoHour_Mode_2	{LNXT:16|19|-1}
(*) UNDEF
A190668E  F8DF 7100		ldr r7, [pc, #+256] ; 0xA1A000E4
A1906692  6838     		ldr r0, [r7]

#65				DIV		3600	{LNXT:16|19|-1}
(*) REAL
A1906694  F44F 6761		mov r7, #3600 ; 3600
A1906698  B082     		sub sp, sp, #8
A190669A  F8CD 0000		str r0, [sp]
A190669E  4638     		mov r0, r7
A19066A0  F8DF 40F0		ldr r4, [pc, #+240] ; 0x111F3
A19066A4  F044 0401		orr r4, r4, #1
A19066A8  47A0     		blx r4
A19066AA  4607     		mov r7, r0
A19066AC  F8DD 0000		ldr r0, [sp]
A19066B0  B002     		add sp, sp, #8
A19066B2  B082     		sub sp, sp, #8
A19066B4  F8CD 1000		str r1, [sp]
A19066B8  4639     		mov r1, r7
A19066BA  F8DF 40E0		ldr r4, [pc, #+224] ; 0x11263
A19066BE  F044 0401		orr r4, r4, #1
A19066C2  47A0     		blx r4
A19066C4  F8DD 1000		ldr r1, [sp]
A19066C8  B002     		add sp, sp, #8

#66				ST		MotoHour_2	{LNXT:16|19|-1}
(*) REAL
A19066CA  F8DF 70BC		ldr r7, [pc, #+188] ; 0xA0003F18
A19066CE  6038     		str r0, [r7]

#67		
#68		$label3:
#69			(* END_IF *)
#70		
#71		
#72			(* IF Motor_C *)
#73			LD		Motor_C	{LNXT:19|-1|-1}
(*) UNDEF
A19066D0  F8DF 70D4		ldr r7, [pc, #+212] ; 0x100004AE
A19066D4  7838     		ldrb r0, [r7]

#74			JMPCN	$label4	{LNXT:19|20|22}
(-) BOOL
A19066D6  2800     		cmp r0, #0
A19066D8  D020     		beq #64 ; 0xA190671C


#75		
#76			(* THEN *)
#77		
#78				(* MotoHour_Mode_2 := MotoHour_Mode_2 + 1; *)
#79				LD		MotoHour_Mode_2	{LNXT:20|22|-1}
(*) UNDEF
A19066DC  F8DF 70B0		ldr r7, [pc, #+176] ; 0xA1A000E4
A19066E0  6838     		ldr r0, [r7]

#80				ADD		1	{LNXT:20|22|-1}
(*) REAL
A19066E2  2701     		mov r7, #1 ; 1
A19066E4  B082     		sub sp, sp, #8
A19066E6  F8CD 0000		str r0, [sp]
A19066EA  4638     		mov r0, r7
A19066EC  F8DF 40A4		ldr r4, [pc, #+164] ; 0x111F3
A19066F0  F044 0401		orr r4, r4, #1
A19066F4  47A0     		blx r4
A19066F6  4607     		mov r7, r0
A19066F8  F8DD 0000		ldr r0, [sp]
A19066FC  B002     		add sp, sp, #8
A19066FE  B082     		sub sp, sp, #8
A1906700  F8CD 1000		str r1, [sp]
A1906704  4639     		mov r1, r7
A1906706  F8DF 4090		ldr r4, [pc, #+144] ; 0x11233
A190670A  F044 0401		orr r4, r4, #1
A190670E  47A0     		blx r4
A1906710  F8DD 1000		ldr r1, [sp]
A1906714  B002     		add sp, sp, #8

#81				ST		MotoHour_Mode_2	{LNXT:20|22|-1}
(*) REAL
A1906716  F8DF 7078		ldr r7, [pc, #+120] ; 0xA1A000E4
A190671A  6038     		str r0, [r7]

#82		
#83		$label4:
#84			(* END_IF *)
#85		
#86		
#87			(* IF Motor_C *)
#88			LD		Motor_C	{LNXT:22|-1|-1}
(*) UNDEF
A190671C  F8DF 7088		ldr r7, [pc, #+136] ; 0x100004AE
A1906720  7838     		ldrb r0, [r7]

#89			NOT	{LNXT:22|-1|-1}
(*) BOOL
A1906722  2800     		cmp r0, #0
A1906724  BF08 2001		eqmov r0, #1
A1906728  BF18 2000		nemov r0, #0

#90			JMPCN	$label5	{LNXT:22|23|3}
(-) BOOL
A190672C  2800     		cmp r0, #0
A190672E  D027     		beq #78 ; 0xA1906780


#91		
#92			(* THEN *)
#93		
#94				(* MotoHour_Mode_2 := MotoHour_Mode_2; *)
#95				MOVE		MotoHour_Mode_2,MotoHour_Mode_2	{LNXT:23|24|-1}
(*) BOOL
A1906732  F8DF 705C		ldr r7, [pc, #+92] ; 0xA1A000E4
A1906736  6838     		ldr r0, [r7]
A1906738  F8DF 7054		ldr r7, [pc, #+84] ; 0xA1A000E4
A190673C  6038     		str r0, [r7]

#96		
#97				(* MotoHour_2 := MotoHour_Mode_2 / 3600; *)
#98				LD		MotoHour_Mode_2	{LNXT:24|3|-1}
(*) UNDEF
A190673E  F8DF 7050		ldr r7, [pc, #+80] ; 0xA1A000E4
A1906742  6838     		ldr r0, [r7]

#99				DIV		3600	{LNXT:24|3|-1}
(*) REAL
A1906744  F44F 6761		mov r7, #3600 ; 3600
A1906748  B082     		sub sp, sp, #8
A190674A  F8CD 0000		str r0, [sp]
A190674E  4638     		mov r0, r7
A1906750  F8DF 4040		ldr r4, [pc, #+64] ; 0x111F3
A1906754  F044 0401		orr r4, r4, #1
A1906758  47A0     		blx r4
A190675A  4607     		mov r7, r0
A190675C  F8DD 0000		ldr r0, [sp]
A1906760  B002     		add sp, sp, #8
A1906762  B082     		sub sp, sp, #8
A1906764  F8CD 1000		str r1, [sp]
A1906768  4639     		mov r1, r7
A190676A  F8DF 4030		ldr r4, [pc, #+48] ; 0x11263
A190676E  F044 0401		orr r4, r4, #1
A1906772  47A0     		blx r4
A1906774  F8DD 1000		ldr r1, [sp]
A1906778  B002     		add sp, sp, #8

#100				ST		MotoHour_2	{LNXT:24|3|-1}
(*) REAL
A190677A  F8DF 700C		ldr r7, [pc, #+12] ; 0xA0003F18
A190677E  6038     		str r0, [r7]

A1906780  E014     		b #40

A1906784  FFFFFFFF		; 0xA0003F14
A1906788  FFFFFFFF		; 0xA0003F18
A190678C  A1A000E0		; 0xA1A000E0
A1906790  A1A000E4		; 0xA1A000E4
A1906794  FFFFFFFF		; 0x000111F3
A1906798  FFFFFFFF		; 0x00011233
A190679C  FFFFFFFF		; 0x00011263
A19067A0  FFFFFFFF		; 0x100004AC
A19067A4  FFFFFFFF		; 0x100004AD
A19067A8  FFFFFFFF		; 0x100004AE

END_PROGRAM
**************************************************
	List program: SaveData
**************************************************

PROGRAM SaveData

        VAR
power_err : R_TRIG;
ton_start_up : TON;
res_lvl_min : BOOL;
res_lvl_1 : BOOL;
res_lvl_2 : BOOL;
res_lvl_3 : BOOL;
res_rotation : BOOL;
	END_VAR

END_PROGRAM

#0		{SRC:SaveData}
#1		(*$WAITSWITCH$*)
#2		
#3			(* ton_start_up *)
#4			MOVE		true,ton_start_up.IN	{LNXT:1|-1|-1}
(*) UDINT
A19067AC  2001     		mov r0, #1 ; 1
A19067AE  F8DF 71DC		ldr r7, [pc, #+476] ; 0xA1A000EC
A19067B2  7038     		strb r0, [r7]

#5			MOVE		5000,ton_start_up.PT	{LNXT:1|-1|-1}
(*) BOOL
A19067B4  F8DF 7200		ldr r7, [pc, #+512] ; 0x1388
A19067B8  4638     		mov r0, r7
A19067BA  F8DF 71D4		ldr r7, [pc, #+468] ; 0xA1A000F0
A19067BE  6038     		str r0, [r7]

#6			CAL		ton_start_up	{LNXT:1|2|-1}
(*) UDINT
A19067C0  E92D 0021		stmdb sp!, { r0, r5 }
A19067C4  F8DF 51C0		ldr r5, [pc, #+448] ; 0xA1A000E8
A19067C8  F8DF 41B4		ldr r4, [pc, #+436] ; 0xA1904570
A19067CC  F044 0401		orr r4, r4, #1
A19067D0  47A0     		blx r4
A19067D2  E8BD 0021		ldmia sp!, { r0, r5 }

#7		
#8			(* power_err *)
#9			LD		ton_start_up.Q	{LNXT:2|-1|-1}
(*) UNDEF
A19067D6  F8DF 71BC		ldr r7, [pc, #+444] ; 0xA1A000F4
A19067DA  7838     		ldrb r0, [r7]

#10			AND		di_rnpp	{LNXT:2|-1|-1}
(*) BOOL
A19067DC  F8DF 71A4		ldr r7, [pc, #+420] ; 0xA1A000DE
A19067E0  783F     		ldrb r7, [r7]
A19067E2  4038     		and r0, r0, r7

#11			ST		power_err.clk	{LNXT:2|-1|-1}
(*) BOOL
A19067E4  F8DF 71B4		ldr r7, [pc, #+436] ; 0xA1A000FD
A19067E8  7038     		strb r0, [r7]

#12			CAL		power_err	{LNXT:2|3|-1}
(*) BOOL
A19067EA  E92D 0021		stmdb sp!, { r0, r5 }
A19067EE  F8DF 51A8		ldr r5, [pc, #+424] ; 0xA1A000FC
A19067F2  F8DF 4188		ldr r4, [pc, #+392] ; 0xA1904538
A19067F6  F044 0401		orr r4, r4, #1
A19067FA  47A0     		blx r4
A19067FC  E8BD 0021		ldmia sp!, { r0, r5 }

#13		
#14		
#15			(* IF power_err.q *)
#16			LD		power_err.q	{LNXT:3|-1|-1}
(*) UNDEF
A1906800  F8DF 719C		ldr r7, [pc, #+412] ; 0xA1A000FE
A1906804  7838     		ldrb r0, [r7]

#17			JMPCN	$label0	{LNXT:3|4|1}
(-) BOOL
A1906806  2800     		cmp r0, #0
A1906808  F000 809D		beq #314 ; 0xA1906946


#18		
#19			(* THEN *)
#20		
#21		
#22				(* IF ep_level_min <> level_min *)
#23				LD		ep_level_min	{LNXT:4|-1|-1}
(*) UNDEF
A190680C  F8DF 7150		ldr r7, [pc, #+336] ; 0xA00017F6
A1906810  F9B7 0000		ldrsh r0, [r7]

#24				NE		level_min	{LNXT:4|-1|-1}
(*) INT
A1906814  F8DF 7150		ldr r7, [pc, #+336] ; 0xA0003F04
A1906818  F9B7 7000		ldrsh r7, [r7]
A190681C  42B8     		cmp r0, r7
A190681E  BF08 2000		eqmov r0, #0
A1906822  BF18 2001		nemov r0, #1

#25				JMPCN	$label1	{LNXT:4|4|5}
(-) BOOL
A1906826  2800     		cmp r0, #0
A1906828  D010     		beq #32 ; 0xA190684C


#26		
#27				(* THEN *)
#28		
#29					(* res_lvl_min := sysWriteParINT(ADR(ep_level_min), level_min); *)
#30					ADR		ep_level_min	{LNXT:4|5|-1}
(*) BOOL
A190682C  F8DF 0130		ldr r0, [pc, #+304] ; 0xA00017F6

#31					sysWriteParINT		level_min	{LNXT:4|5|-1}
(*) @INT
A1906830  4607     		mov r7, r0
A1906832  4638     		mov r0, r7
A1906834  F8DF 7130		ldr r7, [pc, #+304] ; 0xA0003F04
A1906838  F9B7 1000		ldrsh r1, [r7]
A190683C  F8DF 417C		ldr r4, [pc, #+380] ; 0x27D3B
A1906840  F044 0401		orr r4, r4, #1
A1906844  47A0     		blx r4

#32					ST		res_lvl_min	{LNXT:4|5|-1}
(*) BOOL
A1906846  F8DF 715C		ldr r7, [pc, #+348] ; 0xA1A00100
A190684A  7038     		strb r0, [r7]

#33		
#34		$label1:
#35				(* END_IF *)
#36		
#37		
#38				(* IF ep_level_1 <> Level_1 *)
#39				LD		ep_level_1	{LNXT:5|-1|-1}
(*) UNDEF
A190684C  F8DF 7104		ldr r7, [pc, #+260] ; 0xA00017F0
A1906850  F9B7 0000		ldrsh r0, [r7]

#40				NE		Level_1	{LNXT:5|-1|-1}
(*) INT
A1906854  F8DF 7114		ldr r7, [pc, #+276] ; 0xA0003F06
A1906858  F9B7 7000		ldrsh r7, [r7]
A190685C  42B8     		cmp r0, r7
A190685E  BF08 2000		eqmov r0, #0
A1906862  BF18 2001		nemov r0, #1

#41				JMPCN	$label2	{LNXT:5|5|6}
(-) BOOL
A1906866  2800     		cmp r0, #0
A1906868  D010     		beq #32 ; 0xA190688C


#42		
#43				(* THEN *)
#44		
#45					(* res_lvl_1 := sysWriteParINT(ADR(ep_level_1), Level_1); *)
#46					ADR		ep_level_1	{LNXT:5|6|-1}
(*) BOOL
A190686C  F8DF 00E4		ldr r0, [pc, #+228] ; 0xA00017F0

#47					sysWriteParINT		Level_1	{LNXT:5|6|-1}
(*) @INT
A1906870  4607     		mov r7, r0
A1906872  4638     		mov r0, r7
A1906874  F8DF 70F4		ldr r7, [pc, #+244] ; 0xA0003F06
A1906878  F9B7 1000		ldrsh r1, [r7]
A190687C  F8DF 413C		ldr r4, [pc, #+316] ; 0x27D3B
A1906880  F044 0401		orr r4, r4, #1
A1906884  47A0     		blx r4

#48					ST		res_lvl_1	{LNXT:5|6|-1}
(*) BOOL
A1906886  F8DF 7120		ldr r7, [pc, #+288] ; 0xA1A00101
A190688A  7038     		strb r0, [r7]

#49		
#50		$label2:
#51				(* END_IF *)
#52		
#53		
#54				(* IF ep_level_2 <> Level_2 *)
#55				LD		ep_level_2	{LNXT:6|-1|-1}
(*) UNDEF
A190688C  F8DF 70C8		ldr r7, [pc, #+200] ; 0xA00017F2
A1906890  F9B7 0000		ldrsh r0, [r7]

#56				NE		Level_2	{LNXT:6|-1|-1}
(*) INT
A1906894  F8DF 70D8		ldr r7, [pc, #+216] ; 0xA0003F08
A1906898  F9B7 7000		ldrsh r7, [r7]
A190689C  42B8     		cmp r0, r7
A190689E  BF08 2000		eqmov r0, #0
A19068A2  BF18 2001		nemov r0, #1

#57				JMPCN	$label3	{LNXT:6|6|8}
(-) BOOL
A19068A6  2800     		cmp r0, #0
A19068A8  D010     		beq #32 ; 0xA19068CC


#58		
#59				(* THEN *)
#60		
#61					(* res_lvl_2 := sysWriteParINT(ADR(ep_level_2), Level_2); *)
#62					ADR		ep_level_2	{LNXT:6|8|-1}
(*) BOOL
A19068AC  F8DF 00A8		ldr r0, [pc, #+168] ; 0xA00017F2

#63					sysWriteParINT		Level_2	{LNXT:6|8|-1}
(*) @INT
A19068B0  4607     		mov r7, r0
A19068B2  4638     		mov r0, r7
A19068B4  F8DF 70B8		ldr r7, [pc, #+184] ; 0xA0003F08
A19068B8  F9B7 1000		ldrsh r1, [r7]
A19068BC  F8DF 40FC		ldr r4, [pc, #+252] ; 0x27D3B
A19068C0  F044 0401		orr r4, r4, #1
A19068C4  47A0     		blx r4

#64					ST		res_lvl_2	{LNXT:6|8|-1}
(*) BOOL
A19068C6  F8DF 70E4		ldr r7, [pc, #+228] ; 0xA1A00102
A19068CA  7038     		strb r0, [r7]

#65		
#66		$label3:
#67				(* END_IF *)
#68		
#69		
#70				(* IF ep_level_3 <> Level_3 *)
#71				LD		ep_level_3	{LNXT:8|-1|-1}
(*) UNDEF
A19068CC  F8DF 708C		ldr r7, [pc, #+140] ; 0xA00017F4
A19068D0  F9B7 0000		ldrsh r0, [r7]

#72				NE		Level_3	{LNXT:8|-1|-1}
(*) INT
A19068D4  F8DF 709C		ldr r7, [pc, #+156] ; 0xA0003F0A
A19068D8  F9B7 7000		ldrsh r7, [r7]
A19068DC  42B8     		cmp r0, r7
A19068DE  BF08 2000		eqmov r0, #0
A19068E2  BF18 2001		nemov r0, #1

#73				JMPCN	$label4	{LNXT:8|8|9}
(-) BOOL
A19068E6  2800     		cmp r0, #0
A19068E8  D010     		beq #32 ; 0xA190690C


#74		
#75				(* THEN *)
#76		
#77					(* res_lvl_3 := sysWriteParINT(ADR(ep_level_3), Level_3); *)
#78					ADR		ep_level_3	{LNXT:8|9|-1}
(*) BOOL
A19068EC  F8DF 006C		ldr r0, [pc, #+108] ; 0xA00017F4

#79					sysWriteParINT		Level_3	{LNXT:8|9|-1}
(*) @INT
A19068F0  4607     		mov r7, r0
A19068F2  4638     		mov r0, r7
A19068F4  F8DF 707C		ldr r7, [pc, #+124] ; 0xA0003F0A
A19068F8  F9B7 1000		ldrsh r1, [r7]
A19068FC  F8DF 40BC		ldr r4, [pc, #+188] ; 0x27D3B
A1906900  F044 0401		orr r4, r4, #1
A1906904  47A0     		blx r4

#80					ST		res_lvl_3	{LNXT:8|9|-1}
(*) BOOL
A1906906  F8DF 70A8		ldr r7, [pc, #+168] ; 0xA1A00103
A190690A  7038     		strb r0, [r7]

#81		
#82		$label4:
#83				(* END_IF *)
#84		
#85		
#86				(* IF ep_rotation <> Rotation *)
#87				LD		ep_rotation	{LNXT:9|-1|-1}
(*) UNDEF
A190690C  F8DF 7054		ldr r7, [pc, #+84] ; 0xA00017F8
A1906910  7838     		ldrb r0, [r7]

#88				NE		Rotation	{LNXT:9|-1|-1}
(*) BOOL
A1906912  F8DF 7064		ldr r7, [pc, #+100] ; 0xA0003F10
A1906916  783F     		ldrb r7, [r7]
A1906918  42B8     		cmp r0, r7
A190691A  BF08 2000		eqmov r0, #0
A190691E  BF18 2001		nemov r0, #1

#89				JMPCN	$label5	{LNXT:9|9|1}
(-) BOOL
A1906922  2800     		cmp r0, #0
A1906924  D00F     		beq #30 ; 0xA1906946


#90		
#91				(* THEN *)
#92		
#93					(* res_rotation := sysWriteParBOOL(ADR(ep_rotation), Rotation); *)
#94					ADR		ep_rotation	{LNXT:9|1|-1}
(*) BOOL
A1906928  F8DF 0038		ldr r0, [pc, #+56] ; 0xA00017F8

#95					sysWriteParBOOL		Rotation	{LNXT:9|1|-1}
(*) @BOOL
A190692C  4607     		mov r7, r0
A190692E  4638     		mov r0, r7
A1906930  F8DF 7044		ldr r7, [pc, #+68] ; 0xA0003F10
A1906934  7839     		ldrb r1, [r7]
A1906936  F8DF 4088		ldr r4, [pc, #+136] ; 0x27DD7
A190693A  F044 0401		orr r4, r4, #1
A190693E  47A0     		blx r4

#96					ST		res_rotation	{LNXT:9|1|-1}
(*) BOOL
A1906940  F8DF 7070		ldr r7, [pc, #+112] ; 0xA1A00104
A1906944  7038     		strb r0, [r7]

A1906946  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
A190694A  F8DD E000		ldr lr, [sp]
A190694E  B002     		add sp, sp, #8

A1906950  4770     		bx lr

A1906954  FFFFFFFF		; 0xA00017F0
A1906958  FFFFFFFF		; 0xA00017F2
A190695C  FFFFFFFF		; 0xA00017F4
A1906960  FFFFFFFF		; 0xA00017F6
A1906964  FFFFFFFF		; 0xA00017F8
A1906968  FFFFFFFF		; 0xA0003F04
A190696C  FFFFFFFF		; 0xA0003F06
A1906970  FFFFFFFF		; 0xA0003F08
A1906974  FFFFFFFF		; 0xA0003F0A
A1906978  FFFFFFFF		; 0xA0003F10
A190697C  A1904538		; 0xA1904538
A1906980  A1904570		; 0xA1904570
A1906984  A1A000DE		; 0xA1A000DE
A1906988  A1A000E8		; 0xA1A000E8
A190698C  A1A000EC		; 0xA1A000EC
A1906990  A1A000F0		; 0xA1A000F0
A1906994  A1A000F4		; 0xA1A000F4
A1906998  A1A000FC		; 0xA1A000FC
A190699C  A1A000FD		; 0xA1A000FD
A19069A0  A1A000FE		; 0xA1A000FE
A19069A4  A1A00100		; 0xA1A00100
A19069A8  A1A00101		; 0xA1A00101
A19069AC  A1A00102		; 0xA1A00102
A19069B0  A1A00103		; 0xA1A00103
A19069B4  A1A00104		; 0xA1A00104
A19069B8  00001388		; 0x00001388
A19069BC  FFFFFFFF		; 0x00027D3B
A19069C0  FFFFFFFF		; 0x00027DD7

END_PROGRAM


**************************************************
	Target variable image generation
**************************************************


*** INPUT:
A19069C4  B082     		sub sp, sp, #8
A19069C6  F8CD E000		str lr, [sp]
A19069CA  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

A19069CE  F8DF 70E4		ldr r7, [pc, #+228] ; 0x10000444
A19069D2  8838     		ldrh r0, [r7]
A19069D4  F8DF 708C		ldr r7, [pc, #+140] ; 0xA1A00012
A19069D8  8038     		strh r0, [r7]

A19069DA  F8DF 70C8		ldr r7, [pc, #+200] ; 0x10000426
A19069DE  7838     		ldrb r0, [r7]
A19069E0  F8DF 707C		ldr r7, [pc, #+124] ; 0xA1A00011
A19069E4  7038     		strb r0, [r7]

A19069E6  F8DF 70B0		ldr r7, [pc, #+176] ; 0x10000423
A19069EA  7838     		ldrb r0, [r7]
A19069EC  F8DF 7078		ldr r7, [pc, #+120] ; 0xA1A0002A
A19069F0  7038     		strb r0, [r7]

A19069F2  F8DF 70A8		ldr r7, [pc, #+168] ; 0x10000424
A19069F6  7838     		ldrb r0, [r7]
A19069F8  F8DF 7070		ldr r7, [pc, #+112] ; 0xA1A0002B
A19069FC  7038     		strb r0, [r7]

A19069FE  F8DF 7090		ldr r7, [pc, #+144] ; 0x10000421
A1906A02  7838     		ldrb r0, [r7]
A1906A04  F8DF 7068		ldr r7, [pc, #+104] ; 0xA1A0002C
A1906A08  7038     		strb r0, [r7]

A1906A0A  F8DF 7094		ldr r7, [pc, #+148] ; 0x10000425
A1906A0E  7838     		ldrb r0, [r7]
A1906A10  F8DF 7060		ldr r7, [pc, #+96] ; 0xA1A0002D
A1906A14  7038     		strb r0, [r7]

A1906A16  F8DF 707C		ldr r7, [pc, #+124] ; 0x10000422
A1906A1A  7838     		ldrb r0, [r7]
A1906A1C  F8DF 7058		ldr r7, [pc, #+88] ; 0xA1A0002E
A1906A20  7038     		strb r0, [r7]

A1906A22  F8DF 7068		ldr r7, [pc, #+104] ; 0x10000420
A1906A26  7838     		ldrb r0, [r7]
A1906A28  F8DF 7050		ldr r7, [pc, #+80] ; 0xA1A0002F
A1906A2C  7038     		strb r0, [r7]

A1906A2E  F8DF 707C		ldr r7, [pc, #+124] ; 0x10000428
A1906A32  7838     		ldrb r0, [r7]
A1906A34  F8DF 7048		ldr r7, [pc, #+72] ; 0xA1A0008A
A1906A38  7038     		strb r0, [r7]

A1906A3A  F8DF 706C		ldr r7, [pc, #+108] ; 0x10000427
A1906A3E  7838     		ldrb r0, [r7]
A1906A40  F8DF 7044		ldr r7, [pc, #+68] ; 0xA1A000DF
A1906A44  7038     		strb r0, [r7]

A1906A46  F8DF 7068		ldr r7, [pc, #+104] ; 0x1000042A
A1906A4A  7838     		ldrb r0, [r7]
A1906A4C  F8DF 7034		ldr r7, [pc, #+52] ; 0xA1A000DE
A1906A50  7038     		strb r0, [r7]

A1906A52  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
A1906A56  F8DD E000		ldr lr, [sp]
A1906A5A  B002     		add sp, sp, #8

A1906A5C  4770     		bx lr

A1906A60  A1A00011		; 0xA1A00011
A1906A64  A1A00012		; 0xA1A00012
A1906A68  A1A0002A		; 0xA1A0002A
A1906A6C  A1A0002B		; 0xA1A0002B
A1906A70  A1A0002C		; 0xA1A0002C
A1906A74  A1A0002D		; 0xA1A0002D
A1906A78  A1A0002E		; 0xA1A0002E
A1906A7C  A1A0002F		; 0xA1A0002F
A1906A80  A1A0008A		; 0xA1A0008A
A1906A84  A1A000DE		; 0xA1A000DE
A1906A88  A1A000DF		; 0xA1A000DF
A1906A8C  FFFFFFFF		; 0x10000420
A1906A90  FFFFFFFF		; 0x10000421
A1906A94  FFFFFFFF		; 0x10000422
A1906A98  FFFFFFFF		; 0x10000423
A1906A9C  FFFFFFFF		; 0x10000424
A1906AA0  FFFFFFFF		; 0x10000425
A1906AA4  FFFFFFFF		; 0x10000426
A1906AA8  FFFFFFFF		; 0x10000427
A1906AAC  FFFFFFFF		; 0x10000428
A1906AB0  FFFFFFFF		; 0x1000042A
A1906AB4  FFFFFFFF		; 0x10000444


*** OUTPUT:
A1906AB8  B082     		sub sp, sp, #8
A1906ABA  F8CD E000		str lr, [sp]
A1906ABE  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

A1906AC2  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
A1906AC6  F8DD E000		ldr lr, [sp]
A1906ACA  B002     		add sp, sp, #8

A1906ACC  4770     		bx lr



**************************************************
	Task Timed init code
**************************************************

A1906ACE  B082     		sub sp, sp, #8
A1906AD0  F8CD E000		str lr, [sp]
A1906AD4  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

Var init: V::LVL.TM_WAIT_START = 5000
A1906AD8  F8DF 0038		ldr r0, [pc, #+56] ; 0x1388
A1906ADC  F8DF 7024		ldr r7, [pc, #+36] ; 0xA1A00028
A1906AE0  8038     		strh r0, [r7]

Var init: V::LVL.ROTATIONNUMBER = 1
A1906AE2  F8DF 002C		ldr r0, [pc, #+44] ; 0x1
A1906AE6  F8DF 7020		ldr r7, [pc, #+32] ; 0xA1A0005A
A1906AEA  8038     		strh r0, [r7]

Var init: V::LVL.CURRENTPUMP = 1
A1906AEC  F8DF 0020		ldr r0, [pc, #+32] ; 0x1
A1906AF0  F8DF 7018		ldr r7, [pc, #+24] ; 0xA1A0005C
A1906AF4  8038     		strh r0, [r7]

A1906AF6  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
A1906AFA  F8DD E000		ldr lr, [sp]
A1906AFE  B002     		add sp, sp, #8

A1906B00  4770     		bx lr

A1906B04  A1A00028		; 0xA1A00028
A1906B08  A1A0005A		; 0xA1A0005A
A1906B0C  A1A0005C		; 0xA1A0005C
A1906B10  00000001		; 0x00000001
A1906B14  00001388		; 0x00001388



**************************************************
	Global init code
**************************************************

A1906B20  B082     		sub sp, sp, #8
A1906B22  F8CD E000		str lr, [sp]
A1906B26  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

Var init: V:CONFIGURATION_VARIABLES:ROTATION_STATE = '0'
A1906B2A  F8DF 70AC		ldr r7, [pc, #+172] ; 0xA0003FBA
A1906B2E  2030     		mov r0, #0x30
A1906B30  7038     		strb r0, [r7, #+0]
A1906B32  2000     		mov r0, #0x00
A1906B34  7078     		strb r0, [r7, #+1]
A1906B36  F8DF 80A4		ldr r8, [pc, #+164] ; 0x2
A1906B3A  4447     		add r7, r7, r8
A1906B3C  2000     		mov r0, #0
A1906B3E  7038     		strb r0, [r7]

Var init: V:CONFIGURATION_VARIABLES:FLOODING_STATE = '0'
A1906B40  F8DF 7090		ldr r7, [pc, #+144] ; 0xA0003FA4
A1906B44  F8DF 0098		ldr r0, [pc, #+152] ; 0x30
A1906B48  7038     		strb r0, [r7]
A1906B4A  1C7F     		add r7, r7, #1
A1906B4C  2000     		mov r0, #0
A1906B4E  7038     		strb r0, [r7]

Var init: V:CONFIGURATION_VARIABLES:STATE_MOTOR_1 = '0'
A1906B50  F8DF 7068		ldr r7, [pc, #+104] ; 0xA0003F20
A1906B54  F8DF 0088		ldr r0, [pc, #+136] ; 0x30
A1906B58  7038     		strb r0, [r7]
A1906B5A  1C7F     		add r7, r7, #1
A1906B5C  2000     		mov r0, #0
A1906B5E  7038     		strb r0, [r7]

Var init: V:CONFIGURATION_VARIABLES:STATE_MOTOR_2 = '0'
A1906B60  F8DF 705C		ldr r7, [pc, #+92] ; 0xA0003F40
A1906B64  F8DF 0078		ldr r0, [pc, #+120] ; 0x30
A1906B68  7038     		strb r0, [r7]
A1906B6A  1C7F     		add r7, r7, #1
A1906B6C  2000     		mov r0, #0
A1906B6E  7038     		strb r0, [r7]

Var init: V:CONFIGURATION_VARIABLES:STATE_MOTOR_3 = '0'
A1906B70  F8DF 7050		ldr r7, [pc, #+80] ; 0xA0003F60
A1906B74  F8DF 0068		ldr r0, [pc, #+104] ; 0x30
A1906B78  7038     		strb r0, [r7]
A1906B7A  1C7F     		add r7, r7, #1
A1906B7C  2000     		mov r0, #0
A1906B7E  7038     		strb r0, [r7]

Var init: V:CONFIGURATION_VARIABLES:AUTO_STATE_1 = '0'
A1906B80  F8DF 7044		ldr r7, [pc, #+68] ; 0xA0003F80
A1906B84  F8DF 0058		ldr r0, [pc, #+88] ; 0x30
A1906B88  7038     		strb r0, [r7]
A1906B8A  1C7F     		add r7, r7, #1
A1906B8C  2000     		mov r0, #0
A1906B8E  7038     		strb r0, [r7]

Var init: V:CONFIGURATION_VARIABLES:AUTO_STATE_2 = '0'
A1906B90  F8DF 7038		ldr r7, [pc, #+56] ; 0xA0003F8C
A1906B94  F8DF 0048		ldr r0, [pc, #+72] ; 0x30
A1906B98  7038     		strb r0, [r7]
A1906B9A  1C7F     		add r7, r7, #1
A1906B9C  2000     		mov r0, #0
A1906B9E  7038     		strb r0, [r7]

Var init: V:CONFIGURATION_VARIABLES:AUTO_STATE_3 = '0'
A1906BA0  F8DF 702C		ldr r7, [pc, #+44] ; 0xA0003F98
A1906BA4  F8DF 0038		ldr r0, [pc, #+56] ; 0x30
A1906BA8  7038     		strb r0, [r7]
A1906BAA  1C7F     		add r7, r7, #1
A1906BAC  2000     		mov r0, #0
A1906BAE  7038     		strb r0, [r7]

A1906BB0  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
A1906BB4  F8DD E000		ldr lr, [sp]
A1906BB8  B002     		add sp, sp, #8

A1906BBA  4770     		bx lr

A1906BBC  FFFFFFFF		; 0xA0003F20
A1906BC0  FFFFFFFF		; 0xA0003F40
A1906BC4  FFFFFFFF		; 0xA0003F60
A1906BC8  FFFFFFFF		; 0xA0003F80
A1906BCC  FFFFFFFF		; 0xA0003F8C
A1906BD0  FFFFFFFF		; 0xA0003F98
A1906BD4  FFFFFFFF		; 0xA0003FA4
A1906BD8  FFFFFFFF		; 0xA0003FBA
A1906BDC  00000002		; 0x00000002
A1906BE0  00000030		; 0x00000030



**************************************************
	Global RETAIN init code
**************************************************

A1906BE4  B082     		sub sp, sp, #8
A1906BE6  F8CD E000		str lr, [sp]
A1906BEA  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

A1906BEE  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
A1906BF2  F8DD E000		ldr lr, [sp]
A1906BF6  B002     		add sp, sp, #8

A1906BF8  4770     		bx lr



********************************************
MEMORY MAP
********************************************

Code area type:          		       main code
Start code area:          		00000000A1900000h
End code area:            		00000000A19070E4h
Code size:                		000070E4h

Start local data area:    		00000000A1A00000h
End local data area:      		00000000A1A00105h
Local data size:          		00000105h

Start retentive data area:		0000000000000000h
End retentive data area:  		0000000000000000h
Retentive data size:      		00000000h

Start bit data area:      		0000000000000000h
End bit data area:        		0000000000000000h
Bit data size:            		00000000h



********************************************
CODE ID:                                1B160044
DEBUG MEMO ID:                          A190B976
FULL MEMO ID:                           0000984E
********************************************
