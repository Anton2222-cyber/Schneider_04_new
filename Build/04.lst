***********************************************************************
*
*	CODE GENERATION LISTING FOR: 04
*	COMPILER VERSION: 6.0.0.52
*
***********************************************************************

**************************************************
	CODE GENERATOR SUBROUTINES
**************************************************

$$MOD:
A1804500  FB90 F3F1		sdiv r3, r0, r1
A1804504  4359     		mul r1, r1, r3
A1804506  EBC1 0000		rsb r0, r1, r0
A180450A  4770     		bx lr

$$MOD_U:
A180450C  FBB0 F3F1		udiv r3, r0, r1
A1804510  4359     		mul r1, r1, r3
A1804512  EBC1 0000		rsb r0, r1, r0
A1804516  4770     		bx lr

**************************************************
	List function block: R_TRIG
**************************************************

FUNCTION_BLOCK R_TRIG

	{ DE:"<HTML>The output Q will remain FALSE as long as the input variable CLK is FALSE.<br>
As soon as CLK returns TRUE, Q will first return TRUE.<br><br>
This means each time the function is called up, Q will return FALSE until CLK has falling edge followed by an rising edge.<br><br>
<img src= r_trig.png>" }

        VAR_INPUT
clk : BOOL;	{ DE:"Input for edge detection" }
	END_VAR

        VAR_OUTPUT
q : BOOL;	{ DE:"Raising edge output" }
	END_VAR

        VAR
m : BOOL := FALSE;
	END_VAR

END_FUNCTION_BLOCK

A1804518  E92D 4040		stmdb sp!, { r6, lr }
A180451C  462E     		mov r6, r5

#0		{SRC:R_TRIG}
#1		
#2			LD		clk
(*) UNDEF
A180451E  F8DF 7028		ldr r7, [pc, #+40] ; 0x1
A1804522  5DF0     		ldrb r0, [r6, +r7]

#3			ANDN	m
(*) BOOL
A1804524  7837     		ldrb r7, [r6]
A1804526  2F00     		cmp r7, #0
A1804528  BF08 2701		eqmov r7, #1
A180452C  BF18 2700		nemov r7, #0
A1804530  4038     		and r0, r0, r7

#4			ST		q
(*) BOOL
A1804532  F8DF 7018		ldr r7, [pc, #+24] ; 0x2
A1804536  55F0     		strb r0, [r6, +r7]

#5		
#6			LD		clk
(*) UNDEF
A1804538  F8DF 700C		ldr r7, [pc, #+12] ; 0x1
A180453C  5DF0     		ldrb r0, [r6, +r7]

#7			ST		m
(-) BOOL
A180453E  7030     		strb r0, [r6]

A1804540  E8BD 4040		ldmia sp!, { r6, lr }

A1804544  4770     		bx lr

A1804548  00000001		; 0x00000001
A180454C  00000002		; 0x00000002


Frame allocation (hex):

	0000 bit  0: VAR m
	0001 bit  0: VAR clk
	0002 bit  0: VAR q

END_FUNCTION_BLOCK
**************************************************
	List function block: TON
**************************************************

FUNCTION_BLOCK TON

	{ DE:"<HTML>The TON block produces a delayed output Q of the input IN. The delay time is expressed in milliseconds on the PT input.</br></br>
<img src= tonscheme.png>
<ul>
<li>if IN is FALSE Q is false</li>
<li>Q becomes TRUE as IN remains TRUE for PT milliseconds</li>
<li>Q remains TRUE until IN remains TRUE</li>
</ul>" }

        VAR_INPUT
IN : BOOL;	{ DE:"Timer input source" }
PT : UDINT;	{ DE:"Preset time value (ms)" }
	END_VAR

        VAR_OUTPUT
Q : BOOL;	{ DE:"Timer output" }
ET : UDINT;	{ DE:"Timer current value (ms)" }
	END_VAR

        VAR_EXTERNAL
	{G:"System_Timers"}
sysTimer AT %MD0.0 : UDINT;	{ DE:"System timer [ms]" }
	END_VAR

        VAR
timStart : UDINT;	{ DE:"Time value at start of counting" }
	END_VAR

END_FUNCTION_BLOCK

A1804550  E92D 4040		stmdb sp!, { r6, lr }
A1804554  462E     		mov r6, r5

#0		{SRC:TON}
#1		
#2			(*	Check if in counting	*)
#3		
#4			LD		IN
(*) UNDEF
A1804556  F8DF 7084		ldr r7, [pc, #+132] ; 0x4
A180455A  5DF0     		ldrb r0, [r6, +r7]

#5			JMPCN	lReset
(-) BOOL
A180455C  2800     		cmp r0, #0
A180455E  D031     		beq #98 ; 0xA18045C4


#6		
#7			(*	Check if Q is TRUE *)
#8			LD		Q
(*) UNDEF
A1804562  F8DF 7080		ldr r7, [pc, #+128] ; 0xC
A1804566  5DF0     		ldrb r0, [r6, +r7]

#9			RETC
#10			
(-) BOOL
A1804568  2800     		cmp r0, #0
A180456A  D134     		bne #104 ; 0xA18045D6


#11			(*	Check if already in counting *)
#12			LD		timStart
(-) UNDEF
A180456E  6830     		ldr r0, [r6]

#13			EQ		0
(*) UDINT
A1804570  2800     		cmp r0, #0
A1804572  BF18 2000		nemov r0, #0
A1804576  BF08 2001		eqmov r0, #1

#14			JMPCN	lUpdate
(-) BOOL
A180457A  2800     		cmp r0, #0
A180457C  D004     		beq #8 ; 0xA1804588


#15		
#16			(*	Start of counting *)
#17			LD		sysTimer
(*) UNDEF
A1804580  F8DF 7068		ldr r7, [pc, #+104] ; 0x1000052C
A1804584  6838     		ldr r0, [r7]

#18			ST		timStart
(-) UDINT
A1804586  6030     		str r0, [r6]

#19			
#20		lUpdate:
#21		
#22			(*	Update timer and check if time elapsed *)
#23			LD		sysTimer
(*) UNDEF
A1804588  F8DF 7060		ldr r7, [pc, #+96] ; 0x1000052C
A180458C  6838     		ldr r0, [r7]

#24			SUB		timStart
(*) UDINT
A180458E  6837     		ldr r7, [r6]
A1804590  1BC0     		sub r0, r0, r7

#25			ST		ET
(*) UDINT
A1804592  F8DF 7054		ldr r7, [pc, #+84] ; 0x10
A1804596  51F0     		str r0, [r6, +r7]

#26			GE		PT
(*) UDINT
A1804598  F8DF 7044		ldr r7, [pc, #+68] ; 0x8
A180459C  59F7     		ldr r7, [r6, +r7]
A180459E  42B8     		cmp r0, r7
A18045A0  BF38 2000		lomov r0, #0
A18045A4  BF28 2001		hsmov r0, #1

#27			ST		Q
(*) BOOL
A18045A8  F8DF 7038		ldr r7, [pc, #+56] ; 0xC
A18045AC  55F0     		strb r0, [r6, +r7]

#28			RETCN
#29		
(-) BOOL
A18045AE  2800     		cmp r0, #0
A18045B0  D011     		beq #34 ; 0xA18045D6


#30			(*	Limit actual time value *)
#31			LD		PT
(*) UNDEF
A18045B4  F8DF 7028		ldr r7, [pc, #+40] ; 0x8
A18045B8  59F0     		ldr r0, [r6, +r7]

#32			ST		ET
(*) UDINT
A18045BA  F8DF 702C		ldr r7, [pc, #+44] ; 0x10
A18045BE  51F0     		str r0, [r6, +r7]

#33			RET
#34		
(-) UDINT
A18045C0  E009     		b #18 ; 0xA18045D6


#35		lReset:
#36		
#37			(*	Reset status *)
#38			LD		0
(-) UNDEF
A18045C4  2000     		mov r0, #0 ; 0

#39			ST		ET
(*) USINT
A18045C6  F8DF 7020		ldr r7, [pc, #+32] ; 0x10
A18045CA  51F0     		str r0, [r6, +r7]

#40			ST		timStart
(-) UDINT
A18045CC  6030     		str r0, [r6]

#41			LD		FALSE
(-) UNDEF
A18045CE  2000     		mov r0, #0 ; 0

#42			ST		Q
(*) BOOL
A18045D0  F8DF 7010		ldr r7, [pc, #+16] ; 0xC
A18045D4  55F0     		strb r0, [r6, +r7]

A18045D6  E8BD 4040		ldmia sp!, { r6, lr }

A18045DA  4770     		bx lr

A18045DC  00000004		; 0x00000004
A18045E0  00000008		; 0x00000008
A18045E4  0000000C		; 0x0000000C
A18045E8  00000010		; 0x00000010
A18045EC  FFFFFFFF		; 0x1000052C


Frame allocation (hex):

	0000       : VAR timStart
	0004 bit  0: VAR IN
	0008       : VAR PT
	000C bit  0: VAR Q
	0010       : VAR ET

END_FUNCTION_BLOCK
**************************************************
	List program: main
**************************************************

PROGRAM main

END_PROGRAM

A18045F0  B082     		sub sp, sp, #8
A18045F2  F8CD E000		str lr, [sp]
A18045F6  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

#0		{SRC:main}
#1		(*$WAITSWITCH$*)
#2		
#3			(* cnt := cnt + 1; *)
#4			LD		cnt	{LNXT:2|2|-1}
(*) UNDEF
A18045FA  F8DF 701C		ldr r7, [pc, #+28] ; 0xA1A000DC
A18045FE  F9B7 0000		ldrsh r0, [r7]

#5			ADD		1	{LNXT:2|2|-1}
(-) INT
A1804602  1C40     		add r0, r0, #1

#6			ST		cnt	{LNXT:2|2|-1}
(*) INT
A1804604  F8DF 7010		ldr r7, [pc, #+16] ; 0xA1A000DC
A1804608  8038     		strh r0, [r7]

A180460A  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
A180460E  F8DD E000		ldr lr, [sp]
A1804612  B002     		add sp, sp, #8

A1804614  4770     		bx lr

A1804618  A1A000DC		; 0xA1A000DC

END_PROGRAM


**************************************************
	Target variable image generation
**************************************************


*** INPUT:
A180461C  B082     		sub sp, sp, #8
A180461E  F8CD E000		str lr, [sp]
A1804622  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

A1804626  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
A180462A  F8DD E000		ldr lr, [sp]
A180462E  B002     		add sp, sp, #8

A1804630  4770     		bx lr


*** OUTPUT:
A1804632  B082     		sub sp, sp, #8
A1804634  F8CD E000		str lr, [sp]
A1804638  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

A180463C  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
A1804640  F8DD E000		ldr lr, [sp]
A1804644  B002     		add sp, sp, #8

A1804646  4770     		bx lr



**************************************************
	Task Background init code
**************************************************

A1804648  B082     		sub sp, sp, #8
A180464A  F8CD E000		str lr, [sp]
A180464E  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

A1804652  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
A1804656  F8DD E000		ldr lr, [sp]
A180465A  B002     		add sp, sp, #8

A180465C  4770     		bx lr

**************************************************
	List program: DownloadData
**************************************************

PROGRAM DownloadData

END_PROGRAM

A1804670  B082     		sub sp, sp, #8
A1804672  F8CD E000		str lr, [sp]
A1804676  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

#0		{SRC:DownloadData}
#1		(*$WAITSWITCH$*)
#2		
#3			(* level_min:=ep_level_min; *)
#4			MOVE		ep_level_min,level_min	{LNXT:1|2|-1}
(*) UDINT
A180467A  F8DF 705C		ldr r7, [pc, #+92] ; 0xA00017F6
A180467E  F9B7 0000		ldrsh r0, [r7]
A1804682  F8DF 705C		ldr r7, [pc, #+92] ; 0xA0003F04
A1804686  8038     		strh r0, [r7]

#5		
#6			(* Level_1:=ep_level_1; *)
#7			MOVE		ep_level_1,Level_1	{LNXT:2|3|-1}
(*) INT
A1804688  F8DF 7040		ldr r7, [pc, #+64] ; 0xA00017F0
A180468C  F9B7 0000		ldrsh r0, [r7]
A1804690  F8DF 7050		ldr r7, [pc, #+80] ; 0xA0003F06
A1804694  8038     		strh r0, [r7]

#8		
#9			(* Level_2:=ep_level_2; *)
#10			MOVE		ep_level_2,Level_2	{LNXT:3|4|-1}
(*) INT
A1804696  F8DF 7038		ldr r7, [pc, #+56] ; 0xA00017F2
A180469A  F9B7 0000		ldrsh r0, [r7]
A180469E  F8DF 7048		ldr r7, [pc, #+72] ; 0xA0003F08
A18046A2  8038     		strh r0, [r7]

#11		
#12			(* Level_3:=ep_level_3; *)
#13			MOVE		ep_level_3,Level_3	{LNXT:4|5|-1}
(*) INT
A18046A4  F8DF 702C		ldr r7, [pc, #+44] ; 0xA00017F4
A18046A8  F9B7 0000		ldrsh r0, [r7]
A18046AC  F8DF 703C		ldr r7, [pc, #+60] ; 0xA0003F0A
A18046B0  8038     		strh r0, [r7]

#14		
#15			(* Rotation:=ep_rotation; *)
#16			MOVE		ep_rotation,Rotation	{LNXT:5|1|-1}
(*) INT
A18046B2  F8DF 7028		ldr r7, [pc, #+40] ; 0xA00017F8
A18046B6  7838     		ldrb r0, [r7]
A18046B8  F8DF 7034		ldr r7, [pc, #+52] ; 0xA0003F10
A18046BC  7038     		strb r0, [r7]

A18046BE  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
A18046C2  F8DD E000		ldr lr, [sp]
A18046C6  B002     		add sp, sp, #8

A18046C8  4770     		bx lr

A18046CC  FFFFFFFF		; 0xA00017F0
A18046D0  FFFFFFFF		; 0xA00017F2
A18046D4  FFFFFFFF		; 0xA00017F4
A18046D8  FFFFFFFF		; 0xA00017F6
A18046DC  FFFFFFFF		; 0xA00017F8
A18046E0  FFFFFFFF		; 0xA0003F04
A18046E4  FFFFFFFF		; 0xA0003F06
A18046E8  FFFFFFFF		; 0xA0003F08
A18046EC  FFFFFFFF		; 0xA0003F0A
A18046F0  FFFFFFFF		; 0xA0003F10

END_PROGRAM


**************************************************
	Target variable image generation
**************************************************


*** INPUT:
A18046F4  4770     		bx lr


*** OUTPUT:
A18046F6  4770     		bx lr



**************************************************
	Task Boot init code
**************************************************

A18046F8  B082     		sub sp, sp, #8
A18046FA  F8CD E000		str lr, [sp]
A18046FE  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

A1804702  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
A1804706  F8DD E000		ldr lr, [sp]
A180470A  B002     		add sp, sp, #8

A180470C  4770     		bx lr

**************************************************
	List program: ParCheck
**************************************************

PROGRAM ParCheck

END_PROGRAM

A1804720  B082     		sub sp, sp, #8
A1804722  F8CD E000		str lr, [sp]
A1804726  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

#0		{SRC:ParCheck}
#1		(*$WAITSWITCH$*)
#2		
#3		
#4			(* IF Par_POLI AND 16#fc00) <> 2048 *)
#5			LD		Par_POLI	{LNXT:2|-1|-1}
(*) UNDEF
A180472A  F8DF 7034		ldr r7, [pc, #+52] ; 0x10000182
A180472E  8838     		ldrh r0, [r7]

#6			AND		16#fc00	{LNXT:2|-1|-1}
(*) UINT
A1804730  F44F 477C		mov r7, #64512 ; 64512
A1804734  4038     		and r0, r0, r7

#7			NE		2048	{LNXT:2|-1|-1}
(*) UINT
A1804736  F44F 6700		mov r7, #2048 ; 2048
A180473A  42B8     		cmp r0, r7
A180473C  BF08 2000		eqmov r0, #0
A1804740  BF18 2001		nemov r0, #1

#8			JMPCN	$label0	{LNXT:2|3|2}
(-) BOOL
A1804744  2800     		cmp r0, #0
A1804746  D005     		beq #10 ; 0xA1804754


#9		
#10			(* THEN *)
#11		
#12				(* WHILE TRUE *)
#13		$label1:
#14				LD		TRUE	{LNXT:3|-1|-1}
(-) UNDEF
A180474A  2001     		mov r0, #1 ; 1

#15				JMPCN		$label2	{LNXT:3|2|2}
(-) BOOL
A180474C  2800     		cmp r0, #0
A180474E  D001     		beq #2 ; 0xA1804754


#16		
#17				(* DO *)
#18					JMP		$label1	{LNXT:3|2|2}
(-) BOOL
A1804752  E7FA     		b #-12 ; 0xA180474A

A1804754  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
A1804758  F8DD E000		ldr lr, [sp]
A180475C  B002     		add sp, sp, #8

A180475E  4770     		bx lr

A1804760  FFFFFFFF		; 0x10000182

END_PROGRAM


**************************************************
	Target variable image generation
**************************************************


*** INPUT:
A1804764  4770     		bx lr


*** OUTPUT:
A1804766  4770     		bx lr



**************************************************
	Task Init init code
**************************************************

A1804768  B082     		sub sp, sp, #8
A180476A  F8CD E000		str lr, [sp]
A180476E  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

A1804772  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
A1804776  F8DD E000		ldr lr, [sp]
A180477A  B002     		add sp, sp, #8

A180477C  4770     		bx lr

**************************************************
	List program: InitParDB
**************************************************

PROGRAM InitParDB

        VAR
warningsKiller : USINT;
dummyCrc32 : UDINT;
	END_VAR

END_PROGRAM

A1804790  B082     		sub sp, sp, #8
A1804792  F8CD E000		str lr, [sp]
A1804796  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

#0		{SRC:InitParDB}
#1		(*$WAITSWITCH$*)
#2		
#3			(* dummyCrc32 := 3717425634; *)
#4			MOVE		3717425634,dummyCrc32	{LNXT:3|5|-1}
(*) UDINT
A180479A  F8DF 7040		ldr r7, [pc, #+64] ; 0xDD9369E2
A180479E  4638     		mov r0, r7
A18047A0  F8DF 7030		ldr r7, [pc, #+48] ; 0xA1A0000C
A18047A4  6038     		str r0, [r7]

#5		
#6			(* warningsKiller := sysDBase_SetExtTable( ADR( $$ParDB ), $$ParDBLength ); *)
#7			ADR		$$ParDB	{LNXT:5|3|-1}
(*) UDINT
A18047A6  F8DF 0028		ldr r0, [pc, #+40] ; 0xA1800100

#8			sysDBase_SetExtTable		$$ParDBLength	{LNXT:5|3|-1}
(*) @USINT
A18047AA  4607     		mov r7, r0
A18047AC  4638     		mov r0, r7
A18047AE  271A     		mov r7, #26 ; 26
A18047B0  4639     		mov r1, r7
A18047B2  F8DF 402C		ldr r4, [pc, #+44] ; 0x139A5
A18047B6  F044 0401		orr r4, r4, #1
A18047BA  47A0     		blx r4

#9			ST		warningsKiller	{LNXT:5|3|-1}
(*) USINT
A18047BC  F8DF 7018		ldr r7, [pc, #+24] ; 0xA1A00010
A18047C0  7038     		strb r0, [r7]

A18047C2  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
A18047C6  F8DD E000		ldr lr, [sp]
A18047CA  B002     		add sp, sp, #8

A18047CC  4770     		bx lr

A18047D0  A1800100		; 0xA1800100
A18047D4  A1A0000C		; 0xA1A0000C
A18047D8  A1A00010		; 0xA1A00010
A18047DC  DD9369E2		; 0xDD9369E2
A18047E0  FFFFFFFF		; 0x000139A5

END_PROGRAM


**************************************************
	Target variable image generation
**************************************************


*** INPUT:
A18047E4  4770     		bx lr


*** OUTPUT:
A18047E6  4770     		bx lr



**************************************************
	Task Serv init code
**************************************************

A18047E8  B082     		sub sp, sp, #8
A18047EA  F8CD E000		str lr, [sp]
A18047EE  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

A18047F2  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
A18047F6  F8DD E000		ldr lr, [sp]
A18047FA  B002     		add sp, sp, #8

A18047FC  4770     		bx lr

**************************************************
	List program: LVL
**************************************************

PROGRAM LVL

        VAR
Rotationnumber : INT := 1;	{ DE:"Номер в ротації" }
FastRunMode : BOOL := FALSE;	{ DE:"Локальна змінна Прогонка 0-вимкнена" }
RunTime_START : TIME;	{ DE:"Час роботи двигуна A" }
CurrentMotor : INT := 1;
ErrorCode : INT := 0;
PumpIntervalTimer_1 : TON;	{ DE:"інтервал для запуску прогонки" }
PumpRunTimer_1 : TON;	{ DE:"Час прогонки" }
TestRunActive_1 : BOOL := FALSE;	{ DE:"Тригер готовності прогонки" }
TestRunRunning_1 : BOOL := FALSE;	{ DE:"Прогонка виконується" }
PumpIntervalTimer_2 : TON;	{ DE:"інтервал для запуску прогонки" }
PumpRunTimer_2 : TON;	{ DE:"Час прогонки" }
TestRunActive_2 : BOOL := FALSE;	{ DE:"Тригер готовності прогонки" }
TestRunRunning_2 : BOOL := FALSE;	{ DE:"Прогонка виконується" }
PumpIntervalTimer_3 : TON;	{ DE:"інтервал для запуску прогонки" }
PumpRunTimer_3 : TON;	{ DE:"Час прогонки" }
TestRunActive_3 : BOOL := FALSE;	{ DE:"Тригер готовності прогонки" }
TestRunRunning_3 : BOOL := FALSE;	{ DE:"Прогонка виконується" }
CurrentPump : INT := 1;
ErrorTimer_A_Start : TON;
ErrorTimer_B_Start : TON;
ErrorTimer_C_Start : TON;
TM_WAIT_Start : INT := 5000;
	END_VAR

END_PROGRAM

A1804810  B082     		sub sp, sp, #8
A1804812  F8CD E000		str lr, [sp]
A1804816  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

#0		{SRC:LVL}
#1		(*$WAITSWITCH$*)
#2		
#3			(* o_tank_lvl:= Tank_Level; *)
#4			MOVE		Tank_Level,o_tank_lvl	{LNXT:5|7|-1}
(*) UDINT
A180481A  F8DF 7870		ldr r7, [pc, #+2160] ; 0xA1A00012
A180481E  F9B7 0000		ldrsh r0, [r7]
A1804822  F8DF 78C4		ldr r7, [pc, #+2244] ; 0x10000436
A1804826  8038     		strh r0, [r7]

#5		
#6		
#7			(* IF level_min <> ep_level_min *)
#8			LD		level_min	{LNXT:7|-1|-1}
(*) UNDEF
A1804828  F8DF 77FC		ldr r7, [pc, #+2044] ; 0xA0003F04
A180482C  F9B7 0000		ldrsh r0, [r7]

#9			NE		ep_level_min	{LNXT:7|-1|-1}
(*) INT
A1804830  F8DF 77EC		ldr r7, [pc, #+2028] ; 0xA00017F6
A1804834  F9B7 7000		ldrsh r7, [r7]
A1804838  42B8     		cmp r0, r7
A180483A  BF08 2000		eqmov r0, #0
A180483E  BF18 2001		nemov r0, #1

#10			JMPCN	$label0	{LNXT:7|8|11}
(-) BOOL
A1804842  2800     		cmp r0, #0
A1804844  D007     		beq #14 ; 0xA1804856


#11		
#12			(* THEN *)
#13		
#14				(* level_min := ep_level_min; *)
#15				MOVE		ep_level_min,level_min	{LNXT:8|11|-1}
(*) BOOL
A1804848  F8DF 77D4		ldr r7, [pc, #+2004] ; 0xA00017F6
A180484C  F9B7 0000		ldrsh r0, [r7]
A1804850  F8DF 77D4		ldr r7, [pc, #+2004] ; 0xA0003F04
A1804854  8038     		strh r0, [r7]

#16		
#17		$label0:
#18			(* END_IF *)
#19		
#20		
#21			(* IF Level_1 <> ep_level_1 *)
#22			LD		Level_1	{LNXT:11|-1|-1}
(*) UNDEF
A1804856  F8DF 77D4		ldr r7, [pc, #+2004] ; 0xA0003F06
A180485A  F9B7 0000		ldrsh r0, [r7]

#23			NE		ep_level_1	{LNXT:11|-1|-1}
(*) INT
A180485E  F8DF 77B4		ldr r7, [pc, #+1972] ; 0xA00017F0
A1804862  F9B7 7000		ldrsh r7, [r7]
A1804866  42B8     		cmp r0, r7
A1804868  BF08 2000		eqmov r0, #0
A180486C  BF18 2001		nemov r0, #1

#24			JMPCN	$label1	{LNXT:11|12|15}
(-) BOOL
A1804870  2800     		cmp r0, #0
A1804872  D007     		beq #14 ; 0xA1804884


#25		
#26			(* THEN *)
#27		
#28				(* Level_1 := ep_level_1; *)
#29				MOVE		ep_level_1,Level_1	{LNXT:12|15|-1}
(*) BOOL
A1804876  F8DF 779C		ldr r7, [pc, #+1948] ; 0xA00017F0
A180487A  F9B7 0000		ldrsh r0, [r7]
A180487E  F8DF 77AC		ldr r7, [pc, #+1964] ; 0xA0003F06
A1804882  8038     		strh r0, [r7]

#30		
#31		$label1:
#32			(* END_IF *)
#33		
#34		
#35			(* IF Level_2 <> ep_level_2 *)
#36			LD		Level_2	{LNXT:15|-1|-1}
(*) UNDEF
A1804884  F8DF 77A8		ldr r7, [pc, #+1960] ; 0xA0003F08
A1804888  F9B7 0000		ldrsh r0, [r7]

#37			NE		ep_level_2	{LNXT:15|-1|-1}
(*) INT
A180488C  F8DF 7788		ldr r7, [pc, #+1928] ; 0xA00017F2
A1804890  F9B7 7000		ldrsh r7, [r7]
A1804894  42B8     		cmp r0, r7
A1804896  BF08 2000		eqmov r0, #0
A180489A  BF18 2001		nemov r0, #1

#38			JMPCN	$label2	{LNXT:15|16|19}
(-) BOOL
A180489E  2800     		cmp r0, #0
A18048A0  D007     		beq #14 ; 0xA18048B2


#39		
#40			(* THEN *)
#41		
#42				(* Level_2 := ep_level_2; *)
#43				MOVE		ep_level_2,Level_2	{LNXT:16|19|-1}
(*) BOOL
A18048A4  F8DF 7770		ldr r7, [pc, #+1904] ; 0xA00017F2
A18048A8  F9B7 0000		ldrsh r0, [r7]
A18048AC  F8DF 7780		ldr r7, [pc, #+1920] ; 0xA0003F08
A18048B0  8038     		strh r0, [r7]

#44		
#45		$label2:
#46			(* END_IF *)
#47		
#48		
#49			(* IF Level_3 <> ep_level_3 *)
#50			LD		Level_3	{LNXT:19|-1|-1}
(*) UNDEF
A18048B2  F8DF 7780		ldr r7, [pc, #+1920] ; 0xA0003F0A
A18048B6  F9B7 0000		ldrsh r0, [r7]

#51			NE		ep_level_3	{LNXT:19|-1|-1}
(*) INT
A18048BA  F8DF 7760		ldr r7, [pc, #+1888] ; 0xA00017F4
A18048BE  F9B7 7000		ldrsh r7, [r7]
A18048C2  42B8     		cmp r0, r7
A18048C4  BF08 2000		eqmov r0, #0
A18048C8  BF18 2001		nemov r0, #1

#52			JMPCN	$label3	{LNXT:19|20|23}
(-) BOOL
A18048CC  2800     		cmp r0, #0
A18048CE  D007     		beq #14 ; 0xA18048E0


#53		
#54			(* THEN *)
#55		
#56				(* Level_3 := ep_level_3; *)
#57				MOVE		ep_level_3,Level_3	{LNXT:20|23|-1}
(*) BOOL
A18048D2  F8DF 7748		ldr r7, [pc, #+1864] ; 0xA00017F4
A18048D6  F9B7 0000		ldrsh r0, [r7]
A18048DA  F8DF 7758		ldr r7, [pc, #+1880] ; 0xA0003F0A
A18048DE  8038     		strh r0, [r7]

#58		
#59		$label3:
#60			(* END_IF *)
#61		
#62		
#63			(* IF Rotation <> ep_rotation *)
#64			LD		Rotation	{LNXT:23|-1|-1}
(*) UNDEF
A18048E0  F8DF 775C		ldr r7, [pc, #+1884] ; 0xA0003F10
A18048E4  7838     		ldrb r0, [r7]

#65			NE		ep_rotation	{LNXT:23|-1|-1}
(*) BOOL
A18048E6  F8DF 773C		ldr r7, [pc, #+1852] ; 0xA00017F8
A18048EA  783F     		ldrb r7, [r7]
A18048EC  42B8     		cmp r0, r7
A18048EE  BF08 2000		eqmov r0, #0
A18048F2  BF18 2001		nemov r0, #1

#66			JMPCN	$label4	{LNXT:23|24|27}
(-) BOOL
A18048F6  2800     		cmp r0, #0
A18048F8  D006     		beq #12 ; 0xA1804908


#67		
#68			(* THEN *)
#69		
#70				(* Rotation := ep_rotation; *)
#71				MOVE		ep_rotation,Rotation	{LNXT:24|27|-1}
(*) BOOL
A18048FC  F8DF 7724		ldr r7, [pc, #+1828] ; 0xA00017F8
A1804900  7838     		ldrb r0, [r7]
A1804902  F8DF 773C		ldr r7, [pc, #+1852] ; 0xA0003F10
A1804906  7038     		strb r0, [r7]

#72		
#73		$label4:
#74			(* END_IF *)
#75		
#76		
#77			(* IF Rotation *)
#78			LD		Rotation	{LNXT:27|-1|-1}
(*) UNDEF
A1804908  F8DF 7734		ldr r7, [pc, #+1844] ; 0xA0003F10
A180490C  7838     		ldrb r0, [r7]

#79			JMPCN	$label5	{LNXT:27|28|30}
(-) BOOL
A180490E  2800     		cmp r0, #0
A1804910  D017     		beq #46 ; 0xA1804942


#80		
#81			(* THEN *)
#82		
#83				(* rotation_state := 'On'; *)
#84				MOVE		'On',rotation_state	{LNXT:28|33|-1}
(*) BOOL
A1804914  F8DF 7750		ldr r7, [pc, #+1872] ; 0xA18044C0
A1804918  4638     		mov r0, r7
A180491A  B082     		sub sp, sp, #8
A180491C  F8CD 0000		str r0, [sp]
A1804920  E92D 0006		stmdb sp!, { r1, r2 }
A1804924  2205     		mov r2, #5 ; 5
A1804926  F8DF 173C		ldr r1, [pc, #+1852] ; 0xA0003FBA
A180492A  F8DF 47B8		ldr r4, [pc, #+1976] ; 0x1133D
A180492E  F044 0401		orr r4, r4, #1
A1804932  47A0     		blx r4
A1804934  E8BD 0006		ldmia sp!, { r1, r2 }
A1804938  F8DD 0000		ldr r0, [sp]
A180493C  B002     		add sp, sp, #8

#85				JMP		$label6	{LNXT:27|28|30}
(-) STRING
A180493E  E015     		b #42 ; 0xA180496C


#86		$label5:
#87		
#88			(* ELSE *)
#89		
#90				(* rotation_state := 'Off'; *)
#91				MOVE		'Off',rotation_state	{LNXT:30|33|-1}
(*) STRING
A1804942  F8DF 7728		ldr r7, [pc, #+1832] ; 0xA18044C4
A1804946  4638     		mov r0, r7
A1804948  B082     		sub sp, sp, #8
A180494A  F8CD 0000		str r0, [sp]
A180494E  E92D 0006		stmdb sp!, { r1, r2 }
A1804952  2205     		mov r2, #5 ; 5
A1804954  F8DF 170C		ldr r1, [pc, #+1804] ; 0xA0003FBA
A1804958  F8DF 4788		ldr r4, [pc, #+1928] ; 0x1133D
A180495C  F044 0401		orr r4, r4, #1
A1804960  47A0     		blx r4
A1804962  E8BD 0006		ldmia sp!, { r1, r2 }
A1804966  F8DD 0000		ldr r0, [sp]
A180496A  B002     		add sp, sp, #8

#92		
#93		$label6:
#94			(* END_IF *)
#95		
#96		
#97			(* IF di_flooding *)
#98			LD		di_flooding	{LNXT:33|-1|-1}
(*) UNDEF
A180496C  F8DF 7718		ldr r7, [pc, #+1816] ; 0xA1A00011
A1804970  7838     		ldrb r0, [r7]

#99			JMPCN	$label7	{LNXT:33|34|36}
(-) BOOL
A1804972  2800     		cmp r0, #0
A1804974  D017     		beq #46 ; 0xA18049A6


#100		
#101			(* THEN *)
#102		
#103				(* flooding_state := 'Yes'; *)
#104				MOVE		'Yes',flooding_state	{LNXT:34|40|-1}
(*) BOOL
A1804978  F8DF 76F4		ldr r7, [pc, #+1780] ; 0xA18044CC
A180497C  4638     		mov r0, r7
A180497E  B082     		sub sp, sp, #8
A1804980  F8CD 0000		str r0, [sp]
A1804984  E92D 0006		stmdb sp!, { r1, r2 }
A1804988  2214     		mov r2, #20 ; 20
A180498A  F8DF 16D4		ldr r1, [pc, #+1748] ; 0xA0003FA4
A180498E  F8DF 4754		ldr r4, [pc, #+1876] ; 0x1133D
A1804992  F044 0401		orr r4, r4, #1
A1804996  47A0     		blx r4
A1804998  E8BD 0006		ldmia sp!, { r1, r2 }
A180499C  F8DD 0000		ldr r0, [sp]
A18049A0  B002     		add sp, sp, #8

#105				JMP		$label8	{LNXT:33|34|36}
(-) STRING
A18049A2  E015     		b #42 ; 0xA18049D0


#106		$label7:
#107		
#108			(* ELSE *)
#109		
#110				(* flooding_state := 'No'; *)
#111				MOVE		'No',flooding_state	{LNXT:36|40|-1}
(*) STRING
A18049A6  F8DF 76CC		ldr r7, [pc, #+1740] ; 0xA18044D4
A18049AA  4638     		mov r0, r7
A18049AC  B082     		sub sp, sp, #8
A18049AE  F8CD 0000		str r0, [sp]
A18049B2  E92D 0006		stmdb sp!, { r1, r2 }
A18049B6  2214     		mov r2, #20 ; 20
A18049B8  F8DF 16A4		ldr r1, [pc, #+1700] ; 0xA0003FA4
A18049BC  F8DF 4724		ldr r4, [pc, #+1828] ; 0x1133D
A18049C0  F044 0401		orr r4, r4, #1
A18049C4  47A0     		blx r4
A18049C6  E8BD 0006		ldmia sp!, { r1, r2 }
A18049CA  F8DD 0000		ldr r0, [sp]
A18049CE  B002     		add sp, sp, #8

#112		
#113		$label8:
#114			(* END_IF *)
#115		
#116			(* ErrorTimer_A_Start *)
#117			MOVE		Motor_A,ErrorTimer_A_Start.IN	{LNXT:40|-1|-1}
(*) STRING
A18049D0  F8DF 7718		ldr r7, [pc, #+1816] ; 0x100004AC
A18049D4  7838     		ldrb r0, [r7]
A18049D6  F8DF 76BC		ldr r7, [pc, #+1724] ; 0xA1A00018
A18049DA  7038     		strb r0, [r7]

#118			MOVE		TM_WAIT_Start,ErrorTimer_A_Start.PT	{LNXT:40|-1|-1}
(*) BOOL
A18049DC  F8DF 76C0		ldr r7, [pc, #+1728] ; 0xA1A00028
A18049E0  F9B7 0000		ldrsh r0, [r7]
A18049E4  F8DF 76B0		ldr r7, [pc, #+1712] ; 0xA1A0001C
A18049E8  6038     		str r0, [r7]

#119			CAL		ErrorTimer_A_Start	{LNXT:40|41|-1}
(*) UDINT
A18049EA  E92D 0021		stmdb sp!, { r0, r5 }
A18049EE  F8DF 56A0		ldr r5, [pc, #+1696] ; 0xA1A00014
A18049F2  F8DF 4690		ldr r4, [pc, #+1680] ; 0xA1804550
A18049F6  F044 0401		orr r4, r4, #1
A18049FA  47A0     		blx r4
A18049FC  E8BD 0021		ldmia sp!, { r0, r5 }

#120		
#121		
#122			(* IF ErrorTimer_A_Start.Q *)
#123			LD		ErrorTimer_A_Start.Q	{LNXT:41|-1|-1}
(*) UNDEF
A1804A00  F8DF 7698		ldr r7, [pc, #+1688] ; 0xA1A00020
A1804A04  7838     		ldrb r0, [r7]

#124			JMPCN	$label9	{LNXT:41|42|56}
(-) BOOL
A1804A06  2800     		cmp r0, #0
A1804A08  D04B     		beq #150 ; 0xA1804AA2


#125		
#126			(* THEN *)
#127		
#128		
#129				(* IF Motor_A and not ALM_A *)
#130				LD		ALM_A	{LNXT:42|-1|-1}
(*) UNDEF
A1804A0C  F8DF 7694		ldr r7, [pc, #+1684] ; 0xA1A0002A
A1804A10  7838     		ldrb r0, [r7]

#131				NOT	{LNXT:42|-1|-1}
(*) BOOL
A1804A12  2800     		cmp r0, #0
A1804A14  BF08 2001		eqmov r0, #1
A1804A18  BF18 2000		nemov r0, #0

#132				AND		Motor_A	{LNXT:42|-1|-1}
(*) BOOL
A1804A1C  F8DF 76CC		ldr r7, [pc, #+1740] ; 0x100004AC
A1804A20  783F     		ldrb r7, [r7]
A1804A22  4038     		and r0, r0, r7

#133				JMPCN	$label10	{LNXT:42|44|52}
(-) BOOL
A1804A24  2800     		cmp r0, #0
A1804A26  D033     		beq #102 ; 0xA1804A90


#134		
#135				(* THEN *)
#136		
#137					(* Alarms.8:=true; *)
#138					MOVE		true,Alarms.8	{LNXT:44|46|-1}
(*) BOOL
A1804A2A  2001     		mov r0, #1 ; 1
A1804A2C  F8DF 760C		ldr r7, [pc, #+1548] ; 0xA0003F0E
A1804A30  F8B7 8000		ldrh r8, [r7]
A1804A34  F360 2808		bfi r8, r0, #8, #1
A1804A38  F8A7 8000		strh r8, [r7]

#139		
#140		
#141					(* IF ALM_B and Avto_B *)
#142					LD		ALM_B	{LNXT:46|-1|-1}
(*) UNDEF
A1804A3C  F8DF 7668		ldr r7, [pc, #+1640] ; 0xA1A0002B
A1804A40  7838     		ldrb r0, [r7]

#143					NOT	{LNXT:46|-1|-1}
(*) BOOL
A1804A42  2800     		cmp r0, #0
A1804A44  BF08 2001		eqmov r0, #1
A1804A48  BF18 2000		nemov r0, #0

#144					AND		Avto_B	{LNXT:46|-1|-1}
(*) BOOL
A1804A4C  F8DF 765C		ldr r7, [pc, #+1628] ; 0xA1A0002C
A1804A50  783F     		ldrb r7, [r7]
A1804A52  4038     		and r0, r0, r7

#145					JMPCN	$label12	{LNXT:46|47|48}
(-) BOOL
A1804A54  2800     		cmp r0, #0
A1804A56  D006     		beq #12 ; 0xA1804A66


#146		
#147					(* THEN *)
#148		
#149						(* Priority := 1; *)
#150						MOVE		1,Priority	{LNXT:47|56|-1}
(*) BOOL
A1804A5A  2001     		mov r0, #1 ; 1
A1804A5C  F8DF 75D8		ldr r7, [pc, #+1496] ; 0xA0003F0C
A1804A60  8038     		strh r0, [r7]

#151						JMP		$label13	{LNXT:46|47|48}
(-) INT
A1804A62  E013     		b #38 ; 0xA1804A8C


#152		$label12:
#153		
#154					(* ELSIF ALM_C and Avto_C *)
#155					LD		ALM_C	{LNXT:48|-1|-1}
(*) UNDEF
A1804A66  F8DF 7648		ldr r7, [pc, #+1608] ; 0xA1A0002D
A1804A6A  7838     		ldrb r0, [r7]

#156					NOT	{LNXT:48|-1|-1}
(*) BOOL
A1804A6C  2800     		cmp r0, #0
A1804A6E  BF08 2001		eqmov r0, #1
A1804A72  BF18 2000		nemov r0, #0

#157					AND		Avto_C	{LNXT:48|-1|-1}
(*) BOOL
A1804A76  F8DF 763C		ldr r7, [pc, #+1596] ; 0xA1A0002E
A1804A7A  783F     		ldrb r7, [r7]
A1804A7C  4038     		and r0, r0, r7

#158					JMPCN	$label13	{LNXT:48|49|56}
(-) BOOL
A1804A7E  2800     		cmp r0, #0
A1804A80  D004     		beq #8 ; 0xA1804A8C


#159		
#160					(* THEN *)
#161		
#162						(* Priority := 2; *)
#163						MOVE		2,Priority	{LNXT:49|56|-1}
(*) BOOL
A1804A84  2002     		mov r0, #2 ; 2
A1804A86  F8DF 75B0		ldr r7, [pc, #+1456] ; 0xA0003F0C
A1804A8A  8038     		strh r0, [r7]

#164		
#165		$label13:
#166					(* END_IF *)
#167					JMP		$label11	{LNXT:42|44|52}
(-) INT
A1804A8C  E009     		b #18 ; 0xA1804AA2


#168		$label10:
#169		
#170				(* ELSE *)
#171		
#172					(* Alarms.8:=false; *)
#173					MOVE		false,Alarms.8	{LNXT:52|56|-1}
(*) INT
A1804A90  2000     		mov r0, #0 ; 0
A1804A92  F8DF 75A8		ldr r7, [pc, #+1448] ; 0xA0003F0E
A1804A96  F8B7 8000		ldrh r8, [r7]
A1804A9A  F360 2808		bfi r8, r0, #8, #1
A1804A9E  F8A7 8000		strh r8, [r7]

#174		
#175		$label11:
#176				(* END_IF *)
#177		
#178		$label9:
#179			(* END_IF *)
#180		
#181			(* ErrorTimer_B_Start *)
#182			MOVE		Motor_B,ErrorTimer_B_Start.IN	{LNXT:56|-1|-1}
(*) WORD
A1804AA2  F8DF 764C		ldr r7, [pc, #+1612] ; 0x100004AD
A1804AA6  7838     		ldrb r0, [r7]
A1804AA8  F8DF 7614		ldr r7, [pc, #+1556] ; 0xA1A00034
A1804AAC  7038     		strb r0, [r7]

#183			MOVE		TM_WAIT_Start,ErrorTimer_B_Start.PT	{LNXT:56|-1|-1}
(*) BOOL
A1804AAE  F8DF 75F0		ldr r7, [pc, #+1520] ; 0xA1A00028
A1804AB2  F9B7 0000		ldrsh r0, [r7]
A1804AB6  F8DF 760C		ldr r7, [pc, #+1548] ; 0xA1A00038
A1804ABA  6038     		str r0, [r7]

#184			CAL		ErrorTimer_B_Start	{LNXT:56|57|-1}
(*) UDINT
A1804ABC  E92D 0021		stmdb sp!, { r0, r5 }
A1804AC0  F8DF 55F8		ldr r5, [pc, #+1528] ; 0xA1A00030
A1804AC4  F8DF 45BC		ldr r4, [pc, #+1468] ; 0xA1804550
A1804AC8  F044 0401		orr r4, r4, #1
A1804ACC  47A0     		blx r4
A1804ACE  E8BD 0021		ldmia sp!, { r0, r5 }

#185		
#186		
#187			(* IF ErrorTimer_B_Start.Q *)
#188			LD		ErrorTimer_B_Start.Q	{LNXT:57|-1|-1}
(*) UNDEF
A1804AD2  F8DF 75F4		ldr r7, [pc, #+1524] ; 0xA1A0003C
A1804AD6  7838     		ldrb r0, [r7]

#189			JMPCN	$label14	{LNXT:57|58|72}
(-) BOOL
A1804AD8  2800     		cmp r0, #0
A1804ADA  D04B     		beq #150 ; 0xA1804B74


#190		
#191			(* THEN *)
#192		
#193		
#194				(* IF Motor_B and not ALM_B *)
#195				LD		ALM_B	{LNXT:58|-1|-1}
(*) UNDEF
A1804ADE  F8DF 75C8		ldr r7, [pc, #+1480] ; 0xA1A0002B
A1804AE2  7838     		ldrb r0, [r7]

#196				NOT	{LNXT:58|-1|-1}
(*) BOOL
A1804AE4  2800     		cmp r0, #0
A1804AE6  BF08 2001		eqmov r0, #1
A1804AEA  BF18 2000		nemov r0, #0

#197				AND		Motor_B	{LNXT:58|-1|-1}
(*) BOOL
A1804AEE  F8DF 7600		ldr r7, [pc, #+1536] ; 0x100004AD
A1804AF2  783F     		ldrb r7, [r7]
A1804AF4  4038     		and r0, r0, r7

#198				JMPCN	$label15	{LNXT:58|60|68}
(-) BOOL
A1804AF6  2800     		cmp r0, #0
A1804AF8  D033     		beq #102 ; 0xA1804B62


#199		
#200				(* THEN *)
#201		
#202					(* Alarms.9 := true; *)
#203					MOVE		true,Alarms.9	{LNXT:60|62|-1}
(*) BOOL
A1804AFC  2001     		mov r0, #1 ; 1
A1804AFE  F8DF 753C		ldr r7, [pc, #+1340] ; 0xA0003F0E
A1804B02  F8B7 8000		ldrh r8, [r7]
A1804B06  F360 2849		bfi r8, r0, #9, #1
A1804B0A  F8A7 8000		strh r8, [r7]

#204		
#205		
#206					(* IF ALM_A and Avto_A *)
#207					LD		ALM_A	{LNXT:62|-1|-1}
(*) UNDEF
A1804B0E  F8DF 7594		ldr r7, [pc, #+1428] ; 0xA1A0002A
A1804B12  7838     		ldrb r0, [r7]

#208					NOT	{LNXT:62|-1|-1}
(*) BOOL
A1804B14  2800     		cmp r0, #0
A1804B16  BF08 2001		eqmov r0, #1
A1804B1A  BF18 2000		nemov r0, #0

#209					AND		Avto_A	{LNXT:62|-1|-1}
(*) BOOL
A1804B1E  F8DF 7598		ldr r7, [pc, #+1432] ; 0xA1A0002F
A1804B22  783F     		ldrb r7, [r7]
A1804B24  4038     		and r0, r0, r7

#210					JMPCN	$label17	{LNXT:62|63|64}
(-) BOOL
A1804B26  2800     		cmp r0, #0
A1804B28  D006     		beq #12 ; 0xA1804B38


#211		
#212					(* THEN *)
#213		
#214						(* Priority := 0; *)
#215						MOVE		0,Priority	{LNXT:63|72|-1}
(*) BOOL
A1804B2C  2000     		mov r0, #0 ; 0
A1804B2E  F8DF 7508		ldr r7, [pc, #+1288] ; 0xA0003F0C
A1804B32  8038     		strh r0, [r7]

#216						JMP		$label18	{LNXT:62|63|64}
(-) INT
A1804B34  E013     		b #38 ; 0xA1804B5E


#217		$label17:
#218		
#219					(* ELSIF ALM_C and Avto_C *)
#220					LD		ALM_C	{LNXT:64|-1|-1}
(*) UNDEF
A1804B38  F8DF 7574		ldr r7, [pc, #+1396] ; 0xA1A0002D
A1804B3C  7838     		ldrb r0, [r7]

#221					NOT	{LNXT:64|-1|-1}
(*) BOOL
A1804B3E  2800     		cmp r0, #0
A1804B40  BF08 2001		eqmov r0, #1
A1804B44  BF18 2000		nemov r0, #0

#222					AND		Avto_C	{LNXT:64|-1|-1}
(*) BOOL
A1804B48  F8DF 7568		ldr r7, [pc, #+1384] ; 0xA1A0002E
A1804B4C  783F     		ldrb r7, [r7]
A1804B4E  4038     		and r0, r0, r7

#223					JMPCN	$label18	{LNXT:64|65|72}
(-) BOOL
A1804B50  2800     		cmp r0, #0
A1804B52  D004     		beq #8 ; 0xA1804B5E


#224		
#225					(* THEN *)
#226		
#227						(* Priority := 2; *)
#228						MOVE		2,Priority	{LNXT:65|72|-1}
(*) BOOL
A1804B56  2002     		mov r0, #2 ; 2
A1804B58  F8DF 74DC		ldr r7, [pc, #+1244] ; 0xA0003F0C
A1804B5C  8038     		strh r0, [r7]

#229		
#230		$label18:
#231					(* END_IF *)
#232					JMP		$label16	{LNXT:58|60|68}
(-) INT
A1804B5E  E009     		b #18 ; 0xA1804B74


#233		$label15:
#234		
#235				(* ELSE *)
#236		
#237					(* Alarms.9 := false; *)
#238					MOVE		false,Alarms.9	{LNXT:68|72|-1}
(*) INT
A1804B62  2000     		mov r0, #0 ; 0
A1804B64  F8DF 74D4		ldr r7, [pc, #+1236] ; 0xA0003F0E
A1804B68  F8B7 8000		ldrh r8, [r7]
A1804B6C  F360 2849		bfi r8, r0, #9, #1
A1804B70  F8A7 8000		strh r8, [r7]

#239		
#240		$label16:
#241				(* END_IF *)
#242		
#243		$label14:
#244			(* END_IF *)
#245		
#246			(* ErrorTimer_C_Start *)
#247			MOVE		Motor_C,ErrorTimer_C_Start.IN	{LNXT:72|-1|-1}
(*) WORD
A1804B74  F8DF 757C		ldr r7, [pc, #+1404] ; 0x100004AE
A1804B78  7838     		ldrb r0, [r7]
A1804B7A  F8DF 7554		ldr r7, [pc, #+1364] ; 0xA1A00048
A1804B7E  7038     		strb r0, [r7]

#248			MOVE		TM_WAIT_Start,ErrorTimer_C_Start.PT	{LNXT:72|-1|-1}
(*) BOOL
A1804B80  F8DF 751C		ldr r7, [pc, #+1308] ; 0xA1A00028
A1804B84  F9B7 0000		ldrsh r0, [r7]
A1804B88  F8DF 7548		ldr r7, [pc, #+1352] ; 0xA1A0004C
A1804B8C  6038     		str r0, [r7]

#249			CAL		ErrorTimer_C_Start	{LNXT:72|73|-1}
(*) UDINT
A1804B8E  E92D 0021		stmdb sp!, { r0, r5 }
A1804B92  F8DF 5538		ldr r5, [pc, #+1336] ; 0xA1A00044
A1804B96  F8DF 44EC		ldr r4, [pc, #+1260] ; 0xA1804550
A1804B9A  F044 0401		orr r4, r4, #1
A1804B9E  47A0     		blx r4
A1804BA0  E8BD 0021		ldmia sp!, { r0, r5 }

#250		
#251		
#252			(* IF ErrorTimer_C_Start.Q *)
#253			LD		ErrorTimer_C_Start.Q	{LNXT:73|-1|-1}
(*) UNDEF
A1804BA4  F8DF 7530		ldr r7, [pc, #+1328] ; 0xA1A00050
A1804BA8  7838     		ldrb r0, [r7]

#254			JMPCN	$label19	{LNXT:73|74|96}
(-) BOOL
A1804BAA  2800     		cmp r0, #0
A1804BAC  D04B     		beq #150 ; 0xA1804C46


#255		
#256			(* THEN *)
#257		
#258		
#259				(* IF Motor_C and not ALM_C *)
#260				LD		ALM_C	{LNXT:74|-1|-1}
(*) UNDEF
A1804BB0  F8DF 74FC		ldr r7, [pc, #+1276] ; 0xA1A0002D
A1804BB4  7838     		ldrb r0, [r7]

#261				NOT	{LNXT:74|-1|-1}
(*) BOOL
A1804BB6  2800     		cmp r0, #0
A1804BB8  BF08 2001		eqmov r0, #1
A1804BBC  BF18 2000		nemov r0, #0

#262				AND		Motor_C	{LNXT:74|-1|-1}
(*) BOOL
A1804BC0  F8DF 7530		ldr r7, [pc, #+1328] ; 0x100004AE
A1804BC4  783F     		ldrb r7, [r7]
A1804BC6  4038     		and r0, r0, r7

#263				JMPCN	$label20	{LNXT:74|77|85}
(-) BOOL
A1804BC8  2800     		cmp r0, #0
A1804BCA  D033     		beq #102 ; 0xA1804C34


#264		
#265				(* THEN *)
#266		
#267					(* Alarms.10 := true; *)
#268					MOVE		true,Alarms.10	{LNXT:77|79|-1}
(*) BOOL
A1804BCE  2001     		mov r0, #1 ; 1
A1804BD0  F8DF 7468		ldr r7, [pc, #+1128] ; 0xA0003F0E
A1804BD4  F8B7 8000		ldrh r8, [r7]
A1804BD8  F360 288A		bfi r8, r0, #10, #1
A1804BDC  F8A7 8000		strh r8, [r7]

#269		
#270		
#271					(* IF ALM_A and Avto_A *)
#272					LD		ALM_A	{LNXT:79|-1|-1}
(*) UNDEF
A1804BE0  F8DF 74C0		ldr r7, [pc, #+1216] ; 0xA1A0002A
A1804BE4  7838     		ldrb r0, [r7]

#273					NOT	{LNXT:79|-1|-1}
(*) BOOL
A1804BE6  2800     		cmp r0, #0
A1804BE8  BF08 2001		eqmov r0, #1
A1804BEC  BF18 2000		nemov r0, #0

#274					AND		Avto_A	{LNXT:79|-1|-1}
(*) BOOL
A1804BF0  F8DF 74C4		ldr r7, [pc, #+1220] ; 0xA1A0002F
A1804BF4  783F     		ldrb r7, [r7]
A1804BF6  4038     		and r0, r0, r7

#275					JMPCN	$label22	{LNXT:79|80|81}
(-) BOOL
A1804BF8  2800     		cmp r0, #0
A1804BFA  D006     		beq #12 ; 0xA1804C0A


#276		
#277					(* THEN *)
#278		
#279						(* Priority := 0; *)
#280						MOVE		0,Priority	{LNXT:80|96|-1}
(*) BOOL
A1804BFE  2000     		mov r0, #0 ; 0
A1804C00  F8DF 7434		ldr r7, [pc, #+1076] ; 0xA0003F0C
A1804C04  8038     		strh r0, [r7]

#281						JMP		$label23	{LNXT:79|80|81}
(-) INT
A1804C06  E013     		b #38 ; 0xA1804C30


#282		$label22:
#283		
#284					(* ELSIF ALM_B and Avto_B *)
#285					LD		ALM_B	{LNXT:81|-1|-1}
(*) UNDEF
A1804C0A  F8DF 749C		ldr r7, [pc, #+1180] ; 0xA1A0002B
A1804C0E  7838     		ldrb r0, [r7]

#286					NOT	{LNXT:81|-1|-1}
(*) BOOL
A1804C10  2800     		cmp r0, #0
A1804C12  BF08 2001		eqmov r0, #1
A1804C16  BF18 2000		nemov r0, #0

#287					AND		Avto_B	{LNXT:81|-1|-1}
(*) BOOL
A1804C1A  F8DF 7490		ldr r7, [pc, #+1168] ; 0xA1A0002C
A1804C1E  783F     		ldrb r7, [r7]
A1804C20  4038     		and r0, r0, r7

#288					JMPCN	$label23	{LNXT:81|82|96}
(-) BOOL
A1804C22  2800     		cmp r0, #0
A1804C24  D004     		beq #8 ; 0xA1804C30


#289		
#290					(* THEN *)
#291		
#292						(* Priority := 1; *)
#293						MOVE		1,Priority	{LNXT:82|96|-1}
(*) BOOL
A1804C28  2001     		mov r0, #1 ; 1
A1804C2A  F8DF 740C		ldr r7, [pc, #+1036] ; 0xA0003F0C
A1804C2E  8038     		strh r0, [r7]

#294		
#295		$label23:
#296					(* END_IF *)
#297					JMP		$label21	{LNXT:74|77|85}
(-) INT
A1804C30  E009     		b #18 ; 0xA1804C46


#298		$label20:
#299		
#300				(* ELSE *)
#301		
#302					(* Alarms.10 := false; *)
#303					MOVE		false,Alarms.10	{LNXT:85|96|-1}
(*) INT
A1804C34  2000     		mov r0, #0 ; 0
A1804C36  F8DF 7404		ldr r7, [pc, #+1028] ; 0xA0003F0E
A1804C3A  F8B7 8000		ldrh r8, [r7]
A1804C3E  F360 288A		bfi r8, r0, #10, #1
A1804C42  F8A7 8000		strh r8, [r7]

#304		
#305		$label21:
#306				(* END_IF *)
#307		
#308		$label19:
#309			(* END_IF *)
#310		
#311		
#312			(* IF FastRun <> FastRunMode *)
#313			LD		FastRun	{LNXT:96|-1|-1}
(*) UNDEF
A1804C46  F8DF 73FC		ldr r7, [pc, #+1020] ; 0xA0003F12
A1804C4A  7838     		ldrb r0, [r7]

#314			NE		FastRunMode	{LNXT:96|-1|-1}
(*) BOOL
A1804C4C  F8DF 748C		ldr r7, [pc, #+1164] ; 0xA1A00058
A1804C50  783F     		ldrb r7, [r7]
A1804C52  42B8     		cmp r0, r7
A1804C54  BF08 2000		eqmov r0, #0
A1804C58  BF18 2001		nemov r0, #1

#315			JMPCN	$label24	{LNXT:96|97|103}
(-) BOOL
A1804C5C  2800     		cmp r0, #0
A1804C5E  D006     		beq #12 ; 0xA1804C6E


#316		
#317			(* THEN *)
#318		
#319				(* FastRunMode := FastRun; *)
#320				MOVE		FastRun,FastRunMode	{LNXT:97|103|-1}
(*) BOOL
A1804C62  F8DF 73E0		ldr r7, [pc, #+992] ; 0xA0003F12
A1804C66  7838     		ldrb r0, [r7]
A1804C68  F8DF 7470		ldr r7, [pc, #+1136] ; 0xA1A00058
A1804C6C  7038     		strb r0, [r7]

#321		
#322		$label24:
#323			(* END_IF *)
#324		
#325		
#326			(* IF Motor_A *)
#327			LD		Motor_A	{LNXT:103|-1|-1}
(*) UNDEF
A1804C6E  F8DF 747C		ldr r7, [pc, #+1148] ; 0x100004AC
A1804C72  7838     		ldrb r0, [r7]

#328			JMPCN	$label25	{LNXT:103|104|106}
(-) BOOL
A1804C74  2800     		cmp r0, #0
A1804C76  D017     		beq #46 ; 0xA1804CA8


#329		
#330			(* THEN *)
#331		
#332				(* state_motor_1 := 'On'; *)
#333				MOVE		'On',state_motor_1	{LNXT:104|109|-1}
(*) BOOL
A1804C7A  F8DF 73EC		ldr r7, [pc, #+1004] ; 0xA18044C0
A1804C7E  4638     		mov r0, r7
A1804C80  B082     		sub sp, sp, #8
A1804C82  F8CD 0000		str r0, [sp]
A1804C86  E92D 0006		stmdb sp!, { r1, r2 }
A1804C8A  221F     		mov r2, #31 ; 31
A1804C8C  F8DF 13B8		ldr r1, [pc, #+952] ; 0xA0003F20
A1804C90  F8DF 4450		ldr r4, [pc, #+1104] ; 0x1133D
A1804C94  F044 0401		orr r4, r4, #1
A1804C98  47A0     		blx r4
A1804C9A  E8BD 0006		ldmia sp!, { r1, r2 }
A1804C9E  F8DD 0000		ldr r0, [sp]
A1804CA2  B002     		add sp, sp, #8

#334				JMP		$label26	{LNXT:103|104|106}
(-) STRING
A1804CA4  E015     		b #42 ; 0xA1804CD2


#335		$label25:
#336		
#337			(* ELSE *)
#338		
#339				(* state_motor_1 := 'Off'; *)
#340				MOVE		'Off',state_motor_1	{LNXT:106|109|-1}
(*) STRING
A1804CA8  F8DF 73C0		ldr r7, [pc, #+960] ; 0xA18044C4
A1804CAC  4638     		mov r0, r7
A1804CAE  B082     		sub sp, sp, #8
A1804CB0  F8CD 0000		str r0, [sp]
A1804CB4  E92D 0006		stmdb sp!, { r1, r2 }
A1804CB8  221F     		mov r2, #31 ; 31
A1804CBA  F8DF 138C		ldr r1, [pc, #+908] ; 0xA0003F20
A1804CBE  F8DF 4424		ldr r4, [pc, #+1060] ; 0x1133D
A1804CC2  F044 0401		orr r4, r4, #1
A1804CC6  47A0     		blx r4
A1804CC8  E8BD 0006		ldmia sp!, { r1, r2 }
A1804CCC  F8DD 0000		ldr r0, [sp]
A1804CD0  B002     		add sp, sp, #8

#341		
#342		$label26:
#343			(* END_IF *)
#344		
#345		
#346			(* IF Motor_B *)
#347			LD		Motor_B	{LNXT:109|-1|-1}
(*) UNDEF
A1804CD2  F8DF 741C		ldr r7, [pc, #+1052] ; 0x100004AD
A1804CD6  7838     		ldrb r0, [r7]

#348			JMPCN	$label27	{LNXT:109|110|112}
(-) BOOL
A1804CD8  2800     		cmp r0, #0
A1804CDA  D017     		beq #46 ; 0xA1804D0C


#349		
#350			(* THEN *)
#351		
#352				(* state_motor_2 := 'On'; *)
#353				MOVE		'On',state_motor_2	{LNXT:110|115|-1}
(*) BOOL
A1804CDE  F8DF 7388		ldr r7, [pc, #+904] ; 0xA18044C0
A1804CE2  4638     		mov r0, r7
A1804CE4  B082     		sub sp, sp, #8
A1804CE6  F8CD 0000		str r0, [sp]
A1804CEA  E92D 0006		stmdb sp!, { r1, r2 }
A1804CEE  221F     		mov r2, #31 ; 31
A1804CF0  F8DF 1358		ldr r1, [pc, #+856] ; 0xA0003F40
A1804CF4  F8DF 43EC		ldr r4, [pc, #+1004] ; 0x1133D
A1804CF8  F044 0401		orr r4, r4, #1
A1804CFC  47A0     		blx r4
A1804CFE  E8BD 0006		ldmia sp!, { r1, r2 }
A1804D02  F8DD 0000		ldr r0, [sp]
A1804D06  B002     		add sp, sp, #8

#354				JMP		$label28	{LNXT:109|110|112}
(-) STRING
A1804D08  E015     		b #42 ; 0xA1804D36


#355		$label27:
#356		
#357			(* ELSE *)
#358		
#359				(* state_motor_2 := 'Off'; *)
#360				MOVE		'Off',state_motor_2	{LNXT:112|115|-1}
(*) STRING
A1804D0C  F8DF 735C		ldr r7, [pc, #+860] ; 0xA18044C4
A1804D10  4638     		mov r0, r7
A1804D12  B082     		sub sp, sp, #8
A1804D14  F8CD 0000		str r0, [sp]
A1804D18  E92D 0006		stmdb sp!, { r1, r2 }
A1804D1C  221F     		mov r2, #31 ; 31
A1804D1E  F8DF 132C		ldr r1, [pc, #+812] ; 0xA0003F40
A1804D22  F8DF 43C0		ldr r4, [pc, #+960] ; 0x1133D
A1804D26  F044 0401		orr r4, r4, #1
A1804D2A  47A0     		blx r4
A1804D2C  E8BD 0006		ldmia sp!, { r1, r2 }
A1804D30  F8DD 0000		ldr r0, [sp]
A1804D34  B002     		add sp, sp, #8

#361		
#362		$label28:
#363			(* END_IF *)
#364		
#365		
#366			(* IF Motor_C *)
#367			LD		Motor_C	{LNXT:115|-1|-1}
(*) UNDEF
A1804D36  F8DF 73BC		ldr r7, [pc, #+956] ; 0x100004AE
A1804D3A  7838     		ldrb r0, [r7]

#368			JMPCN	$label29	{LNXT:115|116|118}
(-) BOOL
A1804D3C  2800     		cmp r0, #0
A1804D3E  D017     		beq #46 ; 0xA1804D70


#369		
#370			(* THEN *)
#371		
#372				(* state_motor_3 := 'On'; *)
#373				MOVE		'On',state_motor_3	{LNXT:116|122|-1}
(*) BOOL
A1804D42  F8DF 7324		ldr r7, [pc, #+804] ; 0xA18044C0
A1804D46  4638     		mov r0, r7
A1804D48  B082     		sub sp, sp, #8
A1804D4A  F8CD 0000		str r0, [sp]
A1804D4E  E92D 0006		stmdb sp!, { r1, r2 }
A1804D52  221F     		mov r2, #31 ; 31
A1804D54  F8DF 12F8		ldr r1, [pc, #+760] ; 0xA0003F60
A1804D58  F8DF 4388		ldr r4, [pc, #+904] ; 0x1133D
A1804D5C  F044 0401		orr r4, r4, #1
A1804D60  47A0     		blx r4
A1804D62  E8BD 0006		ldmia sp!, { r1, r2 }
A1804D66  F8DD 0000		ldr r0, [sp]
A1804D6A  B002     		add sp, sp, #8

#374				JMP		$label30	{LNXT:115|116|118}
(-) STRING
A1804D6C  E015     		b #42 ; 0xA1804D9A


#375		$label29:
#376		
#377			(* ELSE *)
#378		
#379				(* state_motor_3 := 'Off'; *)
#380				MOVE		'Off',state_motor_3	{LNXT:118|122|-1}
(*) STRING
A1804D70  F8DF 72F8		ldr r7, [pc, #+760] ; 0xA18044C4
A1804D74  4638     		mov r0, r7
A1804D76  B082     		sub sp, sp, #8
A1804D78  F8CD 0000		str r0, [sp]
A1804D7C  E92D 0006		stmdb sp!, { r1, r2 }
A1804D80  221F     		mov r2, #31 ; 31
A1804D82  F8DF 12CC		ldr r1, [pc, #+716] ; 0xA0003F60
A1804D86  F8DF 435C		ldr r4, [pc, #+860] ; 0x1133D
A1804D8A  F044 0401		orr r4, r4, #1
A1804D8E  47A0     		blx r4
A1804D90  E8BD 0006		ldmia sp!, { r1, r2 }
A1804D94  F8DD 0000		ldr r0, [sp]
A1804D98  B002     		add sp, sp, #8

#381		
#382		$label30:
#383			(* END_IF *)
#384		
#385		
#386			(* IF Avto_A *)
#387			LD		Avto_A	{LNXT:122|-1|-1}
(*) UNDEF
A1804D9A  F8DF 731C		ldr r7, [pc, #+796] ; 0xA1A0002F
A1804D9E  7838     		ldrb r0, [r7]

#388			JMPCN	$label31	{LNXT:122|123|125}
(-) BOOL
A1804DA0  2800     		cmp r0, #0
A1804DA2  D017     		beq #46 ; 0xA1804DD4


#389		
#390			(* THEN *)
#391		
#392				(* auto_state_1 := 'Auto'; *)
#393				MOVE		'Auto',auto_state_1	{LNXT:123|128|-1}
(*) BOOL
A1804DA6  F8DF 72D0		ldr r7, [pc, #+720] ; 0xA18044D8
A1804DAA  4638     		mov r0, r7
A1804DAC  B082     		sub sp, sp, #8
A1804DAE  F8CD 0000		str r0, [sp]
A1804DB2  E92D 0006		stmdb sp!, { r1, r2 }
A1804DB6  220A     		mov r2, #10 ; 10
A1804DB8  F8DF 1298		ldr r1, [pc, #+664] ; 0xA0003F80
A1804DBC  F8DF 4324		ldr r4, [pc, #+804] ; 0x1133D
A1804DC0  F044 0401		orr r4, r4, #1
A1804DC4  47A0     		blx r4
A1804DC6  E8BD 0006		ldmia sp!, { r1, r2 }
A1804DCA  F8DD 0000		ldr r0, [sp]
A1804DCE  B002     		add sp, sp, #8

#394				JMP		$label32	{LNXT:122|123|125}
(-) STRING
A1804DD0  E015     		b #42 ; 0xA1804DFE


#395		$label31:
#396		
#397			(* ELSE *)
#398		
#399				(* auto_state_1 := 'Hand'; *)
#400				MOVE		'Hand',auto_state_1	{LNXT:125|128|-1}
(*) STRING
A1804DD4  F8DF 72A4		ldr r7, [pc, #+676] ; 0xA18044E0
A1804DD8  4638     		mov r0, r7
A1804DDA  B082     		sub sp, sp, #8
A1804DDC  F8CD 0000		str r0, [sp]
A1804DE0  E92D 0006		stmdb sp!, { r1, r2 }
A1804DE4  220A     		mov r2, #10 ; 10
A1804DE6  F8DF 126C		ldr r1, [pc, #+620] ; 0xA0003F80
A1804DEA  F8DF 42F8		ldr r4, [pc, #+760] ; 0x1133D
A1804DEE  F044 0401		orr r4, r4, #1
A1804DF2  47A0     		blx r4
A1804DF4  E8BD 0006		ldmia sp!, { r1, r2 }
A1804DF8  F8DD 0000		ldr r0, [sp]
A1804DFC  B002     		add sp, sp, #8

#401		
#402		$label32:
#403			(* END_IF *)
#404		
#405		
#406			(* IF Avto_B *)
#407			LD		Avto_B	{LNXT:128|-1|-1}
(*) UNDEF
A1804DFE  F8DF 72AC		ldr r7, [pc, #+684] ; 0xA1A0002C
A1804E02  7838     		ldrb r0, [r7]

#408			JMPCN	$label33	{LNXT:128|129|131}
(-) BOOL
A1804E04  2800     		cmp r0, #0
A1804E06  D017     		beq #46 ; 0xA1804E38


#409		
#410			(* THEN *)
#411		
#412				(* auto_state_2 := 'Auto'; *)
#413				MOVE		'Auto',auto_state_2	{LNXT:129|134|-1}
(*) BOOL
A1804E0A  F8DF 726C		ldr r7, [pc, #+620] ; 0xA18044D8
A1804E0E  4638     		mov r0, r7
A1804E10  B082     		sub sp, sp, #8
A1804E12  F8CD 0000		str r0, [sp]
A1804E16  E92D 0006		stmdb sp!, { r1, r2 }
A1804E1A  220A     		mov r2, #10 ; 10
A1804E1C  F8DF 1238		ldr r1, [pc, #+568] ; 0xA0003F8C
A1804E20  F8DF 42C0		ldr r4, [pc, #+704] ; 0x1133D
A1804E24  F044 0401		orr r4, r4, #1
A1804E28  47A0     		blx r4
A1804E2A  E8BD 0006		ldmia sp!, { r1, r2 }
A1804E2E  F8DD 0000		ldr r0, [sp]
A1804E32  B002     		add sp, sp, #8

#414				JMP		$label34	{LNXT:128|129|131}
(-) STRING
A1804E34  E015     		b #42 ; 0xA1804E62


#415		$label33:
#416		
#417			(* ELSE *)
#418		
#419				(* auto_state_2 := 'Hand'; *)
#420				MOVE		'Hand',auto_state_2	{LNXT:131|134|-1}
(*) STRING
A1804E38  F8DF 7240		ldr r7, [pc, #+576] ; 0xA18044E0
A1804E3C  4638     		mov r0, r7
A1804E3E  B082     		sub sp, sp, #8
A1804E40  F8CD 0000		str r0, [sp]
A1804E44  E92D 0006		stmdb sp!, { r1, r2 }
A1804E48  220A     		mov r2, #10 ; 10
A1804E4A  F8DF 120C		ldr r1, [pc, #+524] ; 0xA0003F8C
A1804E4E  F8DF 4294		ldr r4, [pc, #+660] ; 0x1133D
A1804E52  F044 0401		orr r4, r4, #1
A1804E56  47A0     		blx r4
A1804E58  E8BD 0006		ldmia sp!, { r1, r2 }
A1804E5C  F8DD 0000		ldr r0, [sp]
A1804E60  B002     		add sp, sp, #8

#421		
#422		$label34:
#423			(* END_IF *)
#424		
#425		
#426			(* IF Avto_C *)
#427			LD		Avto_C	{LNXT:134|-1|-1}
(*) UNDEF
A1804E62  F8DF 7250		ldr r7, [pc, #+592] ; 0xA1A0002E
A1804E66  7838     		ldrb r0, [r7]

#428			JMPCN	$label35	{LNXT:134|135|137}
(-) BOOL
A1804E68  2800     		cmp r0, #0
A1804E6A  D017     		beq #46 ; 0xA1804E9C


#429		
#430			(* THEN *)
#431		
#432				(* auto_state_3 := 'Auto'; *)
#433				MOVE		'Auto',auto_state_3	{LNXT:135|143|-1}
(*) BOOL
A1804E6E  F8DF 7208		ldr r7, [pc, #+520] ; 0xA18044D8
A1804E72  4638     		mov r0, r7
A1804E74  B082     		sub sp, sp, #8
A1804E76  F8CD 0000		str r0, [sp]
A1804E7A  E92D 0006		stmdb sp!, { r1, r2 }
A1804E7E  220A     		mov r2, #10 ; 10
A1804E80  F8DF 11D8		ldr r1, [pc, #+472] ; 0xA0003F98
A1804E84  F8DF 425C		ldr r4, [pc, #+604] ; 0x1133D
A1804E88  F044 0401		orr r4, r4, #1
A1804E8C  47A0     		blx r4
A1804E8E  E8BD 0006		ldmia sp!, { r1, r2 }
A1804E92  F8DD 0000		ldr r0, [sp]
A1804E96  B002     		add sp, sp, #8

#434				JMP		$label36	{LNXT:134|135|137}
(-) STRING
A1804E98  E015     		b #42 ; 0xA1804EC6


#435		$label35:
#436		
#437			(* ELSE *)
#438		
#439				(* auto_state_3 := 'Hand'; *)
#440				MOVE		'Hand',auto_state_3	{LNXT:137|143|-1}
(*) STRING
A1804E9C  F8DF 71DC		ldr r7, [pc, #+476] ; 0xA18044E0
A1804EA0  4638     		mov r0, r7
A1804EA2  B082     		sub sp, sp, #8
A1804EA4  F8CD 0000		str r0, [sp]
A1804EA8  E92D 0006		stmdb sp!, { r1, r2 }
A1804EAC  220A     		mov r2, #10 ; 10
A1804EAE  F8DF 11AC		ldr r1, [pc, #+428] ; 0xA0003F98
A1804EB2  F8DF 4230		ldr r4, [pc, #+560] ; 0x1133D
A1804EB6  F044 0401		orr r4, r4, #1
A1804EBA  47A0     		blx r4
A1804EBC  E8BD 0006		ldmia sp!, { r1, r2 }
A1804EC0  F8DD 0000		ldr r0, [sp]
A1804EC4  B002     		add sp, sp, #8

#441		
#442		$label36:
#443			(* END_IF *)
#444		
#445		
#446			(* IF Tank_Level >= Level_1 and Rotation *)
#447			LD		Tank_Level	{LNXT:143|-1|-1}
(*) UNDEF
A1804EC6  F8DF 71C4		ldr r7, [pc, #+452] ; 0xA1A00012
A1804ECA  F9B7 0000		ldrsh r0, [r7]

#448			GE		Level_1	{LNXT:143|-1|-1}
(*) INT
A1804ECE  F8DF 715C		ldr r7, [pc, #+348] ; 0xA0003F06
A1804ED2  F9B7 7000		ldrsh r7, [r7]
A1804ED6  42B8     		cmp r0, r7
A1804ED8  BFB8 2000		ltmov r0, #0
A1804EDC  BFA8 2001		gemov r0, #1

#449			AND		Rotation	{LNXT:143|-1|-1}
(*) BOOL
A1804EE0  F8DF 715C		ldr r7, [pc, #+348] ; 0xA0003F10
A1804EE4  783F     		ldrb r7, [r7]
A1804EE6  4038     		and r0, r0, r7

#450			JMPCN	$label37	{LNXT:143|146|201}
(-) BOOL
A1804EE8  2800     		cmp r0, #0
A1804EEA  F000 824D		beq #1178 ; 0xA1805388


#451		
#452			(* THEN *)
#453		
#454		
#455				(* CASE Rotationnumber OF *)
#456		
#457				(* 0: *)
#458				LD		Rotationnumber	{LNXT:146|-1|-1}
(*) UNDEF
A1804EEE  F8DF 71F0		ldr r7, [pc, #+496] ; 0xA1A0005A
A1804EF2  F9B7 0000		ldrsh r0, [r7]

#459				EQ		0	{LNXT:146|-1|-1}
(*) INT
A1804EF6  2800     		cmp r0, #0
A1804EF8  BF18 2000		nemov r0, #0
A1804EFC  BF08 2001		eqmov r0, #1

#460				JMPC		$label39	{LNXT:146|147|163}
(-) BOOL
A1804F00  2800     		cmp r0, #0
A1804F02  D11A     		bne #52 ; 0xA1804F3A


#461		
#462				(* 1: *)
#463				LD		Rotationnumber	{LNXT:163|-1|-1}
(*) UNDEF
A1804F06  F8DF 71D8		ldr r7, [pc, #+472] ; 0xA1A0005A
A1804F0A  F9B7 0000		ldrsh r0, [r7]

#464				EQ		1	{LNXT:163|-1|-1}
(*) INT
A1804F0E  2801     		cmp r0, #1
A1804F10  BF18 2000		nemov r0, #0
A1804F14  BF08 2001		eqmov r0, #1

#465				JMPC		$label40	{LNXT:163|164|180}
(-) BOOL
A1804F18  2800     		cmp r0, #0
A1804F1A  F040 8113		bne #550 ; 0xA1805144


#466		
#467				(* 2: *)
#468				LD		Rotationnumber	{LNXT:180|-1|-1}
(*) UNDEF
A1804F1E  F8DF 71C0		ldr r7, [pc, #+448] ; 0xA1A0005A
A1804F22  F9B7 0000		ldrsh r0, [r7]

#469				EQ		2	{LNXT:180|-1|-1}
(*) INT
A1804F26  2802     		cmp r0, #2
A1804F28  BF18 2000		nemov r0, #0
A1804F2C  BF08 2001		eqmov r0, #1

#470				JMPC		$label41	{LNXT:180|181|201}
(-) BOOL
A1804F30  2800     		cmp r0, #0
A1804F32  F040 8199		bne #818 ; 0xA1805268


#471				JMP		$label38	{LNXT:180|181|201}
(-) BOOL
A1804F36  E227     		b #1102 ; 0xA1805388


#472		
#473				(* Istruzioni di ciascun CASE: *)
#474		
#475		$label39:
#476		
#477					(* IF Avto_A AND NOT Motor_B AND NOT Motor_C *)
#478					LD		Motor_C	{LNXT:147|-1|-1}
(*) UNDEF
A1804F3A  F8DF 71B8		ldr r7, [pc, #+440] ; 0x100004AE
A1804F3E  7838     		ldrb r0, [r7]

#479					NOT	{LNXT:147|-1|-1}
(*) BOOL
A1804F40  2800     		cmp r0, #0
A1804F42  BF08 2001		eqmov r0, #1
A1804F46  BF18 2000		nemov r0, #0

#480					AND(		Motor_B	{LNXT:147|-1|-1}
(*) BOOL
A1804F4A  B082     		sub sp, sp, #8
A1804F4C  F8CD 0000		str r0, [sp]
A1804F50  F8DF 719C		ldr r7, [pc, #+412] ; 0x100004AD
A1804F54  7838     		ldrb r0, [r7]

#481					NOT	{LNXT:147|-1|-1}
(*) BOOL
A1804F56  2800     		cmp r0, #0
A1804F58  BF08 2001		eqmov r0, #1
A1804F5C  BF18 2000		nemov r0, #0

#482					AND		Avto_A	{LNXT:147|-1|-1}
(*) BOOL
A1804F60  F8DF 7154		ldr r7, [pc, #+340] ; 0xA1A0002F
A1804F64  783F     		ldrb r7, [r7]
A1804F66  4038     		and r0, r0, r7

#483					)	{LNXT:147|-1|-1}
(*) BOOL
A1804F68  4607     		mov r7, r0
A1804F6A  F8DD 0000		ldr r0, [sp]
A1804F6E  B002     		add sp, sp, #8
A1804F70  4038     		and r0, r0, r7

#484					JMPCN	$label42	{LNXT:147|148|151}
(-) BOOL
A1804F72  2800     		cmp r0, #0
A1804F74  D014     		beq #40 ; 0xA1804FA0


#485		
#486					(* THEN *)
#487		
#488						(* Motor_A := TRUE; *)
#489						MOVE		TRUE,Motor_A	{LNXT:148|149|-1}
(*) BOOL
A1804F78  2001     		mov r0, #1 ; 1
A1804F7A  F8DF 7170		ldr r7, [pc, #+368] ; 0x100004AC
A1804F7E  7038     		strb r0, [r7]

#490		
#491						(* Rotationnumber := (Rotationnumber + 1) MOD 3; *)
#492						LD		Rotationnumber	{LNXT:149|201|-1}
(*) UNDEF
A1804F80  F8DF 715C		ldr r7, [pc, #+348] ; 0xA1A0005A
A1804F84  F9B7 0000		ldrsh r0, [r7]

#493						ADD		1	{LNXT:149|201|-1}
(-) INT
A1804F88  1C40     		add r0, r0, #1

#494						MOD		3	{LNXT:149|201|-1}
(*) INT
A1804F8A  2103     		mov r1, #3 ; 3
A1804F8C  F8DF 40F0		ldr r4, [pc, #+240] ; 0xA1804500
A1804F90  F044 0401		orr r4, r4, #1
A1804F94  47A0     		blx r4

#495						ST		Rotationnumber	{LNXT:149|201|-1}
(*) INT
A1804F96  F8DF 7148		ldr r7, [pc, #+328] ; 0xA1A0005A
A1804F9A  8038     		strh r0, [r7]

#496						JMP		$label43	{LNXT:147|148|151}
(-) INT
A1804F9C  E0D0     		b #416 ; 0xA1805140


#497		$label42:
#498		
#499					(* ELSIF Avto_A AND NOT Motor_B AND NOT Motor_C *)
#500					LD		Motor_C	{LNXT:151|-1|-1}
(*) UNDEF
A1804FA0  F8DF 7150		ldr r7, [pc, #+336] ; 0x100004AE
A1804FA4  7838     		ldrb r0, [r7]

#501					NOT	{LNXT:151|-1|-1}
(*) BOOL
A1804FA6  2800     		cmp r0, #0
A1804FA8  BF08 2001		eqmov r0, #1
A1804FAC  BF18 2000		nemov r0, #0

#502					AND(		Motor_B	{LNXT:151|-1|-1}
(*) BOOL
A1804FB0  B082     		sub sp, sp, #8
A1804FB2  F8CD 0000		str r0, [sp]
A1804FB6  F8DF 7138		ldr r7, [pc, #+312] ; 0x100004AD
A1804FBA  7838     		ldrb r0, [r7]

#503					NOT	{LNXT:151|-1|-1}
(*) BOOL
A1804FBC  2800     		cmp r0, #0
A1804FBE  BF08 2001		eqmov r0, #1
A1804FC2  BF18 2000		nemov r0, #0

#504					AND(		Avto_A	{LNXT:151|-1|-1}
(*) BOOL
A1804FC6  B082     		sub sp, sp, #8
A1804FC8  F8CD 0000		str r0, [sp]
A1804FCC  F8DF 70E8		ldr r7, [pc, #+232] ; 0xA1A0002F
A1804FD0  7838     		ldrb r0, [r7]

#505					NOT	{LNXT:151|-1|-1}
(*) BOOL
A1804FD2  2800     		cmp r0, #0
A1804FD4  BF08 2001		eqmov r0, #1
A1804FD8  BF18 2000		nemov r0, #0

#506					)	{LNXT:151|-1|-1}
(*) BOOL
A1804FDC  4607     		mov r7, r0
A1804FDE  F8DD 0000		ldr r0, [sp]
A1804FE2  B002     		add sp, sp, #8
A1804FE4  4038     		and r0, r0, r7

#507					)	{LNXT:151|-1|-1}
(*) BOOL
A1804FE6  4607     		mov r7, r0
A1804FE8  F8DD 0000		ldr r0, [sp]
A1804FEC  B002     		add sp, sp, #8
A1804FEE  4038     		and r0, r0, r7

#508					JMPCN	$label43	{LNXT:151|153|201}
(-) BOOL
A1804FF0  2800     		cmp r0, #0
A1804FF2  F000 80A5		beq #330 ; 0xA1805140


#509		
#510					(* THEN *)
#511		
#512		
#513						(* IF Avto_B *)
#514						LD		Avto_B	{LNXT:153|-1|-1}
(*) UNDEF
A1804FF6  F8DF 70B4		ldr r7, [pc, #+180] ; 0xA1A0002C
A1804FFA  7838     		ldrb r0, [r7]

#515						JMPCN	$label44	{LNXT:153|154|157}
(-) BOOL
A1804FFC  2800     		cmp r0, #0
A1804FFE  F000 8087		beq #270 ; 0xA1805110


#516		
#517						(* THEN *)
#518		
#519							(* Motor_B := TRUE; *)
#520							MOVE		TRUE,Motor_B	{LNXT:154|155|-1}
(*) BOOL
A1805002  2001     		mov r0, #1 ; 1
A1805004  F8DF 70E8		ldr r7, [pc, #+232] ; 0x100004AD
A1805008  7038     		strb r0, [r7]

#521		
#522							(* Rotationnumber := (Rotationnumber + 1) MOD 3; *)
#523							LD		Rotationnumber	{LNXT:155|201|-1}
(*) UNDEF
A180500A  F8DF 70D4		ldr r7, [pc, #+212] ; 0xA1A0005A
A180500E  F9B7 0000		ldrsh r0, [r7]

A1805012  E071     		b #226

A1805014  FFFFFFFF		; 0xA00017F0
A1805018  FFFFFFFF		; 0xA00017F2
A180501C  FFFFFFFF		; 0xA00017F4
A1805020  FFFFFFFF		; 0xA00017F6
A1805024  FFFFFFFF		; 0xA00017F8
A1805028  FFFFFFFF		; 0xA0003F04
A180502C  FFFFFFFF		; 0xA0003F06
A1805030  FFFFFFFF		; 0xA0003F08
A1805034  FFFFFFFF		; 0xA0003F0A
A1805038  FFFFFFFF		; 0xA0003F0C
A180503C  FFFFFFFF		; 0xA0003F0E
A1805040  FFFFFFFF		; 0xA0003F10
A1805044  FFFFFFFF		; 0xA0003F12
A1805048  FFFFFFFF		; 0xA0003F20
A180504C  FFFFFFFF		; 0xA0003F40
A1805050  FFFFFFFF		; 0xA0003F60
A1805054  FFFFFFFF		; 0xA0003F80
A1805058  FFFFFFFF		; 0xA0003F8C
A180505C  FFFFFFFF		; 0xA0003F98
A1805060  FFFFFFFF		; 0xA0003FA4
A1805064  FFFFFFFF		; 0xA0003FBA
A1805068  A18044C0		; 0xA18044C0
A180506C  A18044C4		; 0xA18044C4
A1805070  A18044CC		; 0xA18044CC
A1805074  A18044D4		; 0xA18044D4
A1805078  A18044D8		; 0xA18044D8
A180507C  A18044E0		; 0xA18044E0
A1805080  A1804500		; 0xA1804500
A1805084  A1804550		; 0xA1804550
A1805088  A1A00011		; 0xA1A00011
A180508C  A1A00012		; 0xA1A00012
A1805090  A1A00014		; 0xA1A00014
A1805094  A1A00018		; 0xA1A00018
A1805098  A1A0001C		; 0xA1A0001C
A180509C  A1A00020		; 0xA1A00020
A18050A0  A1A00028		; 0xA1A00028
A18050A4  A1A0002A		; 0xA1A0002A
A18050A8  A1A0002B		; 0xA1A0002B
A18050AC  A1A0002C		; 0xA1A0002C
A18050B0  A1A0002D		; 0xA1A0002D
A18050B4  A1A0002E		; 0xA1A0002E
A18050B8  A1A0002F		; 0xA1A0002F
A18050BC  A1A00030		; 0xA1A00030
A18050C0  A1A00034		; 0xA1A00034
A18050C4  A1A00038		; 0xA1A00038
A18050C8  A1A0003C		; 0xA1A0003C
A18050CC  A1A00044		; 0xA1A00044
A18050D0  A1A00048		; 0xA1A00048
A18050D4  A1A0004C		; 0xA1A0004C
A18050D8  A1A00050		; 0xA1A00050
A18050DC  A1A00058		; 0xA1A00058
A18050E0  A1A0005A		; 0xA1A0005A
A18050E4  FFFFFFFF		; 0x0001133D
A18050E8  FFFFFFFF		; 0x10000436
A18050EC  FFFFFFFF		; 0x100004AC
A18050F0  FFFFFFFF		; 0x100004AD
A18050F4  FFFFFFFF		; 0x100004AE

#524							ADD		1	{LNXT:155|201|-1}
(-) INT
A18050F8  1C40     		add r0, r0, #1

#525							MOD		3	{LNXT:155|201|-1}
(*) INT
A18050FA  2103     		mov r1, #3 ; 3
A18050FC  F85F 4080		ldr r4, [pc, #-128] ; 0xA1804500
A1805100  F044 0401		orr r4, r4, #1
A1805104  47A0     		blx r4

#526							ST		Rotationnumber	{LNXT:155|201|-1}
(*) INT
A1805106  F85F 7028		ldr r7, [pc, #-40] ; 0xA1A0005A
A180510A  8038     		strh r0, [r7]

#527							JMP		$label45	{LNXT:153|154|157}
(-) INT
A180510C  E018     		b #48 ; 0xA1805140


#528		$label44:
#529		
#530						(* ELSIF Avto_C *)
#531						LD		Avto_C	{LNXT:157|-1|-1}
(*) UNDEF
A1805110  F85F 7060		ldr r7, [pc, #-96] ; 0xA1A0002E
A1805114  7838     		ldrb r0, [r7]

#532						JMPCN	$label45	{LNXT:157|158|201}
(-) BOOL
A1805116  2800     		cmp r0, #0
A1805118  D012     		beq #36 ; 0xA1805140


#533		
#534						(* THEN *)
#535		
#536							(* Motor_C := TRUE; *)
#537							MOVE		TRUE,Motor_C	{LNXT:158|159|-1}
(*) BOOL
A180511C  2001     		mov r0, #1 ; 1
A180511E  F85F 702C		ldr r7, [pc, #-44] ; 0x100004AE
A1805122  7038     		strb r0, [r7]

#538		
#539							(* Rotationnumber := (Rotationnumber + 2) MOD 3; *)
#540							LD		Rotationnumber	{LNXT:159|201|-1}
(*) UNDEF
A1805124  F85F 7048		ldr r7, [pc, #-72] ; 0xA1A0005A
A1805128  F9B7 0000		ldrsh r0, [r7]

#541							ADD		2	{LNXT:159|201|-1}
(-) INT
A180512C  1C80     		add r0, r0, #2

#542							MOD		3	{LNXT:159|201|-1}
(*) INT
A180512E  2103     		mov r1, #3 ; 3
A1805130  F85F 40B4		ldr r4, [pc, #-180] ; 0xA1804500
A1805134  F044 0401		orr r4, r4, #1
A1805138  47A0     		blx r4

#543							ST		Rotationnumber	{LNXT:159|201|-1}
(*) INT
A180513A  F85F 705C		ldr r7, [pc, #-92] ; 0xA1A0005A
A180513E  8038     		strh r0, [r7]

#544		
#545		$label45:
#546						(* END_IF *)
#547		
#548		$label43:
#549					(* END_IF *)
#550					JMP		$label38	{LNXT:1|201|-1}
(-) INT
A1805140  E122     		b #580 ; 0xA1805388


#551		
#552		$label40:
#553		
#554					(* IF Avto_B AND NOT Motor_A AND NOT Motor_C *)
#555					LD		Motor_C	{LNXT:164|-1|-1}
(*) UNDEF
A1805144  F85F 7054		ldr r7, [pc, #-84] ; 0x100004AE
A1805148  7838     		ldrb r0, [r7]

#556					NOT	{LNXT:164|-1|-1}
(*) BOOL
A180514A  2800     		cmp r0, #0
A180514C  BF08 2001		eqmov r0, #1
A1805150  BF18 2000		nemov r0, #0

#557					AND(		Motor_A	{LNXT:164|-1|-1}
(*) BOOL
A1805154  B082     		sub sp, sp, #8
A1805156  F8CD 0000		str r0, [sp]
A180515A  F85F 7070		ldr r7, [pc, #-112] ; 0x100004AC
A180515E  7838     		ldrb r0, [r7]

#558					NOT	{LNXT:164|-1|-1}
(*) BOOL
A1805160  2800     		cmp r0, #0
A1805162  BF08 2001		eqmov r0, #1
A1805166  BF18 2000		nemov r0, #0

#559					AND		Avto_B	{LNXT:164|-1|-1}
(*) BOOL
A180516A  F85F 70C0		ldr r7, [pc, #-192] ; 0xA1A0002C
A180516E  783F     		ldrb r7, [r7]
A1805170  4038     		and r0, r0, r7

#560					)	{LNXT:164|-1|-1}
(*) BOOL
A1805172  4607     		mov r7, r0
A1805174  F8DD 0000		ldr r0, [sp]
A1805178  B002     		add sp, sp, #8
A180517A  4038     		and r0, r0, r7

#561					JMPCN	$label46	{LNXT:164|165|168}
(-) BOOL
A180517C  2800     		cmp r0, #0
A180517E  D014     		beq #40 ; 0xA18051AA


#562		
#563					(* THEN *)
#564		
#565						(* Motor_B := TRUE; *)
#566						MOVE		TRUE,Motor_B	{LNXT:165|166|-1}
(*) BOOL
A1805182  2001     		mov r0, #1 ; 1
A1805184  F85F 7098		ldr r7, [pc, #-152] ; 0x100004AD
A1805188  7038     		strb r0, [r7]

#567		
#568						(* Rotationnumber := (Rotationnumber + 1) MOD 3; *)
#569						LD		Rotationnumber	{LNXT:166|201|-1}
(*) UNDEF
A180518A  F85F 70AC		ldr r7, [pc, #-172] ; 0xA1A0005A
A180518E  F9B7 0000		ldrsh r0, [r7]

#570						ADD		1	{LNXT:166|201|-1}
(-) INT
A1805192  1C40     		add r0, r0, #1

#571						MOD		3	{LNXT:166|201|-1}
(*) INT
A1805194  2103     		mov r1, #3 ; 3
A1805196  F85F 4118		ldr r4, [pc, #-280] ; 0xA1804500
A180519A  F044 0401		orr r4, r4, #1
A180519E  47A0     		blx r4

#572						ST		Rotationnumber	{LNXT:166|201|-1}
(*) INT
A18051A0  F85F 70C4		ldr r7, [pc, #-196] ; 0xA1A0005A
A18051A4  8038     		strh r0, [r7]

#573						JMP		$label47	{LNXT:164|165|168}
(-) INT
A18051A6  E05D     		b #186 ; 0xA1805264


#574		$label46:
#575		
#576					(* ELSIF Avto_B AND NOT Motor_A AND NOT Motor_C *)
#577					LD		Motor_C	{LNXT:168|-1|-1}
(*) UNDEF
A18051AA  F85F 70B8		ldr r7, [pc, #-184] ; 0x100004AE
A18051AE  7838     		ldrb r0, [r7]

#578					NOT	{LNXT:168|-1|-1}
(*) BOOL
A18051B0  2800     		cmp r0, #0
A18051B2  BF08 2001		eqmov r0, #1
A18051B6  BF18 2000		nemov r0, #0

#579					AND(		Motor_A	{LNXT:168|-1|-1}
(*) BOOL
A18051BA  B082     		sub sp, sp, #8
A18051BC  F8CD 0000		str r0, [sp]
A18051C0  F85F 70D8		ldr r7, [pc, #-216] ; 0x100004AC
A18051C4  7838     		ldrb r0, [r7]

#580					NOT	{LNXT:168|-1|-1}
(*) BOOL
A18051C6  2800     		cmp r0, #0
A18051C8  BF08 2001		eqmov r0, #1
A18051CC  BF18 2000		nemov r0, #0

#581					AND(		Avto_B	{LNXT:168|-1|-1}
(*) BOOL
A18051D0  B082     		sub sp, sp, #8
A18051D2  F8CD 0000		str r0, [sp]
A18051D6  F85F 712C		ldr r7, [pc, #-300] ; 0xA1A0002C
A18051DA  7838     		ldrb r0, [r7]

#582					NOT	{LNXT:168|-1|-1}
(*) BOOL
A18051DC  2800     		cmp r0, #0
A18051DE  BF08 2001		eqmov r0, #1
A18051E2  BF18 2000		nemov r0, #0

#583					)	{LNXT:168|-1|-1}
(*) BOOL
A18051E6  4607     		mov r7, r0
A18051E8  F8DD 0000		ldr r0, [sp]
A18051EC  B002     		add sp, sp, #8
A18051EE  4038     		and r0, r0, r7

#584					)	{LNXT:168|-1|-1}
(*) BOOL
A18051F0  4607     		mov r7, r0
A18051F2  F8DD 0000		ldr r0, [sp]
A18051F6  B002     		add sp, sp, #8
A18051F8  4038     		and r0, r0, r7

#585					JMPCN	$label47	{LNXT:168|170|201}
(-) BOOL
A18051FA  2800     		cmp r0, #0
A18051FC  D032     		beq #100 ; 0xA1805264


#586		
#587					(* THEN *)
#588		
#589		
#590						(* IF Avto_A *)
#591						LD		Avto_A	{LNXT:170|-1|-1}
(*) UNDEF
A1805200  F85F 714C		ldr r7, [pc, #-332] ; 0xA1A0002F
A1805204  7838     		ldrb r0, [r7]

#592						JMPCN	$label48	{LNXT:170|171|174}
(-) BOOL
A1805206  2800     		cmp r0, #0
A1805208  D014     		beq #40 ; 0xA1805234


#593		
#594						(* THEN *)
#595		
#596							(* Motor_A := TRUE; *)
#597							MOVE		TRUE,Motor_A	{LNXT:171|172|-1}
(*) BOOL
A180520C  2001     		mov r0, #1 ; 1
A180520E  F85F 7124		ldr r7, [pc, #-292] ; 0x100004AC
A1805212  7038     		strb r0, [r7]

#598		
#599							(* Rotationnumber := (Rotationnumber - 1) MOD 3; *)
#600							LD		Rotationnumber	{LNXT:172|201|-1}
(*) UNDEF
A1805214  F85F 7138		ldr r7, [pc, #-312] ; 0xA1A0005A
A1805218  F9B7 0000		ldrsh r0, [r7]

#601							SUB		1	{LNXT:172|201|-1}
(-) INT
A180521C  1E40     		sub r0, r0, #1

#602							MOD		3	{LNXT:172|201|-1}
(*) INT
A180521E  2103     		mov r1, #3 ; 3
A1805220  F85F 41A4		ldr r4, [pc, #-420] ; 0xA1804500
A1805224  F044 0401		orr r4, r4, #1
A1805228  47A0     		blx r4

#603							ST		Rotationnumber	{LNXT:172|201|-1}
(*) INT
A180522A  F85F 714C		ldr r7, [pc, #-332] ; 0xA1A0005A
A180522E  8038     		strh r0, [r7]

#604							JMP		$label49	{LNXT:170|171|174}
(-) INT
A1805230  E018     		b #48 ; 0xA1805264


#605		$label48:
#606		
#607						(* ELSIF Avto_C *)
#608						LD		Avto_C	{LNXT:174|-1|-1}
(*) UNDEF
A1805234  F85F 7184		ldr r7, [pc, #-388] ; 0xA1A0002E
A1805238  7838     		ldrb r0, [r7]

#609						JMPCN	$label49	{LNXT:174|175|201}
(-) BOOL
A180523A  2800     		cmp r0, #0
A180523C  D012     		beq #36 ; 0xA1805264


#610		
#611						(* THEN *)
#612		
#613							(* Motor_C := TRUE; *)
#614							MOVE		TRUE,Motor_C	{LNXT:175|176|-1}
(*) BOOL
A1805240  2001     		mov r0, #1 ; 1
A1805242  F85F 7150		ldr r7, [pc, #-336] ; 0x100004AE
A1805246  7038     		strb r0, [r7]

#615		
#616							(* Rotationnumber := (Rotationnumber + 1) MOD 3; *)
#617							LD		Rotationnumber	{LNXT:176|201|-1}
(*) UNDEF
A1805248  F85F 716C		ldr r7, [pc, #-364] ; 0xA1A0005A
A180524C  F9B7 0000		ldrsh r0, [r7]

#618							ADD		1	{LNXT:176|201|-1}
(-) INT
A1805250  1C40     		add r0, r0, #1

#619							MOD		3	{LNXT:176|201|-1}
(*) INT
A1805252  2103     		mov r1, #3 ; 3
A1805254  F85F 41D8		ldr r4, [pc, #-472] ; 0xA1804500
A1805258  F044 0401		orr r4, r4, #1
A180525C  47A0     		blx r4

#620							ST		Rotationnumber	{LNXT:176|201|-1}
(*) INT
A180525E  F85F 7180		ldr r7, [pc, #-384] ; 0xA1A0005A
A1805262  8038     		strh r0, [r7]

#621		
#622		$label49:
#623						(* END_IF *)
#624		
#625		$label47:
#626					(* END_IF *)
#627					JMP		$label38	{LNXT:1|201|-1}
(-) INT
A1805264  E090     		b #288 ; 0xA1805388


#628		
#629		$label41:
#630		
#631					(* IF Avto_C AND NOT Motor_A AND NOT Motor_B *)
#632					LD		Motor_B	{LNXT:181|-1|-1}
(*) UNDEF
A1805268  F85F 717C		ldr r7, [pc, #-380] ; 0x100004AD
A180526C  7838     		ldrb r0, [r7]

#633					NOT	{LNXT:181|-1|-1}
(*) BOOL
A180526E  2800     		cmp r0, #0
A1805270  BF08 2001		eqmov r0, #1
A1805274  BF18 2000		nemov r0, #0

#634					AND(		Motor_A	{LNXT:181|-1|-1}
(*) BOOL
A1805278  B082     		sub sp, sp, #8
A180527A  F8CD 0000		str r0, [sp]
A180527E  F85F 7194		ldr r7, [pc, #-404] ; 0x100004AC
A1805282  7838     		ldrb r0, [r7]

#635					NOT	{LNXT:181|-1|-1}
(*) BOOL
A1805284  2800     		cmp r0, #0
A1805286  BF08 2001		eqmov r0, #1
A180528A  BF18 2000		nemov r0, #0

#636					AND		Avto_C	{LNXT:181|-1|-1}
(*) BOOL
A180528E  F85F 71DC		ldr r7, [pc, #-476] ; 0xA1A0002E
A1805292  783F     		ldrb r7, [r7]
A1805294  4038     		and r0, r0, r7

#637					)	{LNXT:181|-1|-1}
(*) BOOL
A1805296  4607     		mov r7, r0
A1805298  F8DD 0000		ldr r0, [sp]
A180529C  B002     		add sp, sp, #8
A180529E  4038     		and r0, r0, r7

#638					JMPCN	$label50	{LNXT:181|182|185}
(-) BOOL
A18052A0  2800     		cmp r0, #0
A18052A2  D014     		beq #40 ; 0xA18052CE


#639		
#640					(* THEN *)
#641		
#642						(* Motor_C := TRUE; *)
#643						MOVE		TRUE,Motor_C	{LNXT:182|183|-1}
(*) BOOL
A18052A6  2001     		mov r0, #1 ; 1
A18052A8  F85F 71B8		ldr r7, [pc, #-440] ; 0x100004AE
A18052AC  7038     		strb r0, [r7]

#644		
#645						(* Rotationnumber := (Rotationnumber + 1) MOD 3; *)
#646						LD		Rotationnumber	{LNXT:183|201|-1}
(*) UNDEF
A18052AE  F85F 71D0		ldr r7, [pc, #-464] ; 0xA1A0005A
A18052B2  F9B7 0000		ldrsh r0, [r7]

#647						ADD		1	{LNXT:183|201|-1}
(-) INT
A18052B6  1C40     		add r0, r0, #1

#648						MOD		3	{LNXT:183|201|-1}
(*) INT
A18052B8  2103     		mov r1, #3 ; 3
A18052BA  F85F 423C		ldr r4, [pc, #-572] ; 0xA1804500
A18052BE  F044 0401		orr r4, r4, #1
A18052C2  47A0     		blx r4

#649						ST		Rotationnumber	{LNXT:183|201|-1}
(*) INT
A18052C4  F85F 71E8		ldr r7, [pc, #-488] ; 0xA1A0005A
A18052C8  8038     		strh r0, [r7]

#650						JMP		$label51	{LNXT:181|182|185}
(-) INT
A18052CA  E05D     		b #186 ; 0xA1805388


#651		$label50:
#652		
#653					(* ELSIF Avto_C AND NOT Motor_A AND NOT Motor_B *)
#654					LD		Motor_B	{LNXT:185|-1|-1}
(*) UNDEF
A18052CE  F85F 71E0		ldr r7, [pc, #-480] ; 0x100004AD
A18052D2  7838     		ldrb r0, [r7]

#655					NOT	{LNXT:185|-1|-1}
(*) BOOL
A18052D4  2800     		cmp r0, #0
A18052D6  BF08 2001		eqmov r0, #1
A18052DA  BF18 2000		nemov r0, #0

#656					AND(		Motor_A	{LNXT:185|-1|-1}
(*) BOOL
A18052DE  B082     		sub sp, sp, #8
A18052E0  F8CD 0000		str r0, [sp]
A18052E4  F85F 71FC		ldr r7, [pc, #-508] ; 0x100004AC
A18052E8  7838     		ldrb r0, [r7]

#657					NOT	{LNXT:185|-1|-1}
(*) BOOL
A18052EA  2800     		cmp r0, #0
A18052EC  BF08 2001		eqmov r0, #1
A18052F0  BF18 2000		nemov r0, #0

#658					AND(		Avto_C	{LNXT:185|-1|-1}
(*) BOOL
A18052F4  B082     		sub sp, sp, #8
A18052F6  F8CD 0000		str r0, [sp]
A18052FA  F85F 7248		ldr r7, [pc, #-584] ; 0xA1A0002E
A18052FE  7838     		ldrb r0, [r7]

#659					NOT	{LNXT:185|-1|-1}
(*) BOOL
A1805300  2800     		cmp r0, #0
A1805302  BF08 2001		eqmov r0, #1
A1805306  BF18 2000		nemov r0, #0

#660					)	{LNXT:185|-1|-1}
(*) BOOL
A180530A  4607     		mov r7, r0
A180530C  F8DD 0000		ldr r0, [sp]
A1805310  B002     		add sp, sp, #8
A1805312  4038     		and r0, r0, r7

#661					)	{LNXT:185|-1|-1}
(*) BOOL
A1805314  4607     		mov r7, r0
A1805316  F8DD 0000		ldr r0, [sp]
A180531A  B002     		add sp, sp, #8
A180531C  4038     		and r0, r0, r7

#662					JMPCN	$label51	{LNXT:185|187|201}
(-) BOOL
A180531E  2800     		cmp r0, #0
A1805320  D032     		beq #100 ; 0xA1805388


#663		
#664					(* THEN *)
#665		
#666		
#667						(* IF Avto_A *)
#668						LD		Avto_A	{LNXT:187|-1|-1}
(*) UNDEF
A1805324  F85F 7270		ldr r7, [pc, #-624] ; 0xA1A0002F
A1805328  7838     		ldrb r0, [r7]

#669						JMPCN	$label52	{LNXT:187|188|191}
(-) BOOL
A180532A  2800     		cmp r0, #0
A180532C  D014     		beq #40 ; 0xA1805358


#670		
#671						(* THEN *)
#672		
#673							(* Motor_A := TRUE; *)
#674							MOVE		TRUE,Motor_A	{LNXT:188|189|-1}
(*) BOOL
A1805330  2001     		mov r0, #1 ; 1
A1805332  F85F 7248		ldr r7, [pc, #-584] ; 0x100004AC
A1805336  7038     		strb r0, [r7]

#675		
#676							(* Rotationnumber := (Rotationnumber + 1) MOD 3; *)
#677							LD		Rotationnumber	{LNXT:189|201|-1}
(*) UNDEF
A1805338  F85F 725C		ldr r7, [pc, #-604] ; 0xA1A0005A
A180533C  F9B7 0000		ldrsh r0, [r7]

#678							ADD		1	{LNXT:189|201|-1}
(-) INT
A1805340  1C40     		add r0, r0, #1

#679							MOD		3	{LNXT:189|201|-1}
(*) INT
A1805342  2103     		mov r1, #3 ; 3
A1805344  F85F 42C8		ldr r4, [pc, #-712] ; 0xA1804500
A1805348  F044 0401		orr r4, r4, #1
A180534C  47A0     		blx r4

#680							ST		Rotationnumber	{LNXT:189|201|-1}
(*) INT
A180534E  F85F 7270		ldr r7, [pc, #-624] ; 0xA1A0005A
A1805352  8038     		strh r0, [r7]

#681							JMP		$label53	{LNXT:187|188|191}
(-) INT
A1805354  E018     		b #48 ; 0xA1805388


#682		$label52:
#683		
#684						(* ELSIF Avto_B *)
#685						LD		Avto_B	{LNXT:191|-1|-1}
(*) UNDEF
A1805358  F85F 72B0		ldr r7, [pc, #-688] ; 0xA1A0002C
A180535C  7838     		ldrb r0, [r7]

#686						JMPCN	$label53	{LNXT:191|192|201}
(-) BOOL
A180535E  2800     		cmp r0, #0
A1805360  D012     		beq #36 ; 0xA1805388


#687		
#688						(* THEN *)
#689		
#690							(* Motor_B := TRUE; *)
#691							MOVE		TRUE,Motor_B	{LNXT:192|193|-1}
(*) BOOL
A1805364  2001     		mov r0, #1 ; 1
A1805366  F85F 7278		ldr r7, [pc, #-632] ; 0x100004AD
A180536A  7038     		strb r0, [r7]

#692		
#693							(* Rotationnumber := (Rotationnumber - 1) MOD 3; *)
#694							LD		Rotationnumber	{LNXT:193|201|-1}
(*) UNDEF
A180536C  F85F 7290		ldr r7, [pc, #-656] ; 0xA1A0005A
A1805370  F9B7 0000		ldrsh r0, [r7]

#695							SUB		1	{LNXT:193|201|-1}
(-) INT
A1805374  1E40     		sub r0, r0, #1

#696							MOD		3	{LNXT:193|201|-1}
(*) INT
A1805376  2103     		mov r1, #3 ; 3
A1805378  F85F 42FC		ldr r4, [pc, #-764] ; 0xA1804500
A180537C  F044 0401		orr r4, r4, #1
A1805380  47A0     		blx r4

#697							ST		Rotationnumber	{LNXT:193|201|-1}
(*) INT
A1805382  F85F 72A4		ldr r7, [pc, #-676] ; 0xA1A0005A
A1805386  8038     		strh r0, [r7]

#698		
#699		$label53:
#700						(* END_IF *)
#701		
#702		$label51:
#703					(* END_IF *)
#704		
#705		$label38:
#706		
#707				(* END_CASE *)
#708		
#709		$label37:
#710			(* END_IF *)
#711		
#712		
#713			(* IF Avto_A *)
#714			LD		Avto_A	{LNXT:201|-1|-1}
(*) UNDEF
A1805388  F85F 72D4		ldr r7, [pc, #-724] ; 0xA1A0002F
A180538C  7838     		ldrb r0, [r7]

#715			NOT	{LNXT:201|-1|-1}
(*) BOOL
A180538E  2800     		cmp r0, #0
A1805390  BF08 2001		eqmov r0, #1
A1805394  BF18 2000		nemov r0, #0

#716			JMPCN	$label54	{LNXT:201|202|204}
(-) BOOL
A1805398  2800     		cmp r0, #0
A180539A  D004     		beq #8 ; 0xA18053A6


#717		
#718			(* THEN *)
#719		
#720				(* Motor_A := False; *)
#721				MOVE		False,Motor_A	{LNXT:202|204|-1}
(*) BOOL
A180539E  2000     		mov r0, #0 ; 0
A18053A0  F85F 72B8		ldr r7, [pc, #-696] ; 0x100004AC
A18053A4  7038     		strb r0, [r7]

#722		
#723		$label54:
#724			(* END_IF *)
#725		
#726		
#727			(* IF Avto_B *)
#728			LD		Avto_B	{LNXT:204|-1|-1}
(*) UNDEF
A18053A6  F85F 72FC		ldr r7, [pc, #-764] ; 0xA1A0002C
A18053AA  7838     		ldrb r0, [r7]

#729			NOT	{LNXT:204|-1|-1}
(*) BOOL
A18053AC  2800     		cmp r0, #0
A18053AE  BF08 2001		eqmov r0, #1
A18053B2  BF18 2000		nemov r0, #0

#730			JMPCN	$label55	{LNXT:204|205|207}
(-) BOOL
A18053B6  2800     		cmp r0, #0
A18053B8  D004     		beq #8 ; 0xA18053C4


#731		
#732			(* THEN *)
#733		
#734				(* Motor_B := False; *)
#735				MOVE		False,Motor_B	{LNXT:205|207|-1}
(*) BOOL
A18053BC  2000     		mov r0, #0 ; 0
A18053BE  F85F 72D0		ldr r7, [pc, #-720] ; 0x100004AD
A18053C2  7038     		strb r0, [r7]

#736		
#737		$label55:
#738			(* END_IF *)
#739		
#740		
#741			(* IF Avto_C *)
#742			LD		Avto_C	{LNXT:207|-1|-1}
(*) UNDEF
A18053C4  F85F 7314		ldr r7, [pc, #-788] ; 0xA1A0002E
A18053C8  7838     		ldrb r0, [r7]

#743			NOT	{LNXT:207|-1|-1}
(*) BOOL
A18053CA  2800     		cmp r0, #0
A18053CC  BF08 2001		eqmov r0, #1
A18053D0  BF18 2000		nemov r0, #0

#744			JMPCN	$label56	{LNXT:207|208|218}
(-) BOOL
A18053D4  2800     		cmp r0, #0
A18053D6  D004     		beq #8 ; 0xA18053E2


#745		
#746			(* THEN *)
#747		
#748				(* Motor_C := False; *)
#749				MOVE		False,Motor_C	{LNXT:208|218|-1}
(*) BOOL
A18053DA  2000     		mov r0, #0 ; 0
A18053DC  F85F 72EC		ldr r7, [pc, #-748] ; 0x100004AE
A18053E0  7038     		strb r0, [r7]

#750		
#751		$label56:
#752			(* END_IF *)
#753		
#754		
#755			(* IF Tank_Level >= Level_1 AND NOT Rotation AND NOT FastRunMode *)
#756			LD		FastRunMode	{LNXT:218|-1|-1}
(*) UNDEF
A18053E2  F85F 7308		ldr r7, [pc, #-776] ; 0xA1A00058
A18053E6  7838     		ldrb r0, [r7]

#757			NOT	{LNXT:218|-1|-1}
(*) BOOL
A18053E8  2800     		cmp r0, #0
A18053EA  BF08 2001		eqmov r0, #1
A18053EE  BF18 2000		nemov r0, #0

#758			AND(		Rotation	{LNXT:218|-1|-1}
(*) BOOL
A18053F2  B082     		sub sp, sp, #8
A18053F4  F8CD 0000		str r0, [sp]
A18053F8  F85F 73BC		ldr r7, [pc, #-956] ; 0xA0003F10
A18053FC  7838     		ldrb r0, [r7]

#759			NOT	{LNXT:218|-1|-1}
(*) BOOL
A18053FE  2800     		cmp r0, #0
A1805400  BF08 2001		eqmov r0, #1
A1805404  BF18 2000		nemov r0, #0

#760			AND(		Tank_Level	{LNXT:218|-1|-1}
(*) BOOL
A1805408  B082     		sub sp, sp, #8
A180540A  F8CD 0000		str r0, [sp]
A180540E  F85F 7384		ldr r7, [pc, #-900] ; 0xA1A00012
A1805412  F9B7 0000		ldrsh r0, [r7]

#761			GE		Level_1	{LNXT:218|-1|-1}
(*) INT
A1805416  F85F 73EC		ldr r7, [pc, #-1004] ; 0xA0003F06
A180541A  F9B7 7000		ldrsh r7, [r7]
A180541E  42B8     		cmp r0, r7
A1805420  BFB8 2000		ltmov r0, #0
A1805424  BFA8 2001		gemov r0, #1

#762			)	{LNXT:218|-1|-1}
(*) BOOL
A1805428  4607     		mov r7, r0
A180542A  F8DD 0000		ldr r0, [sp]
A180542E  B002     		add sp, sp, #8
A1805430  4038     		and r0, r0, r7

#763			)	{LNXT:218|-1|-1}
(*) BOOL
A1805432  4607     		mov r7, r0
A1805434  F8DD 0000		ldr r0, [sp]
A1805438  B002     		add sp, sp, #8
A180543A  4038     		and r0, r0, r7

#764			JMPCN	$label57	{LNXT:218|221|287}
(-) BOOL
A180543C  2800     		cmp r0, #0
A180543E  F000 8126		beq #588 ; 0xA180568E


#765		
#766			(* THEN *)
#767		
#768		
#769				(* CASE Priority OF *)
#770		
#771				(* 0: *)
#772				LD		Priority	{LNXT:221|-1|-1}
(*) UNDEF
A1805442  F85F 740C		ldr r7, [pc, #-1036] ; 0xA0003F0C
A1805446  F9B7 0000		ldrsh r0, [r7]

#773				EQ		0	{LNXT:221|-1|-1}
(*) INT
A180544A  2800     		cmp r0, #0
A180544C  BF18 2000		nemov r0, #0
A1805450  BF08 2001		eqmov r0, #1

#774				JMPC		$label59	{LNXT:221|222|242}
(-) BOOL
A1805454  2800     		cmp r0, #0
A1805456  D11A     		bne #52 ; 0xA180548E


#775		
#776				(* 1: *)
#777				LD		Priority	{LNXT:242|-1|-1}
(*) UNDEF
A180545A  F85F 7424		ldr r7, [pc, #-1060] ; 0xA0003F0C
A180545E  F9B7 0000		ldrsh r0, [r7]

#778				EQ		1	{LNXT:242|-1|-1}
(*) INT
A1805462  2801     		cmp r0, #1
A1805464  BF18 2000		nemov r0, #0
A1805468  BF08 2001		eqmov r0, #1

#779				JMPC		$label60	{LNXT:242|243|262}
(-) BOOL
A180546C  2800     		cmp r0, #0
A180546E  D164     		bne #200 ; 0xA180553A


#780		
#781				(* 2: *)
#782				LD		Priority	{LNXT:262|-1|-1}
(*) UNDEF
A1805472  F85F 743C		ldr r7, [pc, #-1084] ; 0xA0003F0C
A1805476  F9B7 0000		ldrsh r0, [r7]

#783				EQ		2	{LNXT:262|-1|-1}
(*) INT
A180547A  2802     		cmp r0, #2
A180547C  BF18 2000		nemov r0, #0
A1805480  BF08 2001		eqmov r0, #1

#784				JMPC		$label61	{LNXT:262|263|287}
(-) BOOL
A1805484  2800     		cmp r0, #0
A1805486  F040 80AE		bne #348 ; 0xA18055E6


#785				JMP		$label58	{LNXT:262|263|287}
(-) BOOL
A180548A  E100     		b #512 ; 0xA180568E


#786		
#787				(* Istruzioni di ciascun CASE: *)
#788		
#789		$label59:
#790		
#791					(* IF Motor_B AND NOT Motor_C *)
#792					LD		Motor_C	{LNXT:222|-1|-1}
(*) UNDEF
A180548E  F85F 739C		ldr r7, [pc, #-924] ; 0x100004AE
A1805492  7838     		ldrb r0, [r7]

#793					NOT	{LNXT:222|-1|-1}
(*) BOOL
A1805494  2800     		cmp r0, #0
A1805496  BF08 2001		eqmov r0, #1
A180549A  BF18 2000		nemov r0, #0

#794					AND(		Motor_B	{LNXT:222|-1|-1}
(*) BOOL
A180549E  B082     		sub sp, sp, #8
A18054A0  F8CD 0000		str r0, [sp]
A18054A4  F85F 73B8		ldr r7, [pc, #-952] ; 0x100004AD
A18054A8  7838     		ldrb r0, [r7]

#795					NOT	{LNXT:222|-1|-1}
(*) BOOL
A18054AA  2800     		cmp r0, #0
A18054AC  BF08 2001		eqmov r0, #1
A18054B0  BF18 2000		nemov r0, #0

#796					)	{LNXT:222|-1|-1}
(*) BOOL
A18054B4  4607     		mov r7, r0
A18054B6  F8DD 0000		ldr r0, [sp]
A18054BA  B002     		add sp, sp, #8
A18054BC  4038     		and r0, r0, r7

#797					JMPCN	$label62	{LNXT:222|223|287}
(-) BOOL
A18054BE  2800     		cmp r0, #0
A18054C0  D039     		beq #114 ; 0xA1805536


#798		
#799					(* THEN *)
#800		
#801		
#802						(* IF Avto_A *)
#803						LD		Avto_A	{LNXT:223|-1|-1}
(*) UNDEF
A18054C4  F85F 7410		ldr r7, [pc, #-1040] ; 0xA1A0002F
A18054C8  7838     		ldrb r0, [r7]

#804						JMPCN	$label63	{LNXT:223|224|228}
(-) BOOL
A18054CA  2800     		cmp r0, #0
A18054CC  D00A     		beq #20 ; 0xA18054E4


#805		
#806						(* THEN *)
#807		
#808							(* Priority := 0; *)
#809							MOVE		0,Priority	{LNXT:224|225|-1}
(*) BOOL
A18054D0  2000     		mov r0, #0 ; 0
A18054D2  F85F 749C		ldr r7, [pc, #-1180] ; 0xA0003F0C
A18054D6  8038     		strh r0, [r7]

#810		
#811							(* Motor_A := TRUE; *)
#812							MOVE		TRUE,Motor_A	{LNXT:225|287|-1}
(*) INT
A18054D8  2001     		mov r0, #1 ; 1
A18054DA  F85F 73F0		ldr r7, [pc, #-1008] ; 0x100004AC
A18054DE  7038     		strb r0, [r7]

#813							JMP		$label64	{LNXT:223|224|228}
(-) BOOL
A18054E0  E029     		b #82 ; 0xA1805536


#814		$label63:
#815		
#816						(* ELSIF Avto_A *)
#817						LD		Avto_A	{LNXT:228|-1|-1}
(*) UNDEF
A18054E4  F85F 7430		ldr r7, [pc, #-1072] ; 0xA1A0002F
A18054E8  7838     		ldrb r0, [r7]

#818						NOT	{LNXT:228|-1|-1}
(*) BOOL
A18054EA  2800     		cmp r0, #0
A18054EC  BF08 2001		eqmov r0, #1
A18054F0  BF18 2000		nemov r0, #0

#819						JMPCN	$label64	{LNXT:228|230|287}
(-) BOOL
A18054F4  2800     		cmp r0, #0
A18054F6  D01E     		beq #60 ; 0xA1805536


#820		
#821						(* THEN *)
#822		
#823		
#824							(* IF Avto_B *)
#825							LD		Avto_B	{LNXT:230|-1|-1}
(*) UNDEF
A18054FA  F85F 7450		ldr r7, [pc, #-1104] ; 0xA1A0002C
A18054FE  7838     		ldrb r0, [r7]

#826							JMPCN	$label65	{LNXT:230|231|234}
(-) BOOL
A1805500  2800     		cmp r0, #0
A1805502  D00A     		beq #20 ; 0xA180551A


#827		
#828							(* THEN *)
#829		
#830								(* Priority := 1; *)
#831								MOVE		1,Priority	{LNXT:231|232|-1}
(*) BOOL
A1805506  2001     		mov r0, #1 ; 1
A1805508  F85F 74D4		ldr r7, [pc, #-1236] ; 0xA0003F0C
A180550C  8038     		strh r0, [r7]

#832		
#833								(* Motor_B := TRUE; *)
#834								MOVE		TRUE,Motor_B	{LNXT:232|287|-1}
(*) INT
A180550E  2001     		mov r0, #1 ; 1
A1805510  F85F 7424		ldr r7, [pc, #-1060] ; 0x100004AD
A1805514  7038     		strb r0, [r7]

#835								JMP		$label66	{LNXT:230|231|234}
(-) BOOL
A1805516  E00E     		b #28 ; 0xA1805536


#836		$label65:
#837		
#838							(* ELSIF Avto_C *)
#839							LD		Avto_C	{LNXT:234|-1|-1}
(*) UNDEF
A180551A  F85F 7468		ldr r7, [pc, #-1128] ; 0xA1A0002E
A180551E  7838     		ldrb r0, [r7]

#840							JMPCN	$label66	{LNXT:234|235|287}
(-) BOOL
A1805520  2800     		cmp r0, #0
A1805522  D008     		beq #16 ; 0xA1805536


#841		
#842							(* THEN *)
#843		
#844								(* Priority := 2; *)
#845								MOVE		2,Priority	{LNXT:235|236|-1}
(*) BOOL
A1805526  2002     		mov r0, #2 ; 2
A1805528  F85F 74F4		ldr r7, [pc, #-1268] ; 0xA0003F0C
A180552C  8038     		strh r0, [r7]

#846		
#847								(* Motor_C := TRUE; *)
#848								MOVE		TRUE,Motor_C	{LNXT:236|287|-1}
(*) INT
A180552E  2001     		mov r0, #1 ; 1
A1805530  F85F 7440		ldr r7, [pc, #-1088] ; 0x100004AE
A1805534  7038     		strb r0, [r7]

#849		
#850		$label66:
#851							(* END_IF *)
#852		
#853		$label64:
#854						(* END_IF *)
#855		
#856		$label62:
#857					(* END_IF *)
#858					JMP		$label58	{LNXT:1|287|-1}
(-) BOOL
A1805536  E0AA     		b #340 ; 0xA180568E


#859		
#860		$label60:
#861		
#862					(* IF Motor_A AND NOT Motor_C *)
#863					LD		Motor_C	{LNXT:243|-1|-1}
(*) UNDEF
A180553A  F85F 7448		ldr r7, [pc, #-1096] ; 0x100004AE
A180553E  7838     		ldrb r0, [r7]

#864					NOT	{LNXT:243|-1|-1}
(*) BOOL
A1805540  2800     		cmp r0, #0
A1805542  BF08 2001		eqmov r0, #1
A1805546  BF18 2000		nemov r0, #0

#865					AND(		Motor_A	{LNXT:243|-1|-1}
(*) BOOL
A180554A  B082     		sub sp, sp, #8
A180554C  F8CD 0000		str r0, [sp]
A1805550  F85F 7468		ldr r7, [pc, #-1128] ; 0x100004AC
A1805554  7838     		ldrb r0, [r7]

#866					NOT	{LNXT:243|-1|-1}
(*) BOOL
A1805556  2800     		cmp r0, #0
A1805558  BF08 2001		eqmov r0, #1
A180555C  BF18 2000		nemov r0, #0

#867					)	{LNXT:243|-1|-1}
(*) BOOL
A1805560  4607     		mov r7, r0
A1805562  F8DD 0000		ldr r0, [sp]
A1805566  B002     		add sp, sp, #8
A1805568  4038     		and r0, r0, r7

#868					JMPCN	$label67	{LNXT:243|244|287}
(-) BOOL
A180556A  2800     		cmp r0, #0
A180556C  D039     		beq #114 ; 0xA18055E2


#869		
#870					(* THEN *)
#871		
#872		
#873						(* IF Avto_B *)
#874						LD		Avto_B	{LNXT:244|-1|-1}
(*) UNDEF
A1805570  F85F 74C8		ldr r7, [pc, #-1224] ; 0xA1A0002C
A1805574  7838     		ldrb r0, [r7]

#875						JMPCN	$label68	{LNXT:244|245|248}
(-) BOOL
A1805576  2800     		cmp r0, #0
A1805578  D00A     		beq #20 ; 0xA1805590


#876		
#877						(* THEN *)
#878		
#879							(* Priority := 1; *)
#880							MOVE		1,Priority	{LNXT:245|246|-1}
(*) BOOL
A180557C  2001     		mov r0, #1 ; 1
A180557E  F85F 7548		ldr r7, [pc, #-1352] ; 0xA0003F0C
A1805582  8038     		strh r0, [r7]

#881		
#882							(* Motor_B := TRUE; *)
#883							MOVE		TRUE,Motor_B	{LNXT:246|287|-1}
(*) INT
A1805584  2001     		mov r0, #1 ; 1
A1805586  F85F 7498		ldr r7, [pc, #-1176] ; 0x100004AD
A180558A  7038     		strb r0, [r7]

#884							JMP		$label69	{LNXT:244|245|248}
(-) BOOL
A180558C  E029     		b #82 ; 0xA18055E2


#885		$label68:
#886		
#887						(* ELSIF Avto_B *)
#888						LD		Avto_B	{LNXT:248|-1|-1}
(*) UNDEF
A1805590  F85F 74E8		ldr r7, [pc, #-1256] ; 0xA1A0002C
A1805594  7838     		ldrb r0, [r7]

#889						NOT	{LNXT:248|-1|-1}
(*) BOOL
A1805596  2800     		cmp r0, #0
A1805598  BF08 2001		eqmov r0, #1
A180559C  BF18 2000		nemov r0, #0

#890						JMPCN	$label69	{LNXT:248|250|287}
(-) BOOL
A18055A0  2800     		cmp r0, #0
A18055A2  D01E     		beq #60 ; 0xA18055E2


#891		
#892						(* THEN *)
#893		
#894		
#895							(* IF Avto_A *)
#896							LD		Avto_A	{LNXT:250|-1|-1}
(*) UNDEF
A18055A6  F85F 74F0		ldr r7, [pc, #-1264] ; 0xA1A0002F
A18055AA  7838     		ldrb r0, [r7]

#897							JMPCN	$label70	{LNXT:250|251|254}
(-) BOOL
A18055AC  2800     		cmp r0, #0
A18055AE  D00A     		beq #20 ; 0xA18055C6


#898		
#899							(* THEN *)
#900		
#901								(* Priority := 0; *)
#902								MOVE		0,Priority	{LNXT:251|252|-1}
(*) BOOL
A18055B2  2000     		mov r0, #0 ; 0
A18055B4  F85F 7580		ldr r7, [pc, #-1408] ; 0xA0003F0C
A18055B8  8038     		strh r0, [r7]

#903		
#904								(* Motor_A := TRUE; *)
#905								MOVE		TRUE,Motor_A	{LNXT:252|287|-1}
(*) INT
A18055BA  2001     		mov r0, #1 ; 1
A18055BC  F85F 74D4		ldr r7, [pc, #-1236] ; 0x100004AC
A18055C0  7038     		strb r0, [r7]

#906								JMP		$label71	{LNXT:250|251|254}
(-) BOOL
A18055C2  E00E     		b #28 ; 0xA18055E2


#907		$label70:
#908		
#909							(* ELSE *)
#910		
#911		
#912								(* IF Avto_C *)
#913								LD		Avto_C	{LNXT:254|-1|-1}
(*) UNDEF
A18055C6  F85F 7514		ldr r7, [pc, #-1300] ; 0xA1A0002E
A18055CA  7838     		ldrb r0, [r7]

#914								JMPCN	$label72	{LNXT:254|255|287}
(-) BOOL
A18055CC  2800     		cmp r0, #0
A18055CE  D008     		beq #16 ; 0xA18055E2


#915		
#916								(* THEN *)
#917		
#918									(* Priority := 2; *)
#919									MOVE		2,Priority	{LNXT:255|256|-1}
(*) BOOL
A18055D2  2002     		mov r0, #2 ; 2
A18055D4  F85F 75A0		ldr r7, [pc, #-1440] ; 0xA0003F0C
A18055D8  8038     		strh r0, [r7]

#920		
#921									(* Motor_C := TRUE; *)
#922									MOVE		TRUE,Motor_C	{LNXT:256|287|-1}
(*) INT
A18055DA  2001     		mov r0, #1 ; 1
A18055DC  F85F 74EC		ldr r7, [pc, #-1260] ; 0x100004AE
A18055E0  7038     		strb r0, [r7]

#923		
#924		$label72:
#925								(* END_IF *)
#926		
#927		$label71:
#928							(* END_IF *)
#929		
#930		$label69:
#931						(* END_IF *)
#932		
#933		$label67:
#934					(* END_IF *)
#935					JMP		$label58	{LNXT:1|287|-1}
(-) BOOL
A18055E2  E054     		b #168 ; 0xA180568E


#936		
#937		$label61:
#938		
#939					(* IF Motor_A AND NOT Motor_B *)
#940					LD		Motor_B	{LNXT:263|-1|-1}
(*) UNDEF
A18055E6  F85F 74F8		ldr r7, [pc, #-1272] ; 0x100004AD
A18055EA  7838     		ldrb r0, [r7]

#941					NOT	{LNXT:263|-1|-1}
(*) BOOL
A18055EC  2800     		cmp r0, #0
A18055EE  BF08 2001		eqmov r0, #1
A18055F2  BF18 2000		nemov r0, #0

#942					AND(		Motor_A	{LNXT:263|-1|-1}
(*) BOOL
A18055F6  B082     		sub sp, sp, #8
A18055F8  F8CD 0000		str r0, [sp]
A18055FC  F85F 7514		ldr r7, [pc, #-1300] ; 0x100004AC
A1805600  7838     		ldrb r0, [r7]

#943					NOT	{LNXT:263|-1|-1}
(*) BOOL
A1805602  2800     		cmp r0, #0
A1805604  BF08 2001		eqmov r0, #1
A1805608  BF18 2000		nemov r0, #0

#944					)	{LNXT:263|-1|-1}
(*) BOOL
A180560C  4607     		mov r7, r0
A180560E  F8DD 0000		ldr r0, [sp]
A1805612  B002     		add sp, sp, #8
A1805614  4038     		and r0, r0, r7

#945					JMPCN	$label73	{LNXT:263|264|287}
(-) BOOL
A1805616  2800     		cmp r0, #0
A1805618  D039     		beq #114 ; 0xA180568E


#946		
#947					(* THEN *)
#948		
#949		
#950						(* IF Avto_C *)
#951						LD		Avto_C	{LNXT:264|-1|-1}
(*) UNDEF
A180561C  F85F 756C		ldr r7, [pc, #-1388] ; 0xA1A0002E
A1805620  7838     		ldrb r0, [r7]

#952						JMPCN	$label74	{LNXT:264|265|268}
(-) BOOL
A1805622  2800     		cmp r0, #0
A1805624  D00A     		beq #20 ; 0xA180563C


#953		
#954						(* THEN *)
#955		
#956							(* Priority := 2; *)
#957							MOVE		2,Priority	{LNXT:265|266|-1}
(*) BOOL
A1805628  2002     		mov r0, #2 ; 2
A180562A  F85F 75F4		ldr r7, [pc, #-1524] ; 0xA0003F0C
A180562E  8038     		strh r0, [r7]

#958		
#959							(* Motor_C := TRUE; *)
#960							MOVE		TRUE,Motor_C	{LNXT:266|287|-1}
(*) INT
A1805630  2001     		mov r0, #1 ; 1
A1805632  F85F 7540		ldr r7, [pc, #-1344] ; 0x100004AE
A1805636  7038     		strb r0, [r7]

#961							JMP		$label75	{LNXT:264|265|268}
(-) BOOL
A1805638  E029     		b #82 ; 0xA180568E


#962		$label74:
#963		
#964						(* ELSIF Avto_C *)
#965						LD		Avto_C	{LNXT:268|-1|-1}
(*) UNDEF
A180563C  F85F 758C		ldr r7, [pc, #-1420] ; 0xA1A0002E
A1805640  7838     		ldrb r0, [r7]

#966						NOT	{LNXT:268|-1|-1}
(*) BOOL
A1805642  2800     		cmp r0, #0
A1805644  BF08 2001		eqmov r0, #1
A1805648  BF18 2000		nemov r0, #0

#967						JMPCN	$label75	{LNXT:268|270|287}
(-) BOOL
A180564C  2800     		cmp r0, #0
A180564E  D01E     		beq #60 ; 0xA180568E


#968		
#969						(* THEN *)
#970		
#971		
#972							(* IF Avto_A *)
#973							LD		Avto_A	{LNXT:270|-1|-1}
(*) UNDEF
A1805652  F85F 759C		ldr r7, [pc, #-1436] ; 0xA1A0002F
A1805656  7838     		ldrb r0, [r7]

#974							JMPCN	$label76	{LNXT:270|271|274}
(-) BOOL
A1805658  2800     		cmp r0, #0
A180565A  D00A     		beq #20 ; 0xA1805672


#975		
#976							(* THEN *)
#977		
#978								(* Priority := 0; *)
#979								MOVE		0,Priority	{LNXT:271|272|-1}
(*) BOOL
A180565E  2000     		mov r0, #0 ; 0
A1805660  F85F 762C		ldr r7, [pc, #-1580] ; 0xA0003F0C
A1805664  8038     		strh r0, [r7]

#980		
#981								(* Motor_A := TRUE; *)
#982								MOVE		TRUE,Motor_A	{LNXT:272|287|-1}
(*) INT
A1805666  2001     		mov r0, #1 ; 1
A1805668  F85F 7580		ldr r7, [pc, #-1408] ; 0x100004AC
A180566C  7038     		strb r0, [r7]

#983								JMP		$label77	{LNXT:270|271|274}
(-) BOOL
A180566E  E00E     		b #28 ; 0xA180568E


#984		$label76:
#985		
#986							(* ELSIF Avto_B *)
#987							LD		Avto_B	{LNXT:274|-1|-1}
(*) UNDEF
A1805672  F85F 75C8		ldr r7, [pc, #-1480] ; 0xA1A0002C
A1805676  7838     		ldrb r0, [r7]

#988							JMPCN	$label77	{LNXT:274|275|287}
(-) BOOL
A1805678  2800     		cmp r0, #0
A180567A  D008     		beq #16 ; 0xA180568E


#989		
#990							(* THEN *)
#991		
#992								(* Priority := 1; *)
#993								MOVE		1,Priority	{LNXT:275|276|-1}
(*) BOOL
A180567E  2001     		mov r0, #1 ; 1
A1805680  F85F 764C		ldr r7, [pc, #-1612] ; 0xA0003F0C
A1805684  8038     		strh r0, [r7]

#994		
#995								(* Motor_B := TRUE; *)
#996								MOVE		TRUE,Motor_B	{LNXT:276|287|-1}
(*) INT
A1805686  2001     		mov r0, #1 ; 1
A1805688  F85F 759C		ldr r7, [pc, #-1436] ; 0x100004AD
A180568C  7038     		strb r0, [r7]

#997		
#998		$label77:
#999							(* END_IF *)
#1000		
#1001		$label75:
#1002						(* END_IF *)
#1003		
#1004		$label73:
#1005					(* END_IF *)
#1006		
#1007		$label58:
#1008		
#1009				(* END_CASE *)
#1010		
#1011		$label57:
#1012			(* END_IF *)
#1013		
#1014		
#1015			(* IF Rotation AND FastRunMode *)
#1016			LD		Rotation	{LNXT:287|-1|-1}
(*) UNDEF
A180568E  F85F 7650		ldr r7, [pc, #-1616] ; 0xA0003F10
A1805692  7838     		ldrb r0, [r7]

#1017			NOT	{LNXT:287|-1|-1}
(*) BOOL
A1805694  2800     		cmp r0, #0
A1805696  BF08 2001		eqmov r0, #1
A180569A  BF18 2000		nemov r0, #0

#1018			AND		FastRunMode	{LNXT:287|-1|-1}
(*) BOOL
A180569E  F85F 75C4		ldr r7, [pc, #-1476] ; 0xA1A00058
A18056A2  783F     		ldrb r7, [r7]
A18056A4  4038     		and r0, r0, r7

#1019			JMPCN	$label78	{LNXT:287|290|398}
(-) BOOL
A18056A6  2800     		cmp r0, #0
A18056A8  F000 8356		beq #1708 ; 0xA1805D58


#1020		
#1021			(* THEN *)
#1022		
#1023		
#1024				(* CASE CurrentPump OF *)
#1025		
#1026				(* 1: *)
#1027				LD		CurrentPump	{LNXT:291|-1|-1}
(*) UNDEF
A18056AC  F8DF 7254		ldr r7, [pc, #+596] ; 0xA1A0005C
A18056B0  F9B7 0000		ldrsh r0, [r7]

#1028				EQ		1	{LNXT:291|-1|-1}
(*) INT
A18056B4  2801     		cmp r0, #1
A18056B6  BF18 2000		nemov r0, #0
A18056BA  BF08 2001		eqmov r0, #1

#1029				JMPC		$label80	{LNXT:291|294|326}
(-) BOOL
A18056BE  2800     		cmp r0, #0
A18056C0  D11A     		bne #52 ; 0xA18056F8


#1030		
#1031				(* 2: *)
#1032				LD		CurrentPump	{LNXT:326|-1|-1}
(*) UNDEF
A18056C4  F8DF 723C		ldr r7, [pc, #+572] ; 0xA1A0005C
A18056C8  F9B7 0000		ldrsh r0, [r7]

#1033				EQ		2	{LNXT:326|-1|-1}
(*) INT
A18056CC  2802     		cmp r0, #2
A18056CE  BF18 2000		nemov r0, #0
A18056D2  BF08 2001		eqmov r0, #1

#1034				JMPC		$label81	{LNXT:326|327|357}
(-) BOOL
A18056D6  2800     		cmp r0, #0
A18056D8  F040 8130		bne #608 ; 0xA180593C


#1035		
#1036				(* 3: *)
#1037				LD		CurrentPump	{LNXT:357|-1|-1}
(*) UNDEF
A18056DC  F8DF 7224		ldr r7, [pc, #+548] ; 0xA1A0005C
A18056E0  F9B7 0000		ldrsh r0, [r7]

#1038				EQ		3	{LNXT:357|-1|-1}
(*) INT
A18056E4  2803     		cmp r0, #3
A18056E6  BF18 2000		nemov r0, #0
A18056EA  BF08 2001		eqmov r0, #1

#1039				JMPC		$label82	{LNXT:357|358|398}
(-) BOOL
A18056EE  2800     		cmp r0, #0
A18056F0  F040 822C		bne #1112 ; 0xA1805B4C


#1040				JMP		$label79	{LNXT:357|358|398}
(-) BOOL
A18056F4  E330     		b #1632 ; 0xA1805D58


#1041		
#1042				(* Istruzioni di ciascun CASE: *)
#1043		
#1044		$label80:
#1045		
#1046					(* IF Tank_Level >= Level_1 AND Priority = 0 *)
#1047					LD		Priority	{LNXT:294|-1|-1}
(*) UNDEF
A18056F8  F85F 76C4		ldr r7, [pc, #-1732] ; 0xA0003F0C
A18056FC  F9B7 0000		ldrsh r0, [r7]

#1048					EQ		0	{LNXT:294|-1|-1}
(*) INT
A1805700  2800     		cmp r0, #0
A1805702  BF18 2000		nemov r0, #0
A1805706  BF08 2001		eqmov r0, #1

#1049					AND(		Tank_Level	{LNXT:294|-1|-1}
(*) BOOL
A180570A  B082     		sub sp, sp, #8
A180570C  F8CD 0000		str r0, [sp]
A1805710  F85F 7688		ldr r7, [pc, #-1672] ; 0xA1A00012
A1805714  F9B7 0000		ldrsh r0, [r7]

#1050					GE		Level_1	{LNXT:294|-1|-1}
(*) INT
A1805718  F85F 76F0		ldr r7, [pc, #-1776] ; 0xA0003F06
A180571C  F9B7 7000		ldrsh r7, [r7]
A1805720  42B8     		cmp r0, r7
A1805722  BFB8 2000		ltmov r0, #0
A1805726  BFA8 2001		gemov r0, #1

#1051					)	{LNXT:294|-1|-1}
(*) BOOL
A180572A  4607     		mov r7, r0
A180572C  F8DD 0000		ldr r0, [sp]
A1805730  B002     		add sp, sp, #8
A1805732  4038     		and r0, r0, r7

#1052					JMPCN	$label83	{LNXT:294|295|298}
(-) BOOL
A1805734  2800     		cmp r0, #0
A1805736  D014     		beq #40 ; 0xA1805762


#1053		
#1054					(* THEN *)
#1055		
#1056						(* CurrentPump := ((CurrentPump) MOD 3) + 1; *)
#1057						LD		CurrentPump	{LNXT:295|296|-1}
(*) UNDEF
A180573A  F8DF 71C8		ldr r7, [pc, #+456] ; 0xA1A0005C
A180573E  F9B7 0000		ldrsh r0, [r7]

#1058						MOD		3	{LNXT:295|296|-1}
(*) INT
A1805742  2103     		mov r1, #3 ; 3
A1805744  F85F 46C8		ldr r4, [pc, #-1736] ; 0xA1804500
A1805748  F044 0401		orr r4, r4, #1
A180574C  47A0     		blx r4

#1059						ADD		1	{LNXT:295|296|-1}
(-) INT
A180574E  1C40     		add r0, r0, #1

#1060						ST		CurrentPump	{LNXT:295|296|-1}
(*) INT
A1805750  F8DF 71B0		ldr r7, [pc, #+432] ; 0xA1A0005C
A1805754  8038     		strh r0, [r7]

#1061		
#1062						(* Motor_A := TRUE; *)
#1063						MOVE		TRUE,Motor_A	{LNXT:296|307|-1}
(*) INT
A1805756  2001     		mov r0, #1 ; 1
A1805758  F85F 7670		ldr r7, [pc, #-1648] ; 0x100004AC
A180575C  7038     		strb r0, [r7]

#1064						JMP		$label84	{LNXT:294|295|298}
(-) BOOL
A180575E  E049     		b #146 ; 0xA18057F4


#1065		$label83:
#1066		
#1067					(* ELSE *)
#1068		
#1069		
#1070						(* IF TestRunActive_1 AND NOT TestRunRunning_1 *)
#1071						LD		TestRunRunning_1	{LNXT:298|-1|-1}
(*) UNDEF
A1805762  F8DF 719C		ldr r7, [pc, #+412] ; 0xA1A00059
A1805766  7838     		ldrb r0, [r7]

#1072						NOT	{LNXT:298|-1|-1}
(*) BOOL
A1805768  2800     		cmp r0, #0
A180576A  BF08 2001		eqmov r0, #1
A180576E  BF18 2000		nemov r0, #0

#1073						AND(		TestRunActive_1	{LNXT:298|-1|-1}
(*) BOOL
A1805772  B082     		sub sp, sp, #8
A1805774  F8CD 0000		str r0, [sp]
A1805778  F8DF 718C		ldr r7, [pc, #+396] ; 0xA1A0005E
A180577C  7838     		ldrb r0, [r7]

#1074						NOT	{LNXT:298|-1|-1}
(*) BOOL
A180577E  2800     		cmp r0, #0
A1805780  BF08 2001		eqmov r0, #1
A1805784  BF18 2000		nemov r0, #0

#1075						)	{LNXT:298|-1|-1}
(*) BOOL
A1805788  4607     		mov r7, r0
A180578A  F8DD 0000		ldr r0, [sp]
A180578E  B002     		add sp, sp, #8
A1805790  4038     		and r0, r0, r7

#1076						JMPCN	$label85	{LNXT:298|299|307}
(-) BOOL
A1805792  2800     		cmp r0, #0
A1805794  D02E     		beq #92 ; 0xA18057F4


#1077		
#1078						(* THEN *)
#1079		
#1080							(* PumpIntervalTimer_1 *)
#1081							MOVE		TRUE,PumpIntervalTimer_1.IN	{LNXT:299|-1|-1}
(*) BOOL
A1805798  2001     		mov r0, #1 ; 1
A180579A  F8DF 7174		ldr r7, [pc, #+372] ; 0xA1A00064
A180579E  7038     		strb r0, [r7]

#1082							MOVE		5000,PumpIntervalTimer_1.PT	{LNXT:299|-1|-1}
(*) BOOL
A18057A0  F8DF 7188		ldr r7, [pc, #+392] ; 0x1388
A18057A4  4638     		mov r0, r7
A18057A6  F8DF 716C		ldr r7, [pc, #+364] ; 0xA1A00068
A18057AA  6038     		str r0, [r7]

#1083							CAL		PumpIntervalTimer_1	{LNXT:299|300|-1}
(*) UDINT
A18057AC  E92D 0021		stmdb sp!, { r0, r5 }
A18057B0  F8DF 5158		ldr r5, [pc, #+344] ; 0xA1A00060
A18057B4  F85F 4734		ldr r4, [pc, #-1844] ; 0xA1804550
A18057B8  F044 0401		orr r4, r4, #1
A18057BC  47A0     		blx r4
A18057BE  E8BD 0021		ldmia sp!, { r0, r5 }

#1084		
#1085		
#1086							(* IF PumpIntervalTimer_1.Q *)
#1087							LD		PumpIntervalTimer_1.Q	{LNXT:300|-1|-1}
(*) UNDEF
A18057C2  F8DF 7154		ldr r7, [pc, #+340] ; 0xA1A0006C
A18057C6  7838     		ldrb r0, [r7]

#1088							JMPCN	$label86	{LNXT:300|301|307}
(-) BOOL
A18057C8  2800     		cmp r0, #0
A18057CA  D013     		beq #38 ; 0xA18057F4


#1089		
#1090							(* THEN *)
#1091		
#1092								(* TestRunActive_1 := TRUE; *)
#1093								MOVE		TRUE,TestRunActive_1	{LNXT:301|302|-1}
(*) BOOL
A18057CE  2001     		mov r0, #1 ; 1
A18057D0  F8DF 7134		ldr r7, [pc, #+308] ; 0xA1A0005E
A18057D4  7038     		strb r0, [r7]

#1094		
#1095								(* PumpIntervalTimer_1 *)
#1096								MOVE		FALSE,PumpIntervalTimer_1.IN	{LNXT:302|-1|-1}
(*) BOOL
A18057D6  2000     		mov r0, #0 ; 0
A18057D8  F8DF 7134		ldr r7, [pc, #+308] ; 0xA1A00064
A18057DC  7038     		strb r0, [r7]

#1097								CAL		PumpIntervalTimer_1	{LNXT:302|307|-1}
(*) BOOL
A18057DE  E92D 0021		stmdb sp!, { r0, r5 }
A18057E2  F8DF 5128		ldr r5, [pc, #+296] ; 0xA1A00060
A18057E6  F85F 4764		ldr r4, [pc, #-1892] ; 0xA1804550
A18057EA  F044 0401		orr r4, r4, #1
A18057EE  47A0     		blx r4
A18057F0  E8BD 0021		ldmia sp!, { r0, r5 }

#1098		
#1099		$label86:
#1100							(* END_IF *)
#1101		
#1102		$label85:
#1103						(* END_IF *)
#1104		
#1105		$label84:
#1106					(* END_IF *)
#1107		
#1108		
#1109					(* IF TestRunActive_1 *)
#1110					LD		TestRunActive_1	{LNXT:307|-1|-1}
(*) UNDEF
A18057F4  F8DF 7110		ldr r7, [pc, #+272] ; 0xA1A0005E
A18057F8  7838     		ldrb r0, [r7]

#1111					JMPCN	$label87	{LNXT:307|308|398}
(-) BOOL
A18057FA  2800     		cmp r0, #0
A18057FC  F000 809C		beq #312 ; 0xA1805938


#1112		
#1113					(* THEN *)
#1114		
#1115		
#1116						(* IF TestRunRunning_1 *)
#1117						LD		TestRunRunning_1	{LNXT:308|-1|-1}
(*) UNDEF
A1805800  F8DF 70FC		ldr r7, [pc, #+252] ; 0xA1A00059
A1805804  7838     		ldrb r0, [r7]

#1118						NOT	{LNXT:308|-1|-1}
(*) BOOL
A1805806  2800     		cmp r0, #0
A1805808  BF08 2001		eqmov r0, #1
A180580C  BF18 2000		nemov r0, #0

#1119						JMPCN	$label88	{LNXT:308|309|312}
(-) BOOL
A1805810  2800     		cmp r0, #0
A1805812  D004     		beq #8 ; 0xA180581E


#1120		
#1121						(* THEN *)
#1122		
#1123							(* TestRunRunning_1 := TRUE; *)
#1124							MOVE		TRUE,TestRunRunning_1	{LNXT:309|312|-1}
(*) BOOL
A1805816  2001     		mov r0, #1 ; 1
A1805818  F8DF 70E4		ldr r7, [pc, #+228] ; 0xA1A00059
A180581C  7038     		strb r0, [r7]

#1125		
#1126		$label88:
#1127						(* END_IF *)
#1128		
#1129		
#1130						(* IF TestRunRunning_1 AND Tank_Level < Level_2 And  Avto_A *)
#1131						LD		Tank_Level	{LNXT:312|-1|-1}
(*) UNDEF
A180581E  F85F 7794		ldr r7, [pc, #-1940] ; 0xA1A00012
A1805822  F9B7 0000		ldrsh r0, [r7]

#1132						LT		Level_2	{LNXT:312|-1|-1}
(*) INT
A1805826  F85F 77F8		ldr r7, [pc, #-2040] ; 0xA0003F08
A180582A  F9B7 7000		ldrsh r7, [r7]
A180582E  42B8     		cmp r0, r7
A1805830  BFA8 2000		gemov r0, #0
A1805834  BFB8 2001		ltmov r0, #1

#1133						AND		TestRunRunning_1	{LNXT:312|-1|-1}
(*) BOOL
A1805838  F8DF 70C4		ldr r7, [pc, #+196] ; 0xA1A00059
A180583C  783F     		ldrb r7, [r7]
A180583E  4038     		and r0, r0, r7

#1134						AND		Avto_A	{LNXT:312|-1|-1}
(*) BOOL
A1805840  F85F 778C		ldr r7, [pc, #-1932] ; 0xA1A0002F
A1805844  783F     		ldrb r7, [r7]
A1805846  4038     		and r0, r0, r7

#1135						JMPCN	$label89	{LNXT:312|313|398}
(-) BOOL
A1805848  2800     		cmp r0, #0
A180584A  D075     		beq #234 ; 0xA1805938


#1136		
#1137						(* THEN *)
#1138		
#1139							(* PumpRunTimer_1 *)
#1140							LD		TestRunActive_1	{LNXT:313|-1|-1}
(*) UNDEF
A180584E  F8DF 70B8		ldr r7, [pc, #+184] ; 0xA1A0005E
A1805852  7838     		ldrb r0, [r7]

#1141							AND		TestRunRunning_1	{LNXT:313|-1|-1}
(*) BOOL
A1805854  F8DF 70A8		ldr r7, [pc, #+168] ; 0xA1A00059
A1805858  783F     		ldrb r7, [r7]
A180585A  4038     		and r0, r0, r7

#1142							ST		PumpRunTimer_1.IN	{LNXT:313|-1|-1}
(*) BOOL
A180585C  F8DF 70C0		ldr r7, [pc, #+192] ; 0xA1A00078
A1805860  7038     		strb r0, [r7]

#1143							MOVE		5000,PumpRunTimer_1.PT	{LNXT:313|-1|-1}
(*) BOOL
A1805862  F8DF 70C8		ldr r7, [pc, #+200] ; 0x1388
A1805866  4638     		mov r0, r7
A1805868  F8DF 70B8		ldr r7, [pc, #+184] ; 0xA1A0007C
A180586C  6038     		str r0, [r7]

#1144							CAL		PumpRunTimer_1	{LNXT:313|314|-1}
(*) UDINT
A180586E  E92D 0021		stmdb sp!, { r0, r5 }
A1805872  F8DF 50A8		ldr r5, [pc, #+168] ; 0xA1A00074
A1805876  F85F 47F4		ldr r4, [pc, #-2036] ; 0xA1804550
A180587A  F044 0401		orr r4, r4, #1
A180587E  47A0     		blx r4
A1805880  E8BD 0021		ldmia sp!, { r0, r5 }

#1145		
#1146		
#1147							(* IF PumpRunTimer_1.Q *)
#1148							LD		PumpRunTimer_1.Q	{LNXT:314|-1|-1}
(*) UNDEF
A1805884  F8DF 70A0		ldr r7, [pc, #+160] ; 0xA1A00080
A1805888  7838     		ldrb r0, [r7]

#1149							NOT	{LNXT:314|-1|-1}
(*) BOOL
A180588A  2800     		cmp r0, #0
A180588C  BF08 2001		eqmov r0, #1
A1805890  BF18 2000		nemov r0, #0

#1150							JMPCN	$label90	{LNXT:314|315|317}
(-) BOOL
A1805894  2800     		cmp r0, #0
A1805896  D006     		beq #12 ; 0xA18058A6


#1151		
#1152							(* THEN *)
#1153		
#1154								(* Motor_A := TRUE; *)
#1155								MOVE		TRUE,Motor_A	{LNXT:315|398|-1}
(*) BOOL
A180589A  2001     		mov r0, #1 ; 1
A180589C  F85F 77B4		ldr r7, [pc, #-1972] ; 0x100004AC
A18058A0  7038     		strb r0, [r7]

#1156								JMP		$label91	{LNXT:314|315|317}
(-) BOOL
A18058A2  E049     		b #146 ; 0xA1805938


#1157		$label90:
#1158		
#1159							(* ELSE *)
#1160		
#1161								(* Motor_A := FALSE; *)
#1162								MOVE		FALSE,Motor_A	{LNXT:317|318|-1}
(*) BOOL
A18058A6  2000     		mov r0, #0 ; 0
A18058A8  F85F 77C0		ldr r7, [pc, #-1984] ; 0x100004AC
A18058AC  7038     		strb r0, [r7]

#1163		
#1164								(* TestRunRunning_1 := FALSE; *)
#1165								MOVE		FALSE,TestRunRunning_1	{LNXT:318|319|-1}
(*) BOOL
A18058AE  2000     		mov r0, #0 ; 0
A18058B0  F8DF 704C		ldr r7, [pc, #+76] ; 0xA1A00059
A18058B4  7038     		strb r0, [r7]

#1166		
#1167								(* TestRunActive_1 := FALSE; *)
#1168								MOVE		FALSE,TestRunActive_1	{LNXT:319|320|-1}
(*) BOOL
A18058B6  2000     		mov r0, #0 ; 0
A18058B8  F8DF 704C		ldr r7, [pc, #+76] ; 0xA1A0005E
A18058BC  7038     		strb r0, [r7]

#1169		
#1170								(* PumpRunTimer_1 *)
#1171								MOVE		FALSE,PumpRunTimer_1.IN	{LNXT:320|-1|-1}
(*) BOOL
A18058BE  2000     		mov r0, #0 ; 0
A18058C0  F8DF 705C		ldr r7, [pc, #+92] ; 0xA1A00078
A18058C4  7038     		strb r0, [r7]

#1172								MOVE		5000,PumpRunTimer_1.PT	{LNXT:320|-1|-1}
(*) BOOL
A18058C6  F8DF 7064		ldr r7, [pc, #+100] ; 0x1388
A18058CA  4638     		mov r0, r7
A18058CC  F8DF 7054		ldr r7, [pc, #+84] ; 0xA1A0007C
A18058D0  6038     		str r0, [r7]

#1173								CAL		PumpRunTimer_1	{LNXT:320|321|-1}
(*) UDINT
A18058D2  E92D 0021		stmdb sp!, { r0, r5 }
A18058D6  F8DF 5044		ldr r5, [pc, #+68] ; 0xA1A00074
A18058DA  F85F 4858		ldr r4, [pc, #-2136] ; 0xA1804550
A18058DE  F044 0401		orr r4, r4, #1
A18058E2  47A0     		blx r4
A18058E4  E8BD 0021		ldmia sp!, { r0, r5 }

#1174		
#1175								(* CurrentPump := ((CurrentPump) MOD 3) + 1; *)
#1176								LD		CurrentPump	{LNXT:321|398|-1}
(*) UNDEF
A18058E8  F8DF 7018		ldr r7, [pc, #+24] ; 0xA1A0005C
A18058EC  F9B7 0000		ldrsh r0, [r7]

#1177								MOD		3	{LNXT:321|398|-1}
(*) INT
A18058F0  2103     		mov r1, #3 ; 3
A18058F2  F85F 4874		ldr r4, [pc, #-2164] ; 0xA1804500
A18058F6  F044 0401		orr r4, r4, #1
A18058FA  47A0     		blx r4

A18058FC  E018     		b #48

A1805900  A1A00059		; 0xA1A00059
A1805904  A1A0005C		; 0xA1A0005C
A1805908  A1A0005E		; 0xA1A0005E
A180590C  A1A00060		; 0xA1A00060
A1805910  A1A00064		; 0xA1A00064
A1805914  A1A00068		; 0xA1A00068
A1805918  A1A0006C		; 0xA1A0006C
A180591C  A1A00074		; 0xA1A00074
A1805920  A1A00078		; 0xA1A00078
A1805924  A1A0007C		; 0xA1A0007C
A1805928  A1A00080		; 0xA1A00080
A180592C  00001388		; 0x00001388

#1178								ADD		1	{LNXT:321|398|-1}
(-) INT
A1805930  1C40     		add r0, r0, #1

#1179								ST		CurrentPump	{LNXT:321|398|-1}
(*) INT
A1805932  F85F 7030		ldr r7, [pc, #-48] ; 0xA1A0005C
A1805936  8038     		strh r0, [r7]

#1180		
#1181		$label91:
#1182							(* END_IF *)
#1183		
#1184		$label89:
#1185						(* END_IF *)
#1186		
#1187		$label87:
#1188					(* END_IF *)
#1189					JMP		$label79	{LNXT:1|398|-1}
(-) INT
A1805938  E20E     		b #1052 ; 0xA1805D58


#1190		
#1191		$label81:
#1192		
#1193					(* IF Tank_Level >= Level_1 AND Priority = 1 *)
#1194					LD		Priority	{LNXT:327|-1|-1}
(*) UNDEF
A180593C  F85F 7908		ldr r7, [pc, #-2312] ; 0xA0003F0C
A1805940  F9B7 0000		ldrsh r0, [r7]

#1195					EQ		1	{LNXT:327|-1|-1}
(*) INT
A1805944  2801     		cmp r0, #1
A1805946  BF18 2000		nemov r0, #0
A180594A  BF08 2001		eqmov r0, #1

#1196					AND(		Tank_Level	{LNXT:327|-1|-1}
(*) BOOL
A180594E  B082     		sub sp, sp, #8
A1805950  F8CD 0000		str r0, [sp]
A1805954  F85F 78CC		ldr r7, [pc, #-2252] ; 0xA1A00012
A1805958  F9B7 0000		ldrsh r0, [r7]

#1197					GE		Level_1	{LNXT:327|-1|-1}
(*) INT
A180595C  F85F 7934		ldr r7, [pc, #-2356] ; 0xA0003F06
A1805960  F9B7 7000		ldrsh r7, [r7]
A1805964  42B8     		cmp r0, r7
A1805966  BFB8 2000		ltmov r0, #0
A180596A  BFA8 2001		gemov r0, #1

#1198					)	{LNXT:327|-1|-1}
(*) BOOL
A180596E  4607     		mov r7, r0
A1805970  F8DD 0000		ldr r0, [sp]
A1805974  B002     		add sp, sp, #8
A1805976  4038     		and r0, r0, r7

#1199					JMPCN	$label92	{LNXT:327|328|331}
(-) BOOL
A1805978  2800     		cmp r0, #0
A180597A  D014     		beq #40 ; 0xA18059A6


#1200		
#1201					(* THEN *)
#1202		
#1203						(* CurrentPump := ((CurrentPump) MOD 3) + 1; *)
#1204						LD		CurrentPump	{LNXT:328|329|-1}
(*) UNDEF
A180597E  F85F 707C		ldr r7, [pc, #-124] ; 0xA1A0005C
A1805982  F9B7 0000		ldrsh r0, [r7]

#1205						MOD		3	{LNXT:328|329|-1}
(*) INT
A1805986  2103     		mov r1, #3 ; 3
A1805988  F85F 490C		ldr r4, [pc, #-2316] ; 0xA1804500
A180598C  F044 0401		orr r4, r4, #1
A1805990  47A0     		blx r4

#1206						ADD		1	{LNXT:328|329|-1}
(-) INT
A1805992  1C40     		add r0, r0, #1

#1207						ST		CurrentPump	{LNXT:328|329|-1}
(*) INT
A1805994  F85F 7094		ldr r7, [pc, #-148] ; 0xA1A0005C
A1805998  8038     		strh r0, [r7]

#1208		
#1209						(* Motor_B := TRUE; *)
#1210						MOVE		TRUE,Motor_B	{LNXT:329|339|-1}
(*) INT
A180599A  2001     		mov r0, #1 ; 1
A180599C  F85F 78B0		ldr r7, [pc, #-2224] ; 0x100004AD
A18059A0  7038     		strb r0, [r7]

#1211						JMP		$label93	{LNXT:327|328|331}
(-) BOOL
A18059A2  E049     		b #146 ; 0xA1805A38


#1212		$label92:
#1213		
#1214					(* ELSE *)
#1215		
#1216		
#1217						(* IF TestRunActive_2 AND NOT TestRunRunning_2 *)
#1218						LD		TestRunRunning_2	{LNXT:331|-1|-1}
(*) UNDEF
A18059A6  F8DF 762C		ldr r7, [pc, #+1580] ; 0xA1A0005F
A18059AA  7838     		ldrb r0, [r7]

#1219						NOT	{LNXT:331|-1|-1}
(*) BOOL
A18059AC  2800     		cmp r0, #0
A18059AE  BF08 2001		eqmov r0, #1
A18059B2  BF18 2000		nemov r0, #0

#1220						AND(		TestRunActive_2	{LNXT:331|-1|-1}
(*) BOOL
A18059B6  B082     		sub sp, sp, #8
A18059B8  F8CD 0000		str r0, [sp]
A18059BC  F8DF 7618		ldr r7, [pc, #+1560] ; 0xA1A00088
A18059C0  7838     		ldrb r0, [r7]

#1221						NOT	{LNXT:331|-1|-1}
(*) BOOL
A18059C2  2800     		cmp r0, #0
A18059C4  BF08 2001		eqmov r0, #1
A18059C8  BF18 2000		nemov r0, #0

#1222						)	{LNXT:331|-1|-1}
(*) BOOL
A18059CC  4607     		mov r7, r0
A18059CE  F8DD 0000		ldr r0, [sp]
A18059D2  B002     		add sp, sp, #8
A18059D4  4038     		and r0, r0, r7

#1223						JMPCN	$label94	{LNXT:331|332|339}
(-) BOOL
A18059D6  2800     		cmp r0, #0
A18059D8  D02E     		beq #92 ; 0xA1805A38


#1224		
#1225						(* THEN *)
#1226		
#1227							(* PumpIntervalTimer_2 *)
#1228							MOVE		TRUE,PumpIntervalTimer_2.IN	{LNXT:332|-1|-1}
(*) BOOL
A18059DC  2001     		mov r0, #1 ; 1
A18059DE  F8DF 7608		ldr r7, [pc, #+1544] ; 0xA1A00090
A18059E2  7038     		strb r0, [r7]

#1229							MOVE		6000,PumpIntervalTimer_2.PT	{LNXT:332|-1|-1}
(*) BOOL
A18059E4  F8DF 763C		ldr r7, [pc, #+1596] ; 0x1770
A18059E8  4638     		mov r0, r7
A18059EA  F8DF 7600		ldr r7, [pc, #+1536] ; 0xA1A00094
A18059EE  6038     		str r0, [r7]

#1230							CAL		PumpIntervalTimer_2	{LNXT:332|333|-1}
(*) UDINT
A18059F0  E92D 0021		stmdb sp!, { r0, r5 }
A18059F4  F8DF 55EC		ldr r5, [pc, #+1516] ; 0xA1A0008C
A18059F8  F85F 4978		ldr r4, [pc, #-2424] ; 0xA1804550
A18059FC  F044 0401		orr r4, r4, #1
A1805A00  47A0     		blx r4
A1805A02  E8BD 0021		ldmia sp!, { r0, r5 }

#1231		
#1232		
#1233							(* IF PumpIntervalTimer_2.Q *)
#1234							LD		PumpIntervalTimer_2.Q	{LNXT:333|-1|-1}
(*) UNDEF
A1805A06  F8DF 75E8		ldr r7, [pc, #+1512] ; 0xA1A00098
A1805A0A  7838     		ldrb r0, [r7]

#1235							JMPCN	$label95	{LNXT:333|334|339}
(-) BOOL
A1805A0C  2800     		cmp r0, #0
A1805A0E  D013     		beq #38 ; 0xA1805A38


#1236		
#1237							(* THEN *)
#1238		
#1239								(* TestRunActive_2 := TRUE; *)
#1240								MOVE		TRUE,TestRunActive_2	{LNXT:334|335|-1}
(*) BOOL
A1805A12  2001     		mov r0, #1 ; 1
A1805A14  F8DF 75C0		ldr r7, [pc, #+1472] ; 0xA1A00088
A1805A18  7038     		strb r0, [r7]

#1241		
#1242								(* PumpIntervalTimer_2 *)
#1243								MOVE		FALSE,PumpIntervalTimer_2.IN	{LNXT:335|-1|-1}
(*) BOOL
A1805A1A  2000     		mov r0, #0 ; 0
A1805A1C  F8DF 75C8		ldr r7, [pc, #+1480] ; 0xA1A00090
A1805A20  7038     		strb r0, [r7]

#1244								CAL		PumpIntervalTimer_2	{LNXT:335|339|-1}
(*) BOOL
A1805A22  E92D 0021		stmdb sp!, { r0, r5 }
A1805A26  F8DF 55BC		ldr r5, [pc, #+1468] ; 0xA1A0008C
A1805A2A  F85F 49A8		ldr r4, [pc, #-2472] ; 0xA1804550
A1805A2E  F044 0401		orr r4, r4, #1
A1805A32  47A0     		blx r4
A1805A34  E8BD 0021		ldmia sp!, { r0, r5 }

#1245		
#1246		$label95:
#1247							(* END_IF *)
#1248		
#1249		$label94:
#1250						(* END_IF *)
#1251		
#1252		$label93:
#1253					(* END_IF *)
#1254		
#1255		
#1256					(* IF TestRunActive_2 *)
#1257					LD		TestRunActive_2	{LNXT:339|-1|-1}
(*) UNDEF
A1805A38  F8DF 759C		ldr r7, [pc, #+1436] ; 0xA1A00088
A1805A3C  7838     		ldrb r0, [r7]

#1258					JMPCN	$label96	{LNXT:339|340|398}
(-) BOOL
A1805A3E  2800     		cmp r0, #0
A1805A40  F000 8082		beq #260 ; 0xA1805B48


#1259		
#1260					(* THEN *)
#1261		
#1262		
#1263						(* IF TestRunRunning_2 *)
#1264						LD		TestRunRunning_2	{LNXT:340|-1|-1}
(*) UNDEF
A1805A44  F8DF 758C		ldr r7, [pc, #+1420] ; 0xA1A0005F
A1805A48  7838     		ldrb r0, [r7]

#1265						NOT	{LNXT:340|-1|-1}
(*) BOOL
A1805A4A  2800     		cmp r0, #0
A1805A4C  BF08 2001		eqmov r0, #1
A1805A50  BF18 2000		nemov r0, #0

#1266						JMPCN	$label97	{LNXT:340|341|343}
(-) BOOL
A1805A54  2800     		cmp r0, #0
A1805A56  D004     		beq #8 ; 0xA1805A62


#1267		
#1268						(* THEN *)
#1269		
#1270							(* TestRunRunning_2 := TRUE; *)
#1271							MOVE		TRUE,TestRunRunning_2	{LNXT:341|343|-1}
(*) BOOL
A1805A5A  2001     		mov r0, #1 ; 1
A1805A5C  F8DF 7574		ldr r7, [pc, #+1396] ; 0xA1A0005F
A1805A60  7038     		strb r0, [r7]

#1272		
#1273		$label97:
#1274						(* END_IF *)
#1275		
#1276		
#1277						(* IF TestRunRunning_2 AND Tank_Level < Level_2 And  Avto_B *)
#1278						LD		Tank_Level	{LNXT:343|-1|-1}
(*) UNDEF
A1805A62  F85F 79D8		ldr r7, [pc, #-2520] ; 0xA1A00012
A1805A66  F9B7 0000		ldrsh r0, [r7]

#1279						LT		Level_2	{LNXT:343|-1|-1}
(*) INT
A1805A6A  F85F 7A3C		ldr r7, [pc, #-2620] ; 0xA0003F08
A1805A6E  F9B7 7000		ldrsh r7, [r7]
A1805A72  42B8     		cmp r0, r7
A1805A74  BFA8 2000		gemov r0, #0
A1805A78  BFB8 2001		ltmov r0, #1

#1280						AND		TestRunRunning_2	{LNXT:343|-1|-1}
(*) BOOL
A1805A7C  F8DF 7554		ldr r7, [pc, #+1364] ; 0xA1A0005F
A1805A80  783F     		ldrb r7, [r7]
A1805A82  4038     		and r0, r0, r7

#1281						AND		Avto_B	{LNXT:343|-1|-1}
(*) BOOL
A1805A84  F85F 79DC		ldr r7, [pc, #-2524] ; 0xA1A0002C
A1805A88  783F     		ldrb r7, [r7]
A1805A8A  4038     		and r0, r0, r7

#1282						JMPCN	$label98	{LNXT:343|344|398}
(-) BOOL
A1805A8C  2800     		cmp r0, #0
A1805A8E  D05B     		beq #182 ; 0xA1805B48


#1283		
#1284						(* THEN *)
#1285		
#1286							(* PumpRunTimer_2 *)
#1287							LD		TestRunActive_2	{LNXT:344|-1|-1}
(*) UNDEF
A1805A92  F8DF 7544		ldr r7, [pc, #+1348] ; 0xA1A00088
A1805A96  7838     		ldrb r0, [r7]

#1288							AND		TestRunRunning_2	{LNXT:344|-1|-1}
(*) BOOL
A1805A98  F8DF 7538		ldr r7, [pc, #+1336] ; 0xA1A0005F
A1805A9C  783F     		ldrb r7, [r7]
A1805A9E  4038     		and r0, r0, r7

#1289							ST		PumpRunTimer_2.IN	{LNXT:344|-1|-1}
(*) BOOL
A1805AA0  F8DF 7554		ldr r7, [pc, #+1364] ; 0xA1A000A4
A1805AA4  7038     		strb r0, [r7]

#1290							MOVE		6000,PumpRunTimer_2.PT	{LNXT:344|-1|-1}
(*) BOOL
A1805AA6  F8DF 757C		ldr r7, [pc, #+1404] ; 0x1770
A1805AAA  4638     		mov r0, r7
A1805AAC  F8DF 754C		ldr r7, [pc, #+1356] ; 0xA1A000A8
A1805AB0  6038     		str r0, [r7]

#1291							CAL		PumpRunTimer_2	{LNXT:344|345|-1}
(*) UDINT
A1805AB2  E92D 0021		stmdb sp!, { r0, r5 }
A1805AB6  F8DF 553C		ldr r5, [pc, #+1340] ; 0xA1A000A0
A1805ABA  F85F 4A38		ldr r4, [pc, #-2616] ; 0xA1804550
A1805ABE  F044 0401		orr r4, r4, #1
A1805AC2  47A0     		blx r4
A1805AC4  E8BD 0021		ldmia sp!, { r0, r5 }

#1292		
#1293		
#1294							(* IF PumpRunTimer_2.Q *)
#1295							LD		PumpRunTimer_2.Q	{LNXT:345|-1|-1}
(*) UNDEF
A1805AC8  F8DF 7534		ldr r7, [pc, #+1332] ; 0xA1A000AC
A1805ACC  7838     		ldrb r0, [r7]

#1296							NOT	{LNXT:345|-1|-1}
(*) BOOL
A1805ACE  2800     		cmp r0, #0
A1805AD0  BF08 2001		eqmov r0, #1
A1805AD4  BF18 2000		nemov r0, #0

#1297							JMPCN	$label99	{LNXT:345|346|348}
(-) BOOL
A1805AD8  2800     		cmp r0, #0
A1805ADA  D006     		beq #12 ; 0xA1805AEA


#1298		
#1299							(* THEN *)
#1300		
#1301								(* Motor_B := TRUE; *)
#1302								MOVE		TRUE,Motor_B	{LNXT:346|398|-1}
(*) BOOL
A1805ADE  2001     		mov r0, #1 ; 1
A1805AE0  F85F 79F4		ldr r7, [pc, #-2548] ; 0x100004AD
A1805AE4  7038     		strb r0, [r7]

#1303								JMP		$label100	{LNXT:345|346|348}
(-) BOOL
A1805AE6  E02F     		b #94 ; 0xA1805B48


#1304		$label99:
#1305		
#1306							(* ELSE *)
#1307		
#1308								(* Motor_B := FALSE; *)
#1309								MOVE		FALSE,Motor_B	{LNXT:348|349|-1}
(*) BOOL
A1805AEA  2000     		mov r0, #0 ; 0
A1805AEC  F85F 7A00		ldr r7, [pc, #-2560] ; 0x100004AD
A1805AF0  7038     		strb r0, [r7]

#1310		
#1311								(* TestRunRunning_2 := FALSE; *)
#1312								MOVE		FALSE,TestRunRunning_2	{LNXT:349|350|-1}
(*) BOOL
A1805AF2  2000     		mov r0, #0 ; 0
A1805AF4  F8DF 74DC		ldr r7, [pc, #+1244] ; 0xA1A0005F
A1805AF8  7038     		strb r0, [r7]

#1313		
#1314								(* TestRunActive_2 := FALSE; *)
#1315								MOVE		FALSE,TestRunActive_2	{LNXT:350|351|-1}
(*) BOOL
A1805AFA  2000     		mov r0, #0 ; 0
A1805AFC  F8DF 74D8		ldr r7, [pc, #+1240] ; 0xA1A00088
A1805B00  7038     		strb r0, [r7]

#1316		
#1317								(* PumpRunTimer_2 *)
#1318								MOVE		FALSE,PumpRunTimer_2.IN	{LNXT:351|-1|-1}
(*) BOOL
A1805B02  2000     		mov r0, #0 ; 0
A1805B04  F8DF 74F0		ldr r7, [pc, #+1264] ; 0xA1A000A4
A1805B08  7038     		strb r0, [r7]

#1319								MOVE		6000,PumpRunTimer_2.PT	{LNXT:351|-1|-1}
(*) BOOL
A1805B0A  F8DF 7518		ldr r7, [pc, #+1304] ; 0x1770
A1805B0E  4638     		mov r0, r7
A1805B10  F8DF 74E8		ldr r7, [pc, #+1256] ; 0xA1A000A8
A1805B14  6038     		str r0, [r7]

#1320								CAL		PumpRunTimer_2	{LNXT:351|352|-1}
(*) UDINT
A1805B16  E92D 0021		stmdb sp!, { r0, r5 }
A1805B1A  F8DF 54D8		ldr r5, [pc, #+1240] ; 0xA1A000A0
A1805B1E  F85F 4A9C		ldr r4, [pc, #-2716] ; 0xA1804550
A1805B22  F044 0401		orr r4, r4, #1
A1805B26  47A0     		blx r4
A1805B28  E8BD 0021		ldmia sp!, { r0, r5 }

#1321		
#1322								(* CurrentPump := ((CurrentPump) MOD 3) + 1; *)
#1323								LD		CurrentPump	{LNXT:352|398|-1}
(*) UNDEF
A1805B2C  F85F 722C		ldr r7, [pc, #-556] ; 0xA1A0005C
A1805B30  F9B7 0000		ldrsh r0, [r7]

#1324								MOD		3	{LNXT:352|398|-1}
(*) INT
A1805B34  2103     		mov r1, #3 ; 3
A1805B36  F85F 4AB8		ldr r4, [pc, #-2744] ; 0xA1804500
A1805B3A  F044 0401		orr r4, r4, #1
A1805B3E  47A0     		blx r4

#1325								ADD		1	{LNXT:352|398|-1}
(-) INT
A1805B40  1C40     		add r0, r0, #1

#1326								ST		CurrentPump	{LNXT:352|398|-1}
(*) INT
A1805B42  F85F 7240		ldr r7, [pc, #-576] ; 0xA1A0005C
A1805B46  8038     		strh r0, [r7]

#1327		
#1328		$label100:
#1329							(* END_IF *)
#1330		
#1331		$label98:
#1332						(* END_IF *)
#1333		
#1334		$label96:
#1335					(* END_IF *)
#1336					JMP		$label79	{LNXT:1|398|-1}
(-) INT
A1805B48  E106     		b #524 ; 0xA1805D58


#1337		
#1338		$label82:
#1339		
#1340					(* IF Tank_Level >= Level_1 AND Priority = 2 *)
#1341					LD		Priority	{LNXT:358|-1|-1}
(*) UNDEF
A1805B4C  F85F 7B18		ldr r7, [pc, #-2840] ; 0xA0003F0C
A1805B50  F9B7 0000		ldrsh r0, [r7]

#1342					EQ		2	{LNXT:358|-1|-1}
(*) INT
A1805B54  2802     		cmp r0, #2
A1805B56  BF18 2000		nemov r0, #0
A1805B5A  BF08 2001		eqmov r0, #1

#1343					AND(		Tank_Level	{LNXT:358|-1|-1}
(*) BOOL
A1805B5E  B082     		sub sp, sp, #8
A1805B60  F8CD 0000		str r0, [sp]
A1805B64  F85F 7ADC		ldr r7, [pc, #-2780] ; 0xA1A00012
A1805B68  F9B7 0000		ldrsh r0, [r7]

#1344					GE		Level_1	{LNXT:358|-1|-1}
(*) INT
A1805B6C  F85F 7B44		ldr r7, [pc, #-2884] ; 0xA0003F06
A1805B70  F9B7 7000		ldrsh r7, [r7]
A1805B74  42B8     		cmp r0, r7
A1805B76  BFB8 2000		ltmov r0, #0
A1805B7A  BFA8 2001		gemov r0, #1

#1345					)	{LNXT:358|-1|-1}
(*) BOOL
A1805B7E  4607     		mov r7, r0
A1805B80  F8DD 0000		ldr r0, [sp]
A1805B84  B002     		add sp, sp, #8
A1805B86  4038     		and r0, r0, r7

#1346					JMPCN	$label101	{LNXT:358|359|362}
(-) BOOL
A1805B88  2800     		cmp r0, #0
A1805B8A  D014     		beq #40 ; 0xA1805BB6


#1347		
#1348					(* THEN *)
#1349		
#1350						(* CurrentPump := ((CurrentPump) MOD 3) + 1; *)
#1351						LD		CurrentPump	{LNXT:359|360|-1}
(*) UNDEF
A1805B8E  F85F 728C		ldr r7, [pc, #-652] ; 0xA1A0005C
A1805B92  F9B7 0000		ldrsh r0, [r7]

#1352						MOD		3	{LNXT:359|360|-1}
(*) INT
A1805B96  2103     		mov r1, #3 ; 3
A1805B98  F85F 4B1C		ldr r4, [pc, #-2844] ; 0xA1804500
A1805B9C  F044 0401		orr r4, r4, #1
A1805BA0  47A0     		blx r4

#1353						ADD		1	{LNXT:359|360|-1}
(-) INT
A1805BA2  1C40     		add r0, r0, #1

#1354						ST		CurrentPump	{LNXT:359|360|-1}
(*) INT
A1805BA4  F85F 72A4		ldr r7, [pc, #-676] ; 0xA1A0005C
A1805BA8  8038     		strh r0, [r7]

#1355		
#1356						(* Motor_C := TRUE; *)
#1357						MOVE		TRUE,Motor_C	{LNXT:360|370|-1}
(*) INT
A1805BAA  2001     		mov r0, #1 ; 1
A1805BAC  F85F 7ABC		ldr r7, [pc, #-2748] ; 0x100004AE
A1805BB0  7038     		strb r0, [r7]

#1358						JMP		$label102	{LNXT:358|359|362}
(-) BOOL
A1805BB2  E049     		b #146 ; 0xA1805C48


#1359		$label101:
#1360		
#1361					(* ELSE *)
#1362		
#1363		
#1364						(* IF TestRunActive_3 AND NOT TestRunRunning_3 *)
#1365						LD		TestRunRunning_3	{LNXT:362|-1|-1}
(*) UNDEF
A1805BB6  F8DF 7424		ldr r7, [pc, #+1060] ; 0xA1A00089
A1805BBA  7838     		ldrb r0, [r7]

#1366						NOT	{LNXT:362|-1|-1}
(*) BOOL
A1805BBC  2800     		cmp r0, #0
A1805BBE  BF08 2001		eqmov r0, #1
A1805BC2  BF18 2000		nemov r0, #0

#1367						AND(		TestRunActive_3	{LNXT:362|-1|-1}
(*) BOOL
A1805BC6  B082     		sub sp, sp, #8
A1805BC8  F8CD 0000		str r0, [sp]
A1805BCC  F8DF 7410		ldr r7, [pc, #+1040] ; 0xA1A0008B
A1805BD0  7838     		ldrb r0, [r7]

#1368						NOT	{LNXT:362|-1|-1}
(*) BOOL
A1805BD2  2800     		cmp r0, #0
A1805BD4  BF08 2001		eqmov r0, #1
A1805BD8  BF18 2000		nemov r0, #0

#1369						)	{LNXT:362|-1|-1}
(*) BOOL
A1805BDC  4607     		mov r7, r0
A1805BDE  F8DD 0000		ldr r0, [sp]
A1805BE2  B002     		add sp, sp, #8
A1805BE4  4038     		and r0, r0, r7

#1370						JMPCN	$label103	{LNXT:362|363|370}
(-) BOOL
A1805BE6  2800     		cmp r0, #0
A1805BE8  D02E     		beq #92 ; 0xA1805C48


#1371		
#1372						(* THEN *)
#1373		
#1374							(* PumpIntervalTimer_3 *)
#1375							MOVE		TRUE,PumpIntervalTimer_3.IN	{LNXT:363|-1|-1}
(*) BOOL
A1805BEC  2001     		mov r0, #1 ; 1
A1805BEE  F8DF 7418		ldr r7, [pc, #+1048] ; 0xA1A000B8
A1805BF2  7038     		strb r0, [r7]

#1376							MOVE		7000,PumpIntervalTimer_3.PT	{LNXT:363|-1|-1}
(*) BOOL
A1805BF4  F8DF 7430		ldr r7, [pc, #+1072] ; 0x1B58
A1805BF8  4638     		mov r0, r7
A1805BFA  F8DF 7410		ldr r7, [pc, #+1040] ; 0xA1A000BC
A1805BFE  6038     		str r0, [r7]

#1377							CAL		PumpIntervalTimer_3	{LNXT:363|364|-1}
(*) UDINT
A1805C00  E92D 0021		stmdb sp!, { r0, r5 }
A1805C04  F8DF 53FC		ldr r5, [pc, #+1020] ; 0xA1A000B4
A1805C08  F85F 4B88		ldr r4, [pc, #-2952] ; 0xA1804550
A1805C0C  F044 0401		orr r4, r4, #1
A1805C10  47A0     		blx r4
A1805C12  E8BD 0021		ldmia sp!, { r0, r5 }

#1378		
#1379		
#1380							(* IF PumpIntervalTimer_3.Q *)
#1381							LD		PumpIntervalTimer_3.Q	{LNXT:364|-1|-1}
(*) UNDEF
A1805C16  F8DF 73F8		ldr r7, [pc, #+1016] ; 0xA1A000C0
A1805C1A  7838     		ldrb r0, [r7]

#1382							JMPCN	$label104	{LNXT:364|365|370}
(-) BOOL
A1805C1C  2800     		cmp r0, #0
A1805C1E  D013     		beq #38 ; 0xA1805C48


#1383		
#1384							(* THEN *)
#1385		
#1386								(* TestRunActive_3 := TRUE; *)
#1387								MOVE		TRUE,TestRunActive_3	{LNXT:365|366|-1}
(*) BOOL
A1805C22  2001     		mov r0, #1 ; 1
A1805C24  F8DF 73B8		ldr r7, [pc, #+952] ; 0xA1A0008B
A1805C28  7038     		strb r0, [r7]

#1388		
#1389								(* PumpIntervalTimer_3 *)
#1390								MOVE		FALSE,PumpIntervalTimer_3.IN	{LNXT:366|-1|-1}
(*) BOOL
A1805C2A  2000     		mov r0, #0 ; 0
A1805C2C  F8DF 73D8		ldr r7, [pc, #+984] ; 0xA1A000B8
A1805C30  7038     		strb r0, [r7]

#1391								CAL		PumpIntervalTimer_3	{LNXT:366|370|-1}
(*) BOOL
A1805C32  E92D 0021		stmdb sp!, { r0, r5 }
A1805C36  F8DF 53CC		ldr r5, [pc, #+972] ; 0xA1A000B4
A1805C3A  F85F 4BB8		ldr r4, [pc, #-3000] ; 0xA1804550
A1805C3E  F044 0401		orr r4, r4, #1
A1805C42  47A0     		blx r4
A1805C44  E8BD 0021		ldmia sp!, { r0, r5 }

#1392		
#1393		$label104:
#1394							(* END_IF *)
#1395		
#1396		$label103:
#1397						(* END_IF *)
#1398		
#1399		$label102:
#1400					(* END_IF *)
#1401		
#1402		
#1403					(* IF TestRunActive_3 *)
#1404					LD		TestRunActive_3	{LNXT:370|-1|-1}
(*) UNDEF
A1805C48  F8DF 7394		ldr r7, [pc, #+916] ; 0xA1A0008B
A1805C4C  7838     		ldrb r0, [r7]

#1405					JMPCN	$label105	{LNXT:370|371|398}
(-) BOOL
A1805C4E  2800     		cmp r0, #0
A1805C50  F000 8082		beq #260 ; 0xA1805D58


#1406		
#1407					(* THEN *)
#1408		
#1409		
#1410						(* IF TestRunRunning_3 *)
#1411						LD		TestRunRunning_3	{LNXT:371|-1|-1}
(*) UNDEF
A1805C54  F8DF 7384		ldr r7, [pc, #+900] ; 0xA1A00089
A1805C58  7838     		ldrb r0, [r7]

#1412						NOT	{LNXT:371|-1|-1}
(*) BOOL
A1805C5A  2800     		cmp r0, #0
A1805C5C  BF08 2001		eqmov r0, #1
A1805C60  BF18 2000		nemov r0, #0

#1413						JMPCN	$label106	{LNXT:371|372|374}
(-) BOOL
A1805C64  2800     		cmp r0, #0
A1805C66  D004     		beq #8 ; 0xA1805C72


#1414		
#1415						(* THEN *)
#1416		
#1417							(* TestRunRunning_3 := TRUE; *)
#1418							MOVE		TRUE,TestRunRunning_3	{LNXT:372|374|-1}
(*) BOOL
A1805C6A  2001     		mov r0, #1 ; 1
A1805C6C  F8DF 736C		ldr r7, [pc, #+876] ; 0xA1A00089
A1805C70  7038     		strb r0, [r7]

#1419		
#1420		$label106:
#1421						(* END_IF *)
#1422		
#1423		
#1424						(* IF TestRunRunning_3 AND Tank_Level < Level_2 And Avto_C *)
#1425						LD		Tank_Level	{LNXT:374|-1|-1}
(*) UNDEF
A1805C72  F85F 7BE8		ldr r7, [pc, #-3048] ; 0xA1A00012
A1805C76  F9B7 0000		ldrsh r0, [r7]

#1426						LT		Level_2	{LNXT:374|-1|-1}
(*) INT
A1805C7A  F85F 7C4C		ldr r7, [pc, #-3148] ; 0xA0003F08
A1805C7E  F9B7 7000		ldrsh r7, [r7]
A1805C82  42B8     		cmp r0, r7
A1805C84  BFA8 2000		gemov r0, #0
A1805C88  BFB8 2001		ltmov r0, #1

#1427						AND		TestRunRunning_3	{LNXT:374|-1|-1}
(*) BOOL
A1805C8C  F8DF 734C		ldr r7, [pc, #+844] ; 0xA1A00089
A1805C90  783F     		ldrb r7, [r7]
A1805C92  4038     		and r0, r0, r7

#1428						AND		Avto_C	{LNXT:374|-1|-1}
(*) BOOL
A1805C94  F85F 7BE4		ldr r7, [pc, #-3044] ; 0xA1A0002E
A1805C98  783F     		ldrb r7, [r7]
A1805C9A  4038     		and r0, r0, r7

#1429						JMPCN	$label107	{LNXT:374|375|398}
(-) BOOL
A1805C9C  2800     		cmp r0, #0
A1805C9E  D05B     		beq #182 ; 0xA1805D58


#1430		
#1431						(* THEN *)
#1432		
#1433							(* PumpRunTimer_3 *)
#1434							LD		TestRunActive_3	{LNXT:375|-1|-1}
(*) UNDEF
A1805CA2  F8DF 733C		ldr r7, [pc, #+828] ; 0xA1A0008B
A1805CA6  7838     		ldrb r0, [r7]

#1435							AND		TestRunRunning_3	{LNXT:375|-1|-1}
(*) BOOL
A1805CA8  F8DF 7330		ldr r7, [pc, #+816] ; 0xA1A00089
A1805CAC  783F     		ldrb r7, [r7]
A1805CAE  4038     		and r0, r0, r7

#1436							ST		PumpRunTimer_3.IN	{LNXT:375|-1|-1}
(*) BOOL
A1805CB0  F8DF 7364		ldr r7, [pc, #+868] ; 0xA1A000CC
A1805CB4  7038     		strb r0, [r7]

#1437							MOVE		7000,PumpRunTimer_3.PT	{LNXT:375|-1|-1}
(*) BOOL
A1805CB6  F8DF 7370		ldr r7, [pc, #+880] ; 0x1B58
A1805CBA  4638     		mov r0, r7
A1805CBC  F8DF 735C		ldr r7, [pc, #+860] ; 0xA1A000D0
A1805CC0  6038     		str r0, [r7]

#1438							CAL		PumpRunTimer_3	{LNXT:375|376|-1}
(*) UDINT
A1805CC2  E92D 0021		stmdb sp!, { r0, r5 }
A1805CC6  F8DF 534C		ldr r5, [pc, #+844] ; 0xA1A000C8
A1805CCA  F85F 4C48		ldr r4, [pc, #-3144] ; 0xA1804550
A1805CCE  F044 0401		orr r4, r4, #1
A1805CD2  47A0     		blx r4
A1805CD4  E8BD 0021		ldmia sp!, { r0, r5 }

#1439		
#1440		
#1441							(* IF PumpRunTimer_3.Q *)
#1442							LD		PumpRunTimer_3.Q	{LNXT:376|-1|-1}
(*) UNDEF
A1805CD8  F8DF 7344		ldr r7, [pc, #+836] ; 0xA1A000D4
A1805CDC  7838     		ldrb r0, [r7]

#1443							NOT	{LNXT:376|-1|-1}
(*) BOOL
A1805CDE  2800     		cmp r0, #0
A1805CE0  BF08 2001		eqmov r0, #1
A1805CE4  BF18 2000		nemov r0, #0

#1444							JMPCN	$label108	{LNXT:376|377|379}
(-) BOOL
A1805CE8  2800     		cmp r0, #0
A1805CEA  D006     		beq #12 ; 0xA1805CFA


#1445		
#1446							(* THEN *)
#1447		
#1448								(* Motor_C := TRUE; *)
#1449								MOVE		TRUE,Motor_C	{LNXT:377|398|-1}
(*) BOOL
A1805CEE  2001     		mov r0, #1 ; 1
A1805CF0  F85F 7C00		ldr r7, [pc, #-3072] ; 0x100004AE
A1805CF4  7038     		strb r0, [r7]

#1450								JMP		$label109	{LNXT:376|377|379}
(-) BOOL
A1805CF6  E02F     		b #94 ; 0xA1805D58


#1451		$label108:
#1452		
#1453							(* ELSE *)
#1454		
#1455								(* Motor_C := FALSE; *)
#1456								MOVE		FALSE,Motor_C	{LNXT:379|380|-1}
(*) BOOL
A1805CFA  2000     		mov r0, #0 ; 0
A1805CFC  F85F 7C0C		ldr r7, [pc, #-3084] ; 0x100004AE
A1805D00  7038     		strb r0, [r7]

#1457		
#1458								(* TestRunRunning_3 := FALSE; *)
#1459								MOVE		FALSE,TestRunRunning_3	{LNXT:380|381|-1}
(*) BOOL
A1805D02  2000     		mov r0, #0 ; 0
A1805D04  F8DF 72D4		ldr r7, [pc, #+724] ; 0xA1A00089
A1805D08  7038     		strb r0, [r7]

#1460		
#1461								(* TestRunActive_3 := FALSE; *)
#1462								MOVE		FALSE,TestRunActive_3	{LNXT:381|382|-1}
(*) BOOL
A1805D0A  2000     		mov r0, #0 ; 0
A1805D0C  F8DF 72D0		ldr r7, [pc, #+720] ; 0xA1A0008B
A1805D10  7038     		strb r0, [r7]

#1463		
#1464								(* PumpRunTimer_3 *)
#1465								MOVE		FALSE,PumpRunTimer_3.IN	{LNXT:382|-1|-1}
(*) BOOL
A1805D12  2000     		mov r0, #0 ; 0
A1805D14  F8DF 7300		ldr r7, [pc, #+768] ; 0xA1A000CC
A1805D18  7038     		strb r0, [r7]

#1466								MOVE		7000,PumpRunTimer_3.PT	{LNXT:382|-1|-1}
(*) BOOL
A1805D1A  F8DF 730C		ldr r7, [pc, #+780] ; 0x1B58
A1805D1E  4638     		mov r0, r7
A1805D20  F8DF 72F8		ldr r7, [pc, #+760] ; 0xA1A000D0
A1805D24  6038     		str r0, [r7]

#1467								CAL		PumpRunTimer_3	{LNXT:382|383|-1}
(*) UDINT
A1805D26  E92D 0021		stmdb sp!, { r0, r5 }
A1805D2A  F8DF 52E8		ldr r5, [pc, #+744] ; 0xA1A000C8
A1805D2E  F85F 4CAC		ldr r4, [pc, #-3244] ; 0xA1804550
A1805D32  F044 0401		orr r4, r4, #1
A1805D36  47A0     		blx r4
A1805D38  E8BD 0021		ldmia sp!, { r0, r5 }

#1468		
#1469								(* CurrentPump := ((CurrentPump) MOD 3) + 1; *)
#1470								LD		CurrentPump	{LNXT:383|398|-1}
(*) UNDEF
A1805D3C  F85F 743C		ldr r7, [pc, #-1084] ; 0xA1A0005C
A1805D40  F9B7 0000		ldrsh r0, [r7]

#1471								MOD		3	{LNXT:383|398|-1}
(*) INT
A1805D44  2103     		mov r1, #3 ; 3
A1805D46  F85F 4CC8		ldr r4, [pc, #-3272] ; 0xA1804500
A1805D4A  F044 0401		orr r4, r4, #1
A1805D4E  47A0     		blx r4

#1472								ADD		1	{LNXT:383|398|-1}
(-) INT
A1805D50  1C40     		add r0, r0, #1

#1473								ST		CurrentPump	{LNXT:383|398|-1}
(*) INT
A1805D52  F85F 7450		ldr r7, [pc, #-1104] ; 0xA1A0005C
A1805D56  8038     		strh r0, [r7]

#1474		
#1475		$label109:
#1476							(* END_IF *)
#1477		
#1478		$label107:
#1479						(* END_IF *)
#1480		
#1481		$label105:
#1482					(* END_IF *)
#1483		
#1484		$label79:
#1485		
#1486				(* END_CASE *)
#1487		
#1488		$label78:
#1489			(* END_IF *)
#1490		
#1491		
#1492			(* IF Tank_Level >= Level_2 AND Tank_Level < Level_3 *)
#1493			LD		Tank_Level	{LNXT:398|-1|-1}
(*) UNDEF
A1805D58  F85F 7CD0		ldr r7, [pc, #-3280] ; 0xA1A00012
A1805D5C  F9B7 0000		ldrsh r0, [r7]

#1494			LT		Level_3	{LNXT:398|-1|-1}
(*) INT
A1805D60  F85F 7D30		ldr r7, [pc, #-3376] ; 0xA0003F0A
A1805D64  F9B7 7000		ldrsh r7, [r7]
A1805D68  42B8     		cmp r0, r7
A1805D6A  BFA8 2000		gemov r0, #0
A1805D6E  BFB8 2001		ltmov r0, #1

#1495			AND(		Tank_Level	{LNXT:398|-1|-1}
(*) BOOL
A1805D72  B082     		sub sp, sp, #8
A1805D74  F8CD 0000		str r0, [sp]
A1805D78  F85F 7CF0		ldr r7, [pc, #-3312] ; 0xA1A00012
A1805D7C  F9B7 0000		ldrsh r0, [r7]

#1496			GE		Level_2	{LNXT:398|-1|-1}
(*) INT
A1805D80  F85F 7D54		ldr r7, [pc, #-3412] ; 0xA0003F08
A1805D84  F9B7 7000		ldrsh r7, [r7]
A1805D88  42B8     		cmp r0, r7
A1805D8A  BFB8 2000		ltmov r0, #0
A1805D8E  BFA8 2001		gemov r0, #1

#1497			)	{LNXT:398|-1|-1}
(*) BOOL
A1805D92  4607     		mov r7, r0
A1805D94  F8DD 0000		ldr r0, [sp]
A1805D98  B002     		add sp, sp, #8
A1805D9A  4038     		and r0, r0, r7

#1498			JMPCN	$label110	{LNXT:398|401|436}
(-) BOOL
A1805D9C  2800     		cmp r0, #0
A1805D9E  F000 80AD		beq #346 ; 0xA1805EFC


#1499		
#1500			(* THEN *)
#1501		
#1502		
#1503				(* IF MOTOR_A AND NOT MOTOR_B AND NOT MOTOR_C *)
#1504				LD		MOTOR_C	{LNXT:401|-1|-1}
(*) UNDEF
A1805DA2  F85F 7CB0		ldr r7, [pc, #-3248] ; 0x100004AE
A1805DA6  7838     		ldrb r0, [r7]

#1505				NOT	{LNXT:401|-1|-1}
(*) BOOL
A1805DA8  2800     		cmp r0, #0
A1805DAA  BF08 2001		eqmov r0, #1
A1805DAE  BF18 2000		nemov r0, #0

#1506				AND(		MOTOR_B	{LNXT:401|-1|-1}
(*) BOOL
A1805DB2  B082     		sub sp, sp, #8
A1805DB4  F8CD 0000		str r0, [sp]
A1805DB8  F85F 7CCC		ldr r7, [pc, #-3276] ; 0x100004AD
A1805DBC  7838     		ldrb r0, [r7]

#1507				NOT	{LNXT:401|-1|-1}
(*) BOOL
A1805DBE  2800     		cmp r0, #0
A1805DC0  BF08 2001		eqmov r0, #1
A1805DC4  BF18 2000		nemov r0, #0

#1508				AND		MOTOR_A	{LNXT:401|-1|-1}
(*) BOOL
A1805DC8  F85F 7CE0		ldr r7, [pc, #-3296] ; 0x100004AC
A1805DCC  783F     		ldrb r7, [r7]
A1805DCE  4038     		and r0, r0, r7

#1509				)	{LNXT:401|-1|-1}
(*) BOOL
A1805DD0  4607     		mov r7, r0
A1805DD2  F8DD 0000		ldr r0, [sp]
A1805DD6  B002     		add sp, sp, #8
A1805DD8  4038     		and r0, r0, r7

#1510				JMPCN	$label111	{LNXT:401|404|414}
(-) BOOL
A1805DDA  2800     		cmp r0, #0
A1805DDC  D016     		beq #44 ; 0xA1805E0C


#1511		
#1512				(* THEN *)
#1513		
#1514		
#1515					(* IF Avto_B *)
#1516					LD		Avto_B	{LNXT:404|-1|-1}
(*) UNDEF
A1805DE0  F85F 7D38		ldr r7, [pc, #-3384] ; 0xA1A0002C
A1805DE4  7838     		ldrb r0, [r7]

#1517					JMPCN	$label112	{LNXT:404|405|407}
(-) BOOL
A1805DE6  2800     		cmp r0, #0
A1805DE8  D006     		beq #12 ; 0xA1805DF8


#1518		
#1519					(* THEN *)
#1520		
#1521						(* Motor_B:= TRUE; *)
#1522						MOVE		TRUE,Motor_B	{LNXT:405|414|-1}
(*) BOOL
A1805DEC  2001     		mov r0, #1 ; 1
A1805DEE  F85F 7D00		ldr r7, [pc, #-3328] ; 0x100004AD
A1805DF2  7038     		strb r0, [r7]

#1523						JMP		$label113	{LNXT:404|405|407}
(-) BOOL
A1805DF4  E00A     		b #20 ; 0xA1805E0C


#1524		$label112:
#1525		
#1526					(* ELSIF Avto_C *)
#1527					LD		Avto_C	{LNXT:407|-1|-1}
(*) UNDEF
A1805DF8  F85F 7D48		ldr r7, [pc, #-3400] ; 0xA1A0002E
A1805DFC  7838     		ldrb r0, [r7]

#1528					JMPCN	$label113	{LNXT:407|408|414}
(-) BOOL
A1805DFE  2800     		cmp r0, #0
A1805E00  D004     		beq #8 ; 0xA1805E0C


#1529		
#1530					(* THEN *)
#1531		
#1532						(* Motor_C:= TRUE; *)
#1533						MOVE		TRUE,Motor_C	{LNXT:408|414|-1}
(*) BOOL
A1805E04  2001     		mov r0, #1 ; 1
A1805E06  F85F 7D14		ldr r7, [pc, #-3348] ; 0x100004AE
A1805E0A  7038     		strb r0, [r7]

#1534		
#1535		$label113:
#1536					(* END_IF *)
#1537		
#1538		$label111:
#1539				(* END_IF *)
#1540		
#1541		
#1542				(* IF MOTOR_B AND NOT MOTOR_A AND NOT MOTOR_C *)
#1543				LD		MOTOR_C	{LNXT:414|-1|-1}
(*) UNDEF
A1805E0C  F85F 7D1C		ldr r7, [pc, #-3356] ; 0x100004AE
A1805E10  7838     		ldrb r0, [r7]

#1544				NOT	{LNXT:414|-1|-1}
(*) BOOL
A1805E12  2800     		cmp r0, #0
A1805E14  BF08 2001		eqmov r0, #1
A1805E18  BF18 2000		nemov r0, #0

#1545				AND(		MOTOR_A	{LNXT:414|-1|-1}
(*) BOOL
A1805E1C  B082     		sub sp, sp, #8
A1805E1E  F8CD 0000		str r0, [sp]
A1805E22  F85F 7D38		ldr r7, [pc, #-3384] ; 0x100004AC
A1805E26  7838     		ldrb r0, [r7]

#1546				NOT	{LNXT:414|-1|-1}
(*) BOOL
A1805E28  2800     		cmp r0, #0
A1805E2A  BF08 2001		eqmov r0, #1
A1805E2E  BF18 2000		nemov r0, #0

#1547				AND		MOTOR_B	{LNXT:414|-1|-1}
(*) BOOL
A1805E32  F85F 7D44		ldr r7, [pc, #-3396] ; 0x100004AD
A1805E36  783F     		ldrb r7, [r7]
A1805E38  4038     		and r0, r0, r7

#1548				)	{LNXT:414|-1|-1}
(*) BOOL
A1805E3A  4607     		mov r7, r0
A1805E3C  F8DD 0000		ldr r0, [sp]
A1805E40  B002     		add sp, sp, #8
A1805E42  4038     		and r0, r0, r7

#1549				JMPCN	$label114	{LNXT:414|415|423}
(-) BOOL
A1805E44  2800     		cmp r0, #0
A1805E46  D01D     		beq #58 ; 0xA1805E84


#1550		
#1551				(* THEN *)
#1552		
#1553		
#1554					(* IF Avto_B *)
#1555					LD		Avto_B	{LNXT:415|-1|-1}
(*) UNDEF
A1805E4A  F85F 7DA0		ldr r7, [pc, #-3488] ; 0xA1A0002C
A1805E4E  7838     		ldrb r0, [r7]

#1556					JMPCN	$label115	{LNXT:415|416|418}
(-) BOOL
A1805E50  2800     		cmp r0, #0
A1805E52  D004     		beq #8 ; 0xA1805E5E


#1557		
#1558					(* THEN *)
#1559		
#1560						(* Motor_C:= TRUE; *)
#1561						MOVE		TRUE,Motor_C	{LNXT:416|418|-1}
(*) BOOL
A1805E56  2001     		mov r0, #1 ; 1
A1805E58  F85F 7D68		ldr r7, [pc, #-3432] ; 0x100004AE
A1805E5C  7038     		strb r0, [r7]

#1562		
#1563		$label115:
#1564					(* END_IF *)
#1565		
#1566		
#1567					(* IF Avto_A AND NOT MOTOR_C *)
#1568					LD		MOTOR_C	{LNXT:418|-1|-1}
(*) UNDEF
A1805E5E  F85F 7D6C		ldr r7, [pc, #-3436] ; 0x100004AE
A1805E62  7838     		ldrb r0, [r7]

#1569					NOT	{LNXT:418|-1|-1}
(*) BOOL
A1805E64  2800     		cmp r0, #0
A1805E66  BF08 2001		eqmov r0, #1
A1805E6A  BF18 2000		nemov r0, #0

#1570					AND		Avto_A	{LNXT:418|-1|-1}
(*) BOOL
A1805E6E  F85F 7DB8		ldr r7, [pc, #-3512] ; 0xA1A0002F
A1805E72  783F     		ldrb r7, [r7]
A1805E74  4038     		and r0, r0, r7

#1571					JMPCN	$label116	{LNXT:418|419|423}
(-) BOOL
A1805E76  2800     		cmp r0, #0
A1805E78  D004     		beq #8 ; 0xA1805E84


#1572		
#1573					(* THEN *)
#1574		
#1575						(* Motor_A:= TRUE; *)
#1576						MOVE		TRUE,Motor_A	{LNXT:419|423|-1}
(*) BOOL
A1805E7C  2001     		mov r0, #1 ; 1
A1805E7E  F85F 7D94		ldr r7, [pc, #-3476] ; 0x100004AC
A1805E82  7038     		strb r0, [r7]

#1577		
#1578		$label116:
#1579					(* END_IF *)
#1580		
#1581		$label114:
#1582				(* END_IF *)
#1583		
#1584		
#1585				(* IF MOTOR_C AND NOT MOTOR_A AND NOT MOTOR_B *)
#1586				LD		MOTOR_B	{LNXT:423|-1|-1}
(*) UNDEF
A1805E84  F85F 7D98		ldr r7, [pc, #-3480] ; 0x100004AD
A1805E88  7838     		ldrb r0, [r7]

#1587				NOT	{LNXT:423|-1|-1}
(*) BOOL
A1805E8A  2800     		cmp r0, #0
A1805E8C  BF08 2001		eqmov r0, #1
A1805E90  BF18 2000		nemov r0, #0

#1588				AND(		MOTOR_A	{LNXT:423|-1|-1}
(*) BOOL
A1805E94  B082     		sub sp, sp, #8
A1805E96  F8CD 0000		str r0, [sp]
A1805E9A  F85F 7DB0		ldr r7, [pc, #-3504] ; 0x100004AC
A1805E9E  7838     		ldrb r0, [r7]

#1589				NOT	{LNXT:423|-1|-1}
(*) BOOL
A1805EA0  2800     		cmp r0, #0
A1805EA2  BF08 2001		eqmov r0, #1
A1805EA6  BF18 2000		nemov r0, #0

#1590				AND		MOTOR_C	{LNXT:423|-1|-1}
(*) BOOL
A1805EAA  F85F 7DB8		ldr r7, [pc, #-3512] ; 0x100004AE
A1805EAE  783F     		ldrb r7, [r7]
A1805EB0  4038     		and r0, r0, r7

#1591				)	{LNXT:423|-1|-1}
(*) BOOL
A1805EB2  4607     		mov r7, r0
A1805EB4  F8DD 0000		ldr r0, [sp]
A1805EB8  B002     		add sp, sp, #8
A1805EBA  4038     		and r0, r0, r7

#1592				JMPCN	$label117	{LNXT:423|424|436}
(-) BOOL
A1805EBC  2800     		cmp r0, #0
A1805EBE  D01D     		beq #58 ; 0xA1805EFC


#1593		
#1594				(* THEN *)
#1595		
#1596		
#1597					(* IF Avto_A *)
#1598					LD		Avto_A	{LNXT:424|-1|-1}
(*) UNDEF
A1805EC2  F85F 7E0C		ldr r7, [pc, #-3596] ; 0xA1A0002F
A1805EC6  7838     		ldrb r0, [r7]

#1599					JMPCN	$label118	{LNXT:424|425|427}
(-) BOOL
A1805EC8  2800     		cmp r0, #0
A1805ECA  D004     		beq #8 ; 0xA1805ED6


#1600		
#1601					(* THEN *)
#1602		
#1603						(* Motor_A:= TRUE; *)
#1604						MOVE		TRUE,Motor_A	{LNXT:425|427|-1}
(*) BOOL
A1805ECE  2001     		mov r0, #1 ; 1
A1805ED0  F85F 7DE8		ldr r7, [pc, #-3560] ; 0x100004AC
A1805ED4  7038     		strb r0, [r7]

#1605		
#1606		$label118:
#1607					(* END_IF *)
#1608		
#1609		
#1610					(* IF Avto_B AND NOT MOTOR_A *)
#1611					LD		MOTOR_A	{LNXT:427|-1|-1}
(*) UNDEF
A1805ED6  F85F 7DEC		ldr r7, [pc, #-3564] ; 0x100004AC
A1805EDA  7838     		ldrb r0, [r7]

#1612					NOT	{LNXT:427|-1|-1}
(*) BOOL
A1805EDC  2800     		cmp r0, #0
A1805EDE  BF08 2001		eqmov r0, #1
A1805EE2  BF18 2000		nemov r0, #0

#1613					AND		Avto_B	{LNXT:427|-1|-1}
(*) BOOL
A1805EE6  F85F 7E3C		ldr r7, [pc, #-3644] ; 0xA1A0002C
A1805EEA  783F     		ldrb r7, [r7]
A1805EEC  4038     		and r0, r0, r7

#1614					JMPCN	$label119	{LNXT:427|428|436}
(-) BOOL
A1805EEE  2800     		cmp r0, #0
A1805EF0  D004     		beq #8 ; 0xA1805EFC


#1615		
#1616					(* THEN *)
#1617		
#1618						(* Motor_B:= TRUE; *)
#1619						MOVE		TRUE,Motor_B	{LNXT:428|436|-1}
(*) BOOL
A1805EF4  2001     		mov r0, #1 ; 1
A1805EF6  F85F 7E08		ldr r7, [pc, #-3592] ; 0x100004AD
A1805EFA  7038     		strb r0, [r7]

#1620		
#1621		$label119:
#1622					(* END_IF *)
#1623		
#1624		$label117:
#1625				(* END_IF *)
#1626		
#1627		$label110:
#1628			(* END_IF *)
#1629		
#1630		
#1631			(* IF Tank_Level <= Level_1 and Motor_A and Motor_B and Motor_C *)
#1632			LD		Tank_Level	{LNXT:436|-1|-1}
(*) UNDEF
A1805EFC  F85F 7E74		ldr r7, [pc, #-3700] ; 0xA1A00012
A1805F00  F9B7 0000		ldrsh r0, [r7]

#1633			LE		Level_1	{LNXT:436|-1|-1}
(*) INT
A1805F04  F85F 7EDC		ldr r7, [pc, #-3804] ; 0xA0003F06
A1805F08  F9B7 7000		ldrsh r7, [r7]
A1805F0C  42B8     		cmp r0, r7
A1805F0E  BFC8 2000		gtmov r0, #0
A1805F12  BFD8 2001		lemov r0, #1

#1634			AND		Motor_A	{LNXT:436|-1|-1}
(*) BOOL
A1805F16  F85F 7E2C		ldr r7, [pc, #-3628] ; 0x100004AC
A1805F1A  783F     		ldrb r7, [r7]
A1805F1C  4038     		and r0, r0, r7

#1635			AND		Motor_B	{LNXT:436|-1|-1}
(*) BOOL
A1805F1E  F85F 7E30		ldr r7, [pc, #-3632] ; 0x100004AD
A1805F22  783F     		ldrb r7, [r7]
A1805F24  4038     		and r0, r0, r7

#1636			AND		Motor_C	{LNXT:436|-1|-1}
(*) BOOL
A1805F26  F85F 7E34		ldr r7, [pc, #-3636] ; 0x100004AE
A1805F2A  783F     		ldrb r7, [r7]
A1805F2C  4038     		and r0, r0, r7

#1637			JMPCN	$label120	{LNXT:436|437|443}
(-) BOOL
A1805F2E  2800     		cmp r0, #0
A1805F30  D004     		beq #8 ; 0xA1805F3C


#1638		
#1639			(* THEN *)
#1640		
#1641				(* Motor_A := False; *)
#1642				MOVE		False,Motor_A	{LNXT:437|443|-1}
(*) BOOL
A1805F34  2000     		mov r0, #0 ; 0
A1805F36  F85F 7E4C		ldr r7, [pc, #-3660] ; 0x100004AC
A1805F3A  7038     		strb r0, [r7]

#1643		
#1644		$label120:
#1645			(* END_IF *)
#1646		
#1647		
#1648			(* IF Tank_Level > Level_3 *)
#1649			LD		Tank_Level	{LNXT:443|-1|-1}
(*) UNDEF
A1805F3C  F85F 7EB4		ldr r7, [pc, #-3764] ; 0xA1A00012
A1805F40  F9B7 0000		ldrsh r0, [r7]

#1650			GT		Level_3	{LNXT:443|-1|-1}
(*) INT
A1805F44  F85F 7F14		ldr r7, [pc, #-3860] ; 0xA0003F0A
A1805F48  F9B7 7000		ldrsh r7, [r7]
A1805F4C  42B8     		cmp r0, r7
A1805F4E  BFD8 2000		lemov r0, #0
A1805F52  BFC8 2001		gtmov r0, #1

#1651			JMPCN	$label121	{LNXT:443|444|462}
(-) BOOL
A1805F56  2800     		cmp r0, #0
A1805F58  D01E     		beq #60 ; 0xA1805F98


#1652		
#1653			(* THEN *)
#1654		
#1655		
#1656				(* IF Avto_A *)
#1657				LD		Avto_A	{LNXT:444|-1|-1}
(*) UNDEF
A1805F5C  F85F 7EA8		ldr r7, [pc, #-3752] ; 0xA1A0002F
A1805F60  7838     		ldrb r0, [r7]

#1658				JMPCN	$label122	{LNXT:444|445|448}
(-) BOOL
A1805F62  2800     		cmp r0, #0
A1805F64  D004     		beq #8 ; 0xA1805F70


#1659		
#1660				(* THEN *)
#1661		
#1662					(* Motor_A := TRUE; *)
#1663					MOVE		TRUE,Motor_A	{LNXT:445|448|-1}
(*) BOOL
A1805F68  2001     		mov r0, #1 ; 1
A1805F6A  F85F 7E80		ldr r7, [pc, #-3712] ; 0x100004AC
A1805F6E  7038     		strb r0, [r7]

#1664		
#1665		$label122:
#1666				(* END_IF *)
#1667		
#1668		
#1669				(* IF Avto_B *)
#1670				LD		Avto_B	{LNXT:448|-1|-1}
(*) UNDEF
A1805F70  F85F 7EC8		ldr r7, [pc, #-3784] ; 0xA1A0002C
A1805F74  7838     		ldrb r0, [r7]

#1671				JMPCN	$label123	{LNXT:448|449|452}
(-) BOOL
A1805F76  2800     		cmp r0, #0
A1805F78  D004     		beq #8 ; 0xA1805F84


#1672		
#1673				(* THEN *)
#1674		
#1675					(* Motor_B := TRUE; *)
#1676					MOVE		TRUE,Motor_B	{LNXT:449|452|-1}
(*) BOOL
A1805F7C  2001     		mov r0, #1 ; 1
A1805F7E  F85F 7E90		ldr r7, [pc, #-3728] ; 0x100004AD
A1805F82  7038     		strb r0, [r7]

#1677		
#1678		$label123:
#1679				(* END_IF *)
#1680		
#1681		
#1682				(* IF Avto_C *)
#1683				LD		Avto_C	{LNXT:452|-1|-1}
(*) UNDEF
A1805F84  F85F 7ED4		ldr r7, [pc, #-3796] ; 0xA1A0002E
A1805F88  7838     		ldrb r0, [r7]

#1684				JMPCN	$label124	{LNXT:452|453|462}
(-) BOOL
A1805F8A  2800     		cmp r0, #0
A1805F8C  D004     		beq #8 ; 0xA1805F98


#1685		
#1686				(* THEN *)
#1687		
#1688					(* Motor_C := TRUE; *)
#1689					MOVE		TRUE,Motor_C	{LNXT:453|462|-1}
(*) BOOL
A1805F90  2001     		mov r0, #1 ; 1
A1805F92  F85F 7EA0		ldr r7, [pc, #-3744] ; 0x100004AE
A1805F96  7038     		strb r0, [r7]

#1690		
#1691		$label124:
#1692				(* END_IF *)
#1693		
#1694		$label121:
#1695			(* END_IF *)
#1696		
#1697		
#1698			(* IF Tank_Level <= level_min *)
#1699			LD		Tank_Level	{LNXT:462|-1|-1}
(*) UNDEF
A1805F98  F85F 7F10		ldr r7, [pc, #-3856] ; 0xA1A00012
A1805F9C  F9B7 0000		ldrsh r0, [r7]

#1700			LE		level_min	{LNXT:462|-1|-1}
(*) INT
A1805FA0  F85F 7F7C		ldr r7, [pc, #-3964] ; 0xA0003F04
A1805FA4  F9B7 7000		ldrsh r7, [r7]
A1805FA8  42B8     		cmp r0, r7
A1805FAA  BFC8 2000		gtmov r0, #0
A1805FAE  BFD8 2001		lemov r0, #1

#1701			JMPCN	$label125	{LNXT:462|463|5}
(-) BOOL
A1805FB2  2800     		cmp r0, #0
A1805FB4  D00C     		beq #24 ; 0xA1805FD0


#1702		
#1703			(* THEN *)
#1704		
#1705				(* Motor_A := False; *)
#1706				MOVE		False,Motor_A	{LNXT:463|464|-1}
(*) BOOL
A1805FB8  2000     		mov r0, #0 ; 0
A1805FBA  F85F 7ED0		ldr r7, [pc, #-3792] ; 0x100004AC
A1805FBE  7038     		strb r0, [r7]

#1707		
#1708				(* Motor_B := False; *)
#1709				MOVE		False,Motor_B	{LNXT:464|465|-1}
(*) BOOL
A1805FC0  2000     		mov r0, #0 ; 0
A1805FC2  F85F 7ED4		ldr r7, [pc, #-3796] ; 0x100004AD
A1805FC6  7038     		strb r0, [r7]

#1710		
#1711				(* Motor_C := False; *)
#1712				MOVE		False,Motor_C	{LNXT:465|5|-1}
(*) BOOL
A1805FC8  2000     		mov r0, #0 ; 0
A1805FCA  F85F 7ED8		ldr r7, [pc, #-3800] ; 0x100004AE
A1805FCE  7038     		strb r0, [r7]

A1805FD0  E02C     		b #88

A1805FD4  A1A0005F		; 0xA1A0005F
A1805FD8  A1A00088		; 0xA1A00088
A1805FDC  A1A00089		; 0xA1A00089
A1805FE0  A1A0008B		; 0xA1A0008B
A1805FE4  A1A0008C		; 0xA1A0008C
A1805FE8  A1A00090		; 0xA1A00090
A1805FEC  A1A00094		; 0xA1A00094
A1805FF0  A1A00098		; 0xA1A00098
A1805FF4  A1A000A0		; 0xA1A000A0
A1805FF8  A1A000A4		; 0xA1A000A4
A1805FFC  A1A000A8		; 0xA1A000A8
A1806000  A1A000AC		; 0xA1A000AC
A1806004  A1A000B4		; 0xA1A000B4
A1806008  A1A000B8		; 0xA1A000B8
A180600C  A1A000BC		; 0xA1A000BC
A1806010  A1A000C0		; 0xA1A000C0
A1806014  A1A000C8		; 0xA1A000C8
A1806018  A1A000CC		; 0xA1A000CC
A180601C  A1A000D0		; 0xA1A000D0
A1806020  A1A000D4		; 0xA1A000D4
A1806024  00001770		; 0x00001770
A1806028  00001B58		; 0x00001B58

END_PROGRAM
**************************************************
	List program: Register
**************************************************

PROGRAM Register

END_PROGRAM

#0		{SRC:Register}
#1		(*$WAITSWITCH$*)
#2		
#3			(* level_tank := Tank_Level; *)
#4			MOVE		Tank_Level,level_tank	{LNXT:3|6|-1}
(*) UDINT
A180602C  F8DF 70E0		ldr r7, [pc, #+224] ; 0xA1A00012
A1806030  F9B7 0000		ldrsh r0, [r7]
A1806034  F8DF 70CC		ldr r7, [pc, #+204] ; 0xA0003F02
A1806038  8038     		strh r0, [r7]

#5		
#6		
#7			(* IF Alarms >0 *)
#8			LD		Alarms	{LNXT:6|-1|-1}
(*) UNDEF
A180603A  F8DF 70CC		ldr r7, [pc, #+204] ; 0xA0003F0E
A180603E  8838     		ldrh r0, [r7]

#9			GT		0	{LNXT:6|-1|-1}
(*) WORD
A1806040  2800     		cmp r0, #0
A1806042  BFD8 2000		lemov r0, #0
A1806046  BFC8 2001		gtmov r0, #1

#10			JMPCN	$label0	{LNXT:6|7|9}
(-) BOOL
A180604A  2800     		cmp r0, #0
A180604C  D006     		beq #12 ; 0xA180605C


#11		
#12			(* THEN *)
#13		
#14				(* general_alarm := true; *)
#15				MOVE		true,general_alarm	{LNXT:7|14|-1}
(*) BOOL
A1806050  2001     		mov r0, #1 ; 1
A1806052  F8DF 70D0		ldr r7, [pc, #+208] ; 0x100004AF
A1806056  7038     		strb r0, [r7]

#16				JMP		$label1	{LNXT:6|7|9}
(-) BOOL
A1806058  E004     		b #8 ; 0xA1806064


#17		$label0:
#18		
#19			(* ELSE *)
#20		
#21				(* general_alarm := false; *)
#22				MOVE		false,general_alarm	{LNXT:9|14|-1}
(*) BOOL
A180605C  2000     		mov r0, #0 ; 0
A180605E  F8DF 70C4		ldr r7, [pc, #+196] ; 0x100004AF
A1806062  7038     		strb r0, [r7]

#23		
#24		$label1:
#25			(* END_IF *)
#26		
#27			(* Alarms.0 := di_sensor_Min; *)
#28			MOVE		di_sensor_Min,Alarms.0	{LNXT:14|15|-1}
(*) BOOL
A1806064  F8DF 70AC		ldr r7, [pc, #+172] ; 0xA1A0008A
A1806068  7838     		ldrb r0, [r7]
A180606A  F8DF 709C		ldr r7, [pc, #+156] ; 0xA0003F0E
A180606E  F8B7 8000		ldrh r8, [r7]
A1806072  F360 0800		bfi r8, r0, #0, #1
A1806076  F8A7 8000		strh r8, [r7]

#29		
#30			(* Alarms.1 := di_sensor_Max; *)
#31			MOVE		di_sensor_Max,Alarms.1	{LNXT:15|16|-1}
(*) BOOL
A180607A  F8DF 70A0		ldr r7, [pc, #+160] ; 0xA1A000DF
A180607E  7838     		ldrb r0, [r7]
A1806080  F8DF 7084		ldr r7, [pc, #+132] ; 0xA0003F0E
A1806084  F8B7 8000		ldrh r8, [r7]
A1806088  F360 0841		bfi r8, r0, #1, #1
A180608C  F8A7 8000		strh r8, [r7]

#32		
#33			(* Alarms.2 := di_flooding; *)
#34			MOVE		di_flooding,Alarms.2	{LNXT:16|17|-1}
(*) BOOL
A1806090  F8DF 7078		ldr r7, [pc, #+120] ; 0xA1A00011
A1806094  7838     		ldrb r0, [r7]
A1806096  F8DF 7070		ldr r7, [pc, #+112] ; 0xA0003F0E
A180609A  F8B7 8000		ldrh r8, [r7]
A180609E  F360 0882		bfi r8, r0, #2, #1
A18060A2  F8A7 8000		strh r8, [r7]

#35		
#36			(* Alarms.4 := di_rnpp; *)
#37			MOVE		di_rnpp,Alarms.4	{LNXT:17|33|-1}
(*) BOOL
A18060A6  F8DF 7070		ldr r7, [pc, #+112] ; 0xA1A000DE
A18060AA  7838     		ldrb r0, [r7]
A18060AC  F8DF 7058		ldr r7, [pc, #+88] ; 0xA0003F0E
A18060B0  F8B7 8000		ldrh r8, [r7]
A18060B4  F360 1804		bfi r8, r0, #4, #1
A18060B8  F8A7 8000		strh r8, [r7]

#38		
#39		
#40			(* IF Tank_Level < -32000 *)
#41			LD		Tank_Level	{LNXT:33|-1|-1}
(*) UNDEF
A18060BC  F8DF 7050		ldr r7, [pc, #+80] ; 0xA1A00012
A18060C0  F9B7 0000		ldrsh r0, [r7]

#42			LT		-32000	{LNXT:33|-1|-1}
(*) INT
A18060C4  F8DF 7058		ldr r7, [pc, #+88] ; 0xFFFF8300
A18060C8  463F     		mov r7, r7
A18060CA  42B8     		cmp r0, r7
A18060CC  BFA8 2000		gemov r0, #0
A18060D0  BFB8 2001		ltmov r0, #1

#43			JMPCN	$label2	{LNXT:33|34|36}
(-) BOOL
A18060D4  2800     		cmp r0, #0
A18060D6  D00B     		beq #22 ; 0xA18060F0


#44		
#45			(* THEN *)
#46		
#47				(* Alarms.11 := True; *)
#48				MOVE		True,Alarms.11	{LNXT:34|3|-1}
(*) BOOL
A18060DA  2001     		mov r0, #1 ; 1
A18060DC  F8DF 7028		ldr r7, [pc, #+40] ; 0xA0003F0E
A18060E0  F8B7 8000		ldrh r8, [r7]
A18060E4  F360 28CB		bfi r8, r0, #11, #1
A18060E8  F8A7 8000		strh r8, [r7]

#49				JMP		$label3	{LNXT:33|34|36}
(-) WORD
A18060EC  E009     		b #18 ; 0xA1806102


#50		$label2:
#51		
#52			(* ELSE *)
#53		
#54				(* Alarms.11 := false; *)
#55				MOVE		false,Alarms.11	{LNXT:36|3|-1}
(*) WORD
A18060F0  2000     		mov r0, #0 ; 0
A18060F2  F8DF 7014		ldr r7, [pc, #+20] ; 0xA0003F0E
A18060F6  F8B7 8000		ldrh r8, [r7]
A18060FA  F360 28CB		bfi r8, r0, #11, #1
A18060FE  F8A7 8000		strh r8, [r7]

A1806102  E011     		b #34

A1806104  FFFFFFFF		; 0xA0003F02
A1806108  FFFFFFFF		; 0xA0003F0E
A180610C  A1A00011		; 0xA1A00011
A1806110  A1A00012		; 0xA1A00012
A1806114  A1A0008A		; 0xA1A0008A
A1806118  A1A000DE		; 0xA1A000DE
A180611C  A1A000DF		; 0xA1A000DF
A1806120  FFFF8300		; 0xFFFF8300
A1806124  FFFFFFFF		; 0x100004AF

END_PROGRAM
**************************************************
	List program: MotoHour
**************************************************

PROGRAM MotoHour

        VAR
MotoHour_Mode_1 : REAL := 0.0;	{ DE:"Час, напрацювання мс насос А" }
MotoHour_Mode_2 : REAL := 0.0;	{ DE:"Час, напрацювання мс насос В" }
MotoHour_Mode_3 : REAL := 0.0;	{ DE:"Час, напрацювання мс насос С" }
	END_VAR

END_PROGRAM

#0		{SRC:MotoHour}
#1		(*$WAITSWITCH$*)
#2		
#3		
#4			(* IF Motor_A *)
#5			LD		Motor_A	{LNXT:3|-1|-1}
(*) UNDEF
A1806128  F8DF 722C		ldr r7, [pc, #+556] ; 0x100004AC
A180612C  7838     		ldrb r0, [r7]

#6			JMPCN	$label0	{LNXT:3|4|6}
(-) BOOL
A180612E  2800     		cmp r0, #0
A1806130  D020     		beq #64 ; 0xA1806174


#7		
#8			(* THEN *)
#9		
#10				(* MotoHour_Mode_1 := MotoHour_Mode_1 + 1; *)
#11				LD		MotoHour_Mode_1	{LNXT:4|6|-1}
(*) UNDEF
A1806134  F8DF 720C		ldr r7, [pc, #+524] ; 0xA1A000E0
A1806138  6838     		ldr r0, [r7]

#12				ADD		1	{LNXT:4|6|-1}
(*) REAL
A180613A  2701     		mov r7, #1 ; 1
A180613C  B082     		sub sp, sp, #8
A180613E  F8CD 0000		str r0, [sp]
A1806142  4638     		mov r0, r7
A1806144  F8DF 4204		ldr r4, [pc, #+516] ; 0x111F3
A1806148  F044 0401		orr r4, r4, #1
A180614C  47A0     		blx r4
A180614E  4607     		mov r7, r0
A1806150  F8DD 0000		ldr r0, [sp]
A1806154  B002     		add sp, sp, #8
A1806156  B082     		sub sp, sp, #8
A1806158  F8CD 1000		str r1, [sp]
A180615C  4639     		mov r1, r7
A180615E  F8DF 41F0		ldr r4, [pc, #+496] ; 0x11233
A1806162  F044 0401		orr r4, r4, #1
A1806166  47A0     		blx r4
A1806168  F8DD 1000		ldr r1, [sp]
A180616C  B002     		add sp, sp, #8

#13				ST		MotoHour_Mode_1	{LNXT:4|6|-1}
(*) REAL
A180616E  F8DF 71D4		ldr r7, [pc, #+468] ; 0xA1A000E0
A1806172  6038     		str r0, [r7]

#14		
#15		$label0:
#16			(* END_IF *)
#17		
#18		
#19			(* IF Motor_A *)
#20			LD		Motor_A	{LNXT:6|-1|-1}
(*) UNDEF
A1806174  F8DF 71E0		ldr r7, [pc, #+480] ; 0x100004AC
A1806178  7838     		ldrb r0, [r7]

#21			NOT	{LNXT:6|-1|-1}
(*) BOOL
A180617A  2800     		cmp r0, #0
A180617C  BF08 2001		eqmov r0, #1
A1806180  BF18 2000		nemov r0, #0

#22			JMPCN	$label1	{LNXT:6|7|11}
(-) BOOL
A1806184  2800     		cmp r0, #0
A1806186  D027     		beq #78 ; 0xA18061D8


#23		
#24			(* THEN *)
#25		
#26				(* MotoHour_Mode_1 := MotoHour_Mode_1; *)
#27				MOVE		MotoHour_Mode_1,MotoHour_Mode_1	{LNXT:7|8|-1}
(*) BOOL
A180618A  F8DF 71B8		ldr r7, [pc, #+440] ; 0xA1A000E0
A180618E  6838     		ldr r0, [r7]
A1806190  F8DF 71B0		ldr r7, [pc, #+432] ; 0xA1A000E0
A1806194  6038     		str r0, [r7]

#28		
#29				(* MotoHour_1 := MotoHour_Mode_1 / 3600; *)
#30				LD		MotoHour_Mode_1	{LNXT:8|11|-1}
(*) UNDEF
A1806196  F8DF 71AC		ldr r7, [pc, #+428] ; 0xA1A000E0
A180619A  6838     		ldr r0, [r7]

#31				DIV		3600	{LNXT:8|11|-1}
(*) REAL
A180619C  F44F 6761		mov r7, #3600 ; 3600
A18061A0  B082     		sub sp, sp, #8
A18061A2  F8CD 0000		str r0, [sp]
A18061A6  4638     		mov r0, r7
A18061A8  F8DF 41A0		ldr r4, [pc, #+416] ; 0x111F3
A18061AC  F044 0401		orr r4, r4, #1
A18061B0  47A0     		blx r4
A18061B2  4607     		mov r7, r0
A18061B4  F8DD 0000		ldr r0, [sp]
A18061B8  B002     		add sp, sp, #8
A18061BA  B082     		sub sp, sp, #8
A18061BC  F8CD 1000		str r1, [sp]
A18061C0  4639     		mov r1, r7
A18061C2  F8DF 4190		ldr r4, [pc, #+400] ; 0x11263
A18061C6  F044 0401		orr r4, r4, #1
A18061CA  47A0     		blx r4
A18061CC  F8DD 1000		ldr r1, [sp]
A18061D0  B002     		add sp, sp, #8

#32				ST		MotoHour_1	{LNXT:8|11|-1}
(*) REAL
A18061D2  F8DF 7168		ldr r7, [pc, #+360] ; 0xA0003F14
A18061D6  6038     		str r0, [r7]

#33		
#34		$label1:
#35			(* END_IF *)
#36		
#37		
#38			(* IF Motor_B *)
#39			LD		Motor_B	{LNXT:11|-1|-1}
(*) UNDEF
A18061D8  F8DF 7180		ldr r7, [pc, #+384] ; 0x100004AD
A18061DC  7838     		ldrb r0, [r7]

#40			JMPCN	$label2	{LNXT:11|12|14}
(-) BOOL
A18061DE  2800     		cmp r0, #0
A18061E0  D020     		beq #64 ; 0xA1806224


#41		
#42			(* THEN *)
#43		
#44				(* MotoHour_Mode_2 := MotoHour_Mode_2 + 1; *)
#45				LD		MotoHour_Mode_2	{LNXT:12|14|-1}
(*) UNDEF
A18061E4  F8DF 7160		ldr r7, [pc, #+352] ; 0xA1A000E4
A18061E8  6838     		ldr r0, [r7]

#46				ADD		1	{LNXT:12|14|-1}
(*) REAL
A18061EA  2701     		mov r7, #1 ; 1
A18061EC  B082     		sub sp, sp, #8
A18061EE  F8CD 0000		str r0, [sp]
A18061F2  4638     		mov r0, r7
A18061F4  F8DF 4154		ldr r4, [pc, #+340] ; 0x111F3
A18061F8  F044 0401		orr r4, r4, #1
A18061FC  47A0     		blx r4
A18061FE  4607     		mov r7, r0
A1806200  F8DD 0000		ldr r0, [sp]
A1806204  B002     		add sp, sp, #8
A1806206  B082     		sub sp, sp, #8
A1806208  F8CD 1000		str r1, [sp]
A180620C  4639     		mov r1, r7
A180620E  F8DF 4140		ldr r4, [pc, #+320] ; 0x11233
A1806212  F044 0401		orr r4, r4, #1
A1806216  47A0     		blx r4
A1806218  F8DD 1000		ldr r1, [sp]
A180621C  B002     		add sp, sp, #8

#47				ST		MotoHour_Mode_2	{LNXT:12|14|-1}
(*) REAL
A180621E  F8DF 7128		ldr r7, [pc, #+296] ; 0xA1A000E4
A1806222  6038     		str r0, [r7]

#48		
#49		$label2:
#50			(* END_IF *)
#51		
#52		
#53			(* IF Motor_B *)
#54			LD		Motor_B	{LNXT:14|-1|-1}
(*) UNDEF
A1806224  F8DF 7134		ldr r7, [pc, #+308] ; 0x100004AD
A1806228  7838     		ldrb r0, [r7]

#55			NOT	{LNXT:14|-1|-1}
(*) BOOL
A180622A  2800     		cmp r0, #0
A180622C  BF08 2001		eqmov r0, #1
A1806230  BF18 2000		nemov r0, #0

#56			JMPCN	$label3	{LNXT:14|15|19}
(-) BOOL
A1806234  2800     		cmp r0, #0
A1806236  D027     		beq #78 ; 0xA1806288


#57		
#58			(* THEN *)
#59		
#60				(* MotoHour_Mode_2 := MotoHour_Mode_2; *)
#61				MOVE		MotoHour_Mode_2,MotoHour_Mode_2	{LNXT:15|16|-1}
(*) BOOL
A180623A  F8DF 710C		ldr r7, [pc, #+268] ; 0xA1A000E4
A180623E  6838     		ldr r0, [r7]
A1806240  F8DF 7104		ldr r7, [pc, #+260] ; 0xA1A000E4
A1806244  6038     		str r0, [r7]

#62		
#63				(* MotoHour_2 := MotoHour_Mode_2 / 3600; *)
#64				LD		MotoHour_Mode_2	{LNXT:16|19|-1}
(*) UNDEF
A1806246  F8DF 7100		ldr r7, [pc, #+256] ; 0xA1A000E4
A180624A  6838     		ldr r0, [r7]

#65				DIV		3600	{LNXT:16|19|-1}
(*) REAL
A180624C  F44F 6761		mov r7, #3600 ; 3600
A1806250  B082     		sub sp, sp, #8
A1806252  F8CD 0000		str r0, [sp]
A1806256  4638     		mov r0, r7
A1806258  F8DF 40F0		ldr r4, [pc, #+240] ; 0x111F3
A180625C  F044 0401		orr r4, r4, #1
A1806260  47A0     		blx r4
A1806262  4607     		mov r7, r0
A1806264  F8DD 0000		ldr r0, [sp]
A1806268  B002     		add sp, sp, #8
A180626A  B082     		sub sp, sp, #8
A180626C  F8CD 1000		str r1, [sp]
A1806270  4639     		mov r1, r7
A1806272  F8DF 40E0		ldr r4, [pc, #+224] ; 0x11263
A1806276  F044 0401		orr r4, r4, #1
A180627A  47A0     		blx r4
A180627C  F8DD 1000		ldr r1, [sp]
A1806280  B002     		add sp, sp, #8

#66				ST		MotoHour_2	{LNXT:16|19|-1}
(*) REAL
A1806282  F8DF 70BC		ldr r7, [pc, #+188] ; 0xA0003F18
A1806286  6038     		str r0, [r7]

#67		
#68		$label3:
#69			(* END_IF *)
#70		
#71		
#72			(* IF Motor_C *)
#73			LD		Motor_C	{LNXT:19|-1|-1}
(*) UNDEF
A1806288  F8DF 70D4		ldr r7, [pc, #+212] ; 0x100004AE
A180628C  7838     		ldrb r0, [r7]

#74			JMPCN	$label4	{LNXT:19|20|22}
(-) BOOL
A180628E  2800     		cmp r0, #0
A1806290  D020     		beq #64 ; 0xA18062D4


#75		
#76			(* THEN *)
#77		
#78				(* MotoHour_Mode_2 := MotoHour_Mode_2 + 1; *)
#79				LD		MotoHour_Mode_2	{LNXT:20|22|-1}
(*) UNDEF
A1806294  F8DF 70B0		ldr r7, [pc, #+176] ; 0xA1A000E4
A1806298  6838     		ldr r0, [r7]

#80				ADD		1	{LNXT:20|22|-1}
(*) REAL
A180629A  2701     		mov r7, #1 ; 1
A180629C  B082     		sub sp, sp, #8
A180629E  F8CD 0000		str r0, [sp]
A18062A2  4638     		mov r0, r7
A18062A4  F8DF 40A4		ldr r4, [pc, #+164] ; 0x111F3
A18062A8  F044 0401		orr r4, r4, #1
A18062AC  47A0     		blx r4
A18062AE  4607     		mov r7, r0
A18062B0  F8DD 0000		ldr r0, [sp]
A18062B4  B002     		add sp, sp, #8
A18062B6  B082     		sub sp, sp, #8
A18062B8  F8CD 1000		str r1, [sp]
A18062BC  4639     		mov r1, r7
A18062BE  F8DF 4090		ldr r4, [pc, #+144] ; 0x11233
A18062C2  F044 0401		orr r4, r4, #1
A18062C6  47A0     		blx r4
A18062C8  F8DD 1000		ldr r1, [sp]
A18062CC  B002     		add sp, sp, #8

#81				ST		MotoHour_Mode_2	{LNXT:20|22|-1}
(*) REAL
A18062CE  F8DF 7078		ldr r7, [pc, #+120] ; 0xA1A000E4
A18062D2  6038     		str r0, [r7]

#82		
#83		$label4:
#84			(* END_IF *)
#85		
#86		
#87			(* IF Motor_C *)
#88			LD		Motor_C	{LNXT:22|-1|-1}
(*) UNDEF
A18062D4  F8DF 7088		ldr r7, [pc, #+136] ; 0x100004AE
A18062D8  7838     		ldrb r0, [r7]

#89			NOT	{LNXT:22|-1|-1}
(*) BOOL
A18062DA  2800     		cmp r0, #0
A18062DC  BF08 2001		eqmov r0, #1
A18062E0  BF18 2000		nemov r0, #0

#90			JMPCN	$label5	{LNXT:22|23|3}
(-) BOOL
A18062E4  2800     		cmp r0, #0
A18062E6  D027     		beq #78 ; 0xA1806338


#91		
#92			(* THEN *)
#93		
#94				(* MotoHour_Mode_2 := MotoHour_Mode_2; *)
#95				MOVE		MotoHour_Mode_2,MotoHour_Mode_2	{LNXT:23|24|-1}
(*) BOOL
A18062EA  F8DF 705C		ldr r7, [pc, #+92] ; 0xA1A000E4
A18062EE  6838     		ldr r0, [r7]
A18062F0  F8DF 7054		ldr r7, [pc, #+84] ; 0xA1A000E4
A18062F4  6038     		str r0, [r7]

#96		
#97				(* MotoHour_2 := MotoHour_Mode_2 / 3600; *)
#98				LD		MotoHour_Mode_2	{LNXT:24|3|-1}
(*) UNDEF
A18062F6  F8DF 7050		ldr r7, [pc, #+80] ; 0xA1A000E4
A18062FA  6838     		ldr r0, [r7]

#99				DIV		3600	{LNXT:24|3|-1}
(*) REAL
A18062FC  F44F 6761		mov r7, #3600 ; 3600
A1806300  B082     		sub sp, sp, #8
A1806302  F8CD 0000		str r0, [sp]
A1806306  4638     		mov r0, r7
A1806308  F8DF 4040		ldr r4, [pc, #+64] ; 0x111F3
A180630C  F044 0401		orr r4, r4, #1
A1806310  47A0     		blx r4
A1806312  4607     		mov r7, r0
A1806314  F8DD 0000		ldr r0, [sp]
A1806318  B002     		add sp, sp, #8
A180631A  B082     		sub sp, sp, #8
A180631C  F8CD 1000		str r1, [sp]
A1806320  4639     		mov r1, r7
A1806322  F8DF 4030		ldr r4, [pc, #+48] ; 0x11263
A1806326  F044 0401		orr r4, r4, #1
A180632A  47A0     		blx r4
A180632C  F8DD 1000		ldr r1, [sp]
A1806330  B002     		add sp, sp, #8

#100				ST		MotoHour_2	{LNXT:24|3|-1}
(*) REAL
A1806332  F8DF 700C		ldr r7, [pc, #+12] ; 0xA0003F18
A1806336  6038     		str r0, [r7]

A1806338  E014     		b #40

A180633C  FFFFFFFF		; 0xA0003F14
A1806340  FFFFFFFF		; 0xA0003F18
A1806344  A1A000E0		; 0xA1A000E0
A1806348  A1A000E4		; 0xA1A000E4
A180634C  FFFFFFFF		; 0x000111F3
A1806350  FFFFFFFF		; 0x00011233
A1806354  FFFFFFFF		; 0x00011263
A1806358  FFFFFFFF		; 0x100004AC
A180635C  FFFFFFFF		; 0x100004AD
A1806360  FFFFFFFF		; 0x100004AE

END_PROGRAM
**************************************************
	List program: SaveData
**************************************************

PROGRAM SaveData

        VAR
power_err : R_TRIG;
ton_start_up : TON;
res_lvl_min : BOOL;
res_lvl_1 : BOOL;
res_lvl_2 : BOOL;
res_lvl_3 : BOOL;
res_rotation : BOOL;
	END_VAR

END_PROGRAM

#0		{SRC:SaveData}
#1		(*$WAITSWITCH$*)
#2		
#3			(* ton_start_up *)
#4			MOVE		true,ton_start_up.IN	{LNXT:1|-1|-1}
(*) UDINT
A1806364  2001     		mov r0, #1 ; 1
A1806366  F8DF 71DC		ldr r7, [pc, #+476] ; 0xA1A000EC
A180636A  7038     		strb r0, [r7]

#5			MOVE		5000,ton_start_up.PT	{LNXT:1|-1|-1}
(*) BOOL
A180636C  F8DF 7200		ldr r7, [pc, #+512] ; 0x1388
A1806370  4638     		mov r0, r7
A1806372  F8DF 71D4		ldr r7, [pc, #+468] ; 0xA1A000F0
A1806376  6038     		str r0, [r7]

#6			CAL		ton_start_up	{LNXT:1|2|-1}
(*) UDINT
A1806378  E92D 0021		stmdb sp!, { r0, r5 }
A180637C  F8DF 51C0		ldr r5, [pc, #+448] ; 0xA1A000E8
A1806380  F8DF 41B4		ldr r4, [pc, #+436] ; 0xA1804550
A1806384  F044 0401		orr r4, r4, #1
A1806388  47A0     		blx r4
A180638A  E8BD 0021		ldmia sp!, { r0, r5 }

#7		
#8			(* power_err *)
#9			LD		ton_start_up.Q	{LNXT:2|-1|-1}
(*) UNDEF
A180638E  F8DF 71BC		ldr r7, [pc, #+444] ; 0xA1A000F4
A1806392  7838     		ldrb r0, [r7]

#10			AND		di_rnpp	{LNXT:2|-1|-1}
(*) BOOL
A1806394  F8DF 71A4		ldr r7, [pc, #+420] ; 0xA1A000DE
A1806398  783F     		ldrb r7, [r7]
A180639A  4038     		and r0, r0, r7

#11			ST		power_err.clk	{LNXT:2|-1|-1}
(*) BOOL
A180639C  F8DF 71B4		ldr r7, [pc, #+436] ; 0xA1A000FD
A18063A0  7038     		strb r0, [r7]

#12			CAL		power_err	{LNXT:2|3|-1}
(*) BOOL
A18063A2  E92D 0021		stmdb sp!, { r0, r5 }
A18063A6  F8DF 51A8		ldr r5, [pc, #+424] ; 0xA1A000FC
A18063AA  F8DF 4188		ldr r4, [pc, #+392] ; 0xA1804518
A18063AE  F044 0401		orr r4, r4, #1
A18063B2  47A0     		blx r4
A18063B4  E8BD 0021		ldmia sp!, { r0, r5 }

#13		
#14		
#15			(* IF power_err.q *)
#16			LD		power_err.q	{LNXT:3|-1|-1}
(*) UNDEF
A18063B8  F8DF 719C		ldr r7, [pc, #+412] ; 0xA1A000FE
A18063BC  7838     		ldrb r0, [r7]

#17			JMPCN	$label0	{LNXT:3|4|1}
(-) BOOL
A18063BE  2800     		cmp r0, #0
A18063C0  F000 809D		beq #314 ; 0xA18064FE


#18		
#19			(* THEN *)
#20		
#21		
#22				(* IF ep_level_min <> level_min *)
#23				LD		ep_level_min	{LNXT:4|-1|-1}
(*) UNDEF
A18063C4  F8DF 7150		ldr r7, [pc, #+336] ; 0xA00017F6
A18063C8  F9B7 0000		ldrsh r0, [r7]

#24				NE		level_min	{LNXT:4|-1|-1}
(*) INT
A18063CC  F8DF 7150		ldr r7, [pc, #+336] ; 0xA0003F04
A18063D0  F9B7 7000		ldrsh r7, [r7]
A18063D4  42B8     		cmp r0, r7
A18063D6  BF08 2000		eqmov r0, #0
A18063DA  BF18 2001		nemov r0, #1

#25				JMPCN	$label1	{LNXT:4|4|5}
(-) BOOL
A18063DE  2800     		cmp r0, #0
A18063E0  D010     		beq #32 ; 0xA1806404


#26		
#27				(* THEN *)
#28		
#29					(* res_lvl_min := sysWriteParINT(ADR(ep_level_min), level_min); *)
#30					ADR		ep_level_min	{LNXT:4|5|-1}
(*) BOOL
A18063E4  F8DF 0130		ldr r0, [pc, #+304] ; 0xA00017F6

#31					sysWriteParINT		level_min	{LNXT:4|5|-1}
(*) @INT
A18063E8  4607     		mov r7, r0
A18063EA  4638     		mov r0, r7
A18063EC  F8DF 7130		ldr r7, [pc, #+304] ; 0xA0003F04
A18063F0  F9B7 1000		ldrsh r1, [r7]
A18063F4  F8DF 417C		ldr r4, [pc, #+380] ; 0x27D3B
A18063F8  F044 0401		orr r4, r4, #1
A18063FC  47A0     		blx r4

#32					ST		res_lvl_min	{LNXT:4|5|-1}
(*) BOOL
A18063FE  F8DF 715C		ldr r7, [pc, #+348] ; 0xA1A00100
A1806402  7038     		strb r0, [r7]

#33		
#34		$label1:
#35				(* END_IF *)
#36		
#37		
#38				(* IF ep_level_1 <> Level_1 *)
#39				LD		ep_level_1	{LNXT:5|-1|-1}
(*) UNDEF
A1806404  F8DF 7104		ldr r7, [pc, #+260] ; 0xA00017F0
A1806408  F9B7 0000		ldrsh r0, [r7]

#40				NE		Level_1	{LNXT:5|-1|-1}
(*) INT
A180640C  F8DF 7114		ldr r7, [pc, #+276] ; 0xA0003F06
A1806410  F9B7 7000		ldrsh r7, [r7]
A1806414  42B8     		cmp r0, r7
A1806416  BF08 2000		eqmov r0, #0
A180641A  BF18 2001		nemov r0, #1

#41				JMPCN	$label2	{LNXT:5|5|6}
(-) BOOL
A180641E  2800     		cmp r0, #0
A1806420  D010     		beq #32 ; 0xA1806444


#42		
#43				(* THEN *)
#44		
#45					(* res_lvl_1 := sysWriteParINT(ADR(ep_level_1), Level_1); *)
#46					ADR		ep_level_1	{LNXT:5|6|-1}
(*) BOOL
A1806424  F8DF 00E4		ldr r0, [pc, #+228] ; 0xA00017F0

#47					sysWriteParINT		Level_1	{LNXT:5|6|-1}
(*) @INT
A1806428  4607     		mov r7, r0
A180642A  4638     		mov r0, r7
A180642C  F8DF 70F4		ldr r7, [pc, #+244] ; 0xA0003F06
A1806430  F9B7 1000		ldrsh r1, [r7]
A1806434  F8DF 413C		ldr r4, [pc, #+316] ; 0x27D3B
A1806438  F044 0401		orr r4, r4, #1
A180643C  47A0     		blx r4

#48					ST		res_lvl_1	{LNXT:5|6|-1}
(*) BOOL
A180643E  F8DF 7120		ldr r7, [pc, #+288] ; 0xA1A00101
A1806442  7038     		strb r0, [r7]

#49		
#50		$label2:
#51				(* END_IF *)
#52		
#53		
#54				(* IF ep_level_2 <> Level_2 *)
#55				LD		ep_level_2	{LNXT:6|-1|-1}
(*) UNDEF
A1806444  F8DF 70C8		ldr r7, [pc, #+200] ; 0xA00017F2
A1806448  F9B7 0000		ldrsh r0, [r7]

#56				NE		Level_2	{LNXT:6|-1|-1}
(*) INT
A180644C  F8DF 70D8		ldr r7, [pc, #+216] ; 0xA0003F08
A1806450  F9B7 7000		ldrsh r7, [r7]
A1806454  42B8     		cmp r0, r7
A1806456  BF08 2000		eqmov r0, #0
A180645A  BF18 2001		nemov r0, #1

#57				JMPCN	$label3	{LNXT:6|6|8}
(-) BOOL
A180645E  2800     		cmp r0, #0
A1806460  D010     		beq #32 ; 0xA1806484


#58		
#59				(* THEN *)
#60		
#61					(* res_lvl_2 := sysWriteParINT(ADR(ep_level_2), Level_2); *)
#62					ADR		ep_level_2	{LNXT:6|8|-1}
(*) BOOL
A1806464  F8DF 00A8		ldr r0, [pc, #+168] ; 0xA00017F2

#63					sysWriteParINT		Level_2	{LNXT:6|8|-1}
(*) @INT
A1806468  4607     		mov r7, r0
A180646A  4638     		mov r0, r7
A180646C  F8DF 70B8		ldr r7, [pc, #+184] ; 0xA0003F08
A1806470  F9B7 1000		ldrsh r1, [r7]
A1806474  F8DF 40FC		ldr r4, [pc, #+252] ; 0x27D3B
A1806478  F044 0401		orr r4, r4, #1
A180647C  47A0     		blx r4

#64					ST		res_lvl_2	{LNXT:6|8|-1}
(*) BOOL
A180647E  F8DF 70E4		ldr r7, [pc, #+228] ; 0xA1A00102
A1806482  7038     		strb r0, [r7]

#65		
#66		$label3:
#67				(* END_IF *)
#68		
#69		
#70				(* IF ep_level_3 <> Level_3 *)
#71				LD		ep_level_3	{LNXT:8|-1|-1}
(*) UNDEF
A1806484  F8DF 708C		ldr r7, [pc, #+140] ; 0xA00017F4
A1806488  F9B7 0000		ldrsh r0, [r7]

#72				NE		Level_3	{LNXT:8|-1|-1}
(*) INT
A180648C  F8DF 709C		ldr r7, [pc, #+156] ; 0xA0003F0A
A1806490  F9B7 7000		ldrsh r7, [r7]
A1806494  42B8     		cmp r0, r7
A1806496  BF08 2000		eqmov r0, #0
A180649A  BF18 2001		nemov r0, #1

#73				JMPCN	$label4	{LNXT:8|8|9}
(-) BOOL
A180649E  2800     		cmp r0, #0
A18064A0  D010     		beq #32 ; 0xA18064C4


#74		
#75				(* THEN *)
#76		
#77					(* res_lvl_3 := sysWriteParINT(ADR(ep_level_3), Level_3); *)
#78					ADR		ep_level_3	{LNXT:8|9|-1}
(*) BOOL
A18064A4  F8DF 006C		ldr r0, [pc, #+108] ; 0xA00017F4

#79					sysWriteParINT		Level_3	{LNXT:8|9|-1}
(*) @INT
A18064A8  4607     		mov r7, r0
A18064AA  4638     		mov r0, r7
A18064AC  F8DF 707C		ldr r7, [pc, #+124] ; 0xA0003F0A
A18064B0  F9B7 1000		ldrsh r1, [r7]
A18064B4  F8DF 40BC		ldr r4, [pc, #+188] ; 0x27D3B
A18064B8  F044 0401		orr r4, r4, #1
A18064BC  47A0     		blx r4

#80					ST		res_lvl_3	{LNXT:8|9|-1}
(*) BOOL
A18064BE  F8DF 70A8		ldr r7, [pc, #+168] ; 0xA1A00103
A18064C2  7038     		strb r0, [r7]

#81		
#82		$label4:
#83				(* END_IF *)
#84		
#85		
#86				(* IF ep_rotation <> Rotation *)
#87				LD		ep_rotation	{LNXT:9|-1|-1}
(*) UNDEF
A18064C4  F8DF 7054		ldr r7, [pc, #+84] ; 0xA00017F8
A18064C8  7838     		ldrb r0, [r7]

#88				NE		Rotation	{LNXT:9|-1|-1}
(*) BOOL
A18064CA  F8DF 7064		ldr r7, [pc, #+100] ; 0xA0003F10
A18064CE  783F     		ldrb r7, [r7]
A18064D0  42B8     		cmp r0, r7
A18064D2  BF08 2000		eqmov r0, #0
A18064D6  BF18 2001		nemov r0, #1

#89				JMPCN	$label5	{LNXT:9|9|1}
(-) BOOL
A18064DA  2800     		cmp r0, #0
A18064DC  D00F     		beq #30 ; 0xA18064FE


#90		
#91				(* THEN *)
#92		
#93					(* res_rotation := sysWriteParBOOL(ADR(ep_rotation), Rotation); *)
#94					ADR		ep_rotation	{LNXT:9|1|-1}
(*) BOOL
A18064E0  F8DF 0038		ldr r0, [pc, #+56] ; 0xA00017F8

#95					sysWriteParBOOL		Rotation	{LNXT:9|1|-1}
(*) @BOOL
A18064E4  4607     		mov r7, r0
A18064E6  4638     		mov r0, r7
A18064E8  F8DF 7044		ldr r7, [pc, #+68] ; 0xA0003F10
A18064EC  7839     		ldrb r1, [r7]
A18064EE  F8DF 4088		ldr r4, [pc, #+136] ; 0x27DD7
A18064F2  F044 0401		orr r4, r4, #1
A18064F6  47A0     		blx r4

#96					ST		res_rotation	{LNXT:9|1|-1}
(*) BOOL
A18064F8  F8DF 7070		ldr r7, [pc, #+112] ; 0xA1A00104
A18064FC  7038     		strb r0, [r7]

A18064FE  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
A1806502  F8DD E000		ldr lr, [sp]
A1806506  B002     		add sp, sp, #8

A1806508  4770     		bx lr

A180650C  FFFFFFFF		; 0xA00017F0
A1806510  FFFFFFFF		; 0xA00017F2
A1806514  FFFFFFFF		; 0xA00017F4
A1806518  FFFFFFFF		; 0xA00017F6
A180651C  FFFFFFFF		; 0xA00017F8
A1806520  FFFFFFFF		; 0xA0003F04
A1806524  FFFFFFFF		; 0xA0003F06
A1806528  FFFFFFFF		; 0xA0003F08
A180652C  FFFFFFFF		; 0xA0003F0A
A1806530  FFFFFFFF		; 0xA0003F10
A1806534  A1804518		; 0xA1804518
A1806538  A1804550		; 0xA1804550
A180653C  A1A000DE		; 0xA1A000DE
A1806540  A1A000E8		; 0xA1A000E8
A1806544  A1A000EC		; 0xA1A000EC
A1806548  A1A000F0		; 0xA1A000F0
A180654C  A1A000F4		; 0xA1A000F4
A1806550  A1A000FC		; 0xA1A000FC
A1806554  A1A000FD		; 0xA1A000FD
A1806558  A1A000FE		; 0xA1A000FE
A180655C  A1A00100		; 0xA1A00100
A1806560  A1A00101		; 0xA1A00101
A1806564  A1A00102		; 0xA1A00102
A1806568  A1A00103		; 0xA1A00103
A180656C  A1A00104		; 0xA1A00104
A1806570  00001388		; 0x00001388
A1806574  FFFFFFFF		; 0x00027D3B
A1806578  FFFFFFFF		; 0x00027DD7

END_PROGRAM


**************************************************
	Target variable image generation
**************************************************


*** INPUT:
A180657C  B082     		sub sp, sp, #8
A180657E  F8CD E000		str lr, [sp]
A1806582  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

A1806586  F8DF 70E4		ldr r7, [pc, #+228] ; 0x10000442
A180658A  8838     		ldrh r0, [r7]
A180658C  F8DF 708C		ldr r7, [pc, #+140] ; 0xA1A00012
A1806590  8038     		strh r0, [r7]

A1806592  F8DF 70C8		ldr r7, [pc, #+200] ; 0x10000426
A1806596  7838     		ldrb r0, [r7]
A1806598  F8DF 707C		ldr r7, [pc, #+124] ; 0xA1A00011
A180659C  7038     		strb r0, [r7]

A180659E  F8DF 70B0		ldr r7, [pc, #+176] ; 0x10000423
A18065A2  7838     		ldrb r0, [r7]
A18065A4  F8DF 7078		ldr r7, [pc, #+120] ; 0xA1A0002A
A18065A8  7038     		strb r0, [r7]

A18065AA  F8DF 70A8		ldr r7, [pc, #+168] ; 0x10000424
A18065AE  7838     		ldrb r0, [r7]
A18065B0  F8DF 7070		ldr r7, [pc, #+112] ; 0xA1A0002B
A18065B4  7038     		strb r0, [r7]

A18065B6  F8DF 7090		ldr r7, [pc, #+144] ; 0x10000421
A18065BA  7838     		ldrb r0, [r7]
A18065BC  F8DF 7068		ldr r7, [pc, #+104] ; 0xA1A0002C
A18065C0  7038     		strb r0, [r7]

A18065C2  F8DF 7094		ldr r7, [pc, #+148] ; 0x10000425
A18065C6  7838     		ldrb r0, [r7]
A18065C8  F8DF 7060		ldr r7, [pc, #+96] ; 0xA1A0002D
A18065CC  7038     		strb r0, [r7]

A18065CE  F8DF 707C		ldr r7, [pc, #+124] ; 0x10000422
A18065D2  7838     		ldrb r0, [r7]
A18065D4  F8DF 7058		ldr r7, [pc, #+88] ; 0xA1A0002E
A18065D8  7038     		strb r0, [r7]

A18065DA  F8DF 7068		ldr r7, [pc, #+104] ; 0x10000420
A18065DE  7838     		ldrb r0, [r7]
A18065E0  F8DF 7050		ldr r7, [pc, #+80] ; 0xA1A0002F
A18065E4  7038     		strb r0, [r7]

A18065E6  F8DF 707C		ldr r7, [pc, #+124] ; 0x10000428
A18065EA  7838     		ldrb r0, [r7]
A18065EC  F8DF 7048		ldr r7, [pc, #+72] ; 0xA1A0008A
A18065F0  7038     		strb r0, [r7]

A18065F2  F8DF 706C		ldr r7, [pc, #+108] ; 0x10000427
A18065F6  7838     		ldrb r0, [r7]
A18065F8  F8DF 7044		ldr r7, [pc, #+68] ; 0xA1A000DF
A18065FC  7038     		strb r0, [r7]

A18065FE  F8DF 7068		ldr r7, [pc, #+104] ; 0x1000042A
A1806602  7838     		ldrb r0, [r7]
A1806604  F8DF 7034		ldr r7, [pc, #+52] ; 0xA1A000DE
A1806608  7038     		strb r0, [r7]

A180660A  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
A180660E  F8DD E000		ldr lr, [sp]
A1806612  B002     		add sp, sp, #8

A1806614  4770     		bx lr

A1806618  A1A00011		; 0xA1A00011
A180661C  A1A00012		; 0xA1A00012
A1806620  A1A0002A		; 0xA1A0002A
A1806624  A1A0002B		; 0xA1A0002B
A1806628  A1A0002C		; 0xA1A0002C
A180662C  A1A0002D		; 0xA1A0002D
A1806630  A1A0002E		; 0xA1A0002E
A1806634  A1A0002F		; 0xA1A0002F
A1806638  A1A0008A		; 0xA1A0008A
A180663C  A1A000DE		; 0xA1A000DE
A1806640  A1A000DF		; 0xA1A000DF
A1806644  FFFFFFFF		; 0x10000420
A1806648  FFFFFFFF		; 0x10000421
A180664C  FFFFFFFF		; 0x10000422
A1806650  FFFFFFFF		; 0x10000423
A1806654  FFFFFFFF		; 0x10000424
A1806658  FFFFFFFF		; 0x10000425
A180665C  FFFFFFFF		; 0x10000426
A1806660  FFFFFFFF		; 0x10000427
A1806664  FFFFFFFF		; 0x10000428
A1806668  FFFFFFFF		; 0x1000042A
A180666C  FFFFFFFF		; 0x10000442


*** OUTPUT:
A1806670  B082     		sub sp, sp, #8
A1806672  F8CD E000		str lr, [sp]
A1806676  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

A180667A  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
A180667E  F8DD E000		ldr lr, [sp]
A1806682  B002     		add sp, sp, #8

A1806684  4770     		bx lr



**************************************************
	Task Timed init code
**************************************************

A1806686  B082     		sub sp, sp, #8
A1806688  F8CD E000		str lr, [sp]
A180668C  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

Var init: V::LVL.TM_WAIT_START = 5000
A1806690  F8DF 0038		ldr r0, [pc, #+56] ; 0x1388
A1806694  F8DF 7024		ldr r7, [pc, #+36] ; 0xA1A00028
A1806698  8038     		strh r0, [r7]

Var init: V::LVL.ROTATIONNUMBER = 1
A180669A  F8DF 002C		ldr r0, [pc, #+44] ; 0x1
A180669E  F8DF 7020		ldr r7, [pc, #+32] ; 0xA1A0005A
A18066A2  8038     		strh r0, [r7]

Var init: V::LVL.CURRENTPUMP = 1
A18066A4  F8DF 0020		ldr r0, [pc, #+32] ; 0x1
A18066A8  F8DF 7018		ldr r7, [pc, #+24] ; 0xA1A0005C
A18066AC  8038     		strh r0, [r7]

A18066AE  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
A18066B2  F8DD E000		ldr lr, [sp]
A18066B6  B002     		add sp, sp, #8

A18066B8  4770     		bx lr

A18066BC  A1A00028		; 0xA1A00028
A18066C0  A1A0005A		; 0xA1A0005A
A18066C4  A1A0005C		; 0xA1A0005C
A18066C8  00000001		; 0x00000001
A18066CC  00001388		; 0x00001388



**************************************************
	Global init code
**************************************************

A18066E0  B082     		sub sp, sp, #8
A18066E2  F8CD E000		str lr, [sp]
A18066E6  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

Var init: V:CONFIGURATION_VARIABLES:ROTATION_STATE = '0'
A18066EA  F8DF 70AC		ldr r7, [pc, #+172] ; 0xA0003FBA
A18066EE  2030     		mov r0, #0x30
A18066F0  7038     		strb r0, [r7, #+0]
A18066F2  2000     		mov r0, #0x00
A18066F4  7078     		strb r0, [r7, #+1]
A18066F6  F8DF 80A4		ldr r8, [pc, #+164] ; 0x2
A18066FA  4447     		add r7, r7, r8
A18066FC  2000     		mov r0, #0
A18066FE  7038     		strb r0, [r7]

Var init: V:CONFIGURATION_VARIABLES:FLOODING_STATE = '0'
A1806700  F8DF 7090		ldr r7, [pc, #+144] ; 0xA0003FA4
A1806704  F8DF 0098		ldr r0, [pc, #+152] ; 0x30
A1806708  7038     		strb r0, [r7]
A180670A  1C7F     		add r7, r7, #1
A180670C  2000     		mov r0, #0
A180670E  7038     		strb r0, [r7]

Var init: V:CONFIGURATION_VARIABLES:STATE_MOTOR_1 = '0'
A1806710  F8DF 7068		ldr r7, [pc, #+104] ; 0xA0003F20
A1806714  F8DF 0088		ldr r0, [pc, #+136] ; 0x30
A1806718  7038     		strb r0, [r7]
A180671A  1C7F     		add r7, r7, #1
A180671C  2000     		mov r0, #0
A180671E  7038     		strb r0, [r7]

Var init: V:CONFIGURATION_VARIABLES:STATE_MOTOR_2 = '0'
A1806720  F8DF 705C		ldr r7, [pc, #+92] ; 0xA0003F40
A1806724  F8DF 0078		ldr r0, [pc, #+120] ; 0x30
A1806728  7038     		strb r0, [r7]
A180672A  1C7F     		add r7, r7, #1
A180672C  2000     		mov r0, #0
A180672E  7038     		strb r0, [r7]

Var init: V:CONFIGURATION_VARIABLES:STATE_MOTOR_3 = '0'
A1806730  F8DF 7050		ldr r7, [pc, #+80] ; 0xA0003F60
A1806734  F8DF 0068		ldr r0, [pc, #+104] ; 0x30
A1806738  7038     		strb r0, [r7]
A180673A  1C7F     		add r7, r7, #1
A180673C  2000     		mov r0, #0
A180673E  7038     		strb r0, [r7]

Var init: V:CONFIGURATION_VARIABLES:AUTO_STATE_1 = '0'
A1806740  F8DF 7044		ldr r7, [pc, #+68] ; 0xA0003F80
A1806744  F8DF 0058		ldr r0, [pc, #+88] ; 0x30
A1806748  7038     		strb r0, [r7]
A180674A  1C7F     		add r7, r7, #1
A180674C  2000     		mov r0, #0
A180674E  7038     		strb r0, [r7]

Var init: V:CONFIGURATION_VARIABLES:AUTO_STATE_2 = '0'
A1806750  F8DF 7038		ldr r7, [pc, #+56] ; 0xA0003F8C
A1806754  F8DF 0048		ldr r0, [pc, #+72] ; 0x30
A1806758  7038     		strb r0, [r7]
A180675A  1C7F     		add r7, r7, #1
A180675C  2000     		mov r0, #0
A180675E  7038     		strb r0, [r7]

Var init: V:CONFIGURATION_VARIABLES:AUTO_STATE_3 = '0'
A1806760  F8DF 702C		ldr r7, [pc, #+44] ; 0xA0003F98
A1806764  F8DF 0038		ldr r0, [pc, #+56] ; 0x30
A1806768  7038     		strb r0, [r7]
A180676A  1C7F     		add r7, r7, #1
A180676C  2000     		mov r0, #0
A180676E  7038     		strb r0, [r7]

A1806770  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
A1806774  F8DD E000		ldr lr, [sp]
A1806778  B002     		add sp, sp, #8

A180677A  4770     		bx lr

A180677C  FFFFFFFF		; 0xA0003F20
A1806780  FFFFFFFF		; 0xA0003F40
A1806784  FFFFFFFF		; 0xA0003F60
A1806788  FFFFFFFF		; 0xA0003F80
A180678C  FFFFFFFF		; 0xA0003F8C
A1806790  FFFFFFFF		; 0xA0003F98
A1806794  FFFFFFFF		; 0xA0003FA4
A1806798  FFFFFFFF		; 0xA0003FBA
A180679C  00000002		; 0x00000002
A18067A0  00000030		; 0x00000030



**************************************************
	Global RETAIN init code
**************************************************

A18067A4  B082     		sub sp, sp, #8
A18067A6  F8CD E000		str lr, [sp]
A18067AA  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

A18067AE  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
A18067B2  F8DD E000		ldr lr, [sp]
A18067B6  B002     		add sp, sp, #8

A18067B8  4770     		bx lr



********************************************
MEMORY MAP
********************************************

Code area type:          		       main code
Start code area:          		00000000A1800000h
End code area:            		00000000A1806C74h
Code size:                		00006C74h

Start local data area:    		00000000A1A00000h
End local data area:      		00000000A1A00105h
Local data size:          		00000105h

Start retentive data area:		0000000000000000h
End retentive data area:  		0000000000000000h
Retentive data size:      		00000000h

Start bit data area:      		0000000000000000h
End bit data area:        		0000000000000000h
Bit data size:            		00000000h



********************************************
CODE ID:                                6A94F7BC
DEBUG MEMO ID:                          A180B976
FULL MEMO ID:                           0000984E
********************************************
