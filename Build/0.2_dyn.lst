***********************************************************************
*
*	DYNAMIC LINK AND INDIRECT ALLOCATION LISTING FOR: 0.2
*
***********************************************************************


***************************************************
	 FIRST CODE AREA
***************************************************

***************************************************
	 DATABLOCK PATCHES
***************************************************
*
* List of data blocks that will be checked run-time for consistency with
* their definition available at compile-time
*
*
*	REQUIREMENTS for DATA BLOCK %I1
*		Process image: 1
*		Number of elements: 12
*		Data size (bytes): 2
0000	01 01 01 00 0C 00 00 00 02 00 00 00 

*
*	REQUIREMENTS for DATA BLOCK %M0
*		Process image: 0
*		Number of elements: 1
*		Data size (bytes): 4
000C	00 00 00 00 01 00 00 00 04 00 00 00 

*
*	REQUIREMENTS for DATA BLOCK %I0
*		Process image: 1
*		Number of elements: 12
*		Data size (bytes): 1
0018	01 01 00 00 0C 00 00 00 01 00 00 00 

*
*	REQUIREMENTS for DATA BLOCK %M100
*		Process image: 0
*		Number of elements: 416
*		Data size (bytes): 2
0024	00 00 64 00 A0 01 00 00 02 00 00 00 

*
*	REQUIREMENTS for DATA BLOCK %M110
*		Process image: 0
*		Number of elements: 5000
*		Data size (bytes): 2
0030	00 00 6E 00 88 13 00 00 02 00 00 00 

*
*	REQUIREMENTS for DATA BLOCK %Q1
*		Process image: 0
*		Number of elements: 12
*		Data size (bytes): 1
003C	00 02 01 00 0C 00 00 00 01 00 00 00 

*
* List of all references to data allocated on data blocks
* along with the whole information required by the run-time linker
*
*
*	1 REFERENCE(S) TO 32-BIT VAR AT BYTE #0 OF DATA BLOCK %M0
0000	00 00 00 00 00 00 00 00 00 04 01 00 

*		Instruction type: 0x00
*		Code offset: 0x00004394
000C	94 43 00 00 

*
*	1 REFERENCE(S) TO 16-BIT VAR AT BYTE #386 OF DATA BLOCK %M100
0010	00 00 64 00 82 01 00 00 00 02 01 00 

*		Instruction type: 0x00
*		Code offset: 0x00004460
001C	60 44 00 00 

*
*	1 REFERENCE(S) TO 16-BIT VAR AT BYTE #4 OF DATA BLOCK %M110
0020	00 00 6E 00 04 00 00 00 00 02 01 00 

*		Instruction type: 0x00
*		Code offset: 0x00004D18
002C	18 4D 00 00 

*
*	1 REFERENCE(S) TO 16-BIT VAR AT BYTE #6 OF DATA BLOCK %M110
0030	00 00 6E 00 06 00 00 00 00 02 01 00 

*		Instruction type: 0x00
*		Code offset: 0x00004D1C
003C	1C 4D 00 00 

*
*	1 REFERENCE(S) TO 16-BIT VAR AT BYTE #8 OF DATA BLOCK %M110
0040	00 00 6E 00 08 00 00 00 00 02 01 00 

*		Instruction type: 0x00
*		Code offset: 0x00004D20
004C	20 4D 00 00 

*
*	1 REFERENCE(S) TO 8-BIT VAR AT BYTE #18 OF DATA BLOCK %M110
0050	00 00 6E 00 12 00 00 00 00 01 01 00 

*		Instruction type: 0x00
*		Code offset: 0x00004D34
005C	34 4D 00 00 

*
*	1 REFERENCE(S) TO 8-BIT VAR AT BYTE #16 OF DATA BLOCK %M110
0060	00 00 6E 00 10 00 00 00 00 01 01 00 

*		Instruction type: 0x00
*		Code offset: 0x00004D30
006C	30 4D 00 00 

*
*	1 REFERENCE(S) TO 16-BIT VAR AT BYTE #10 OF DATA BLOCK %M110
0070	00 00 6E 00 0A 00 00 00 00 02 01 00 

*		Instruction type: 0x00
*		Code offset: 0x00004D24
007C	24 4D 00 00 

*
*	1 REFERENCE(S) TO 16-BIT VAR AT BYTE #12 OF DATA BLOCK %M110
0080	00 00 6E 00 0C 00 00 00 00 02 01 00 

*		Instruction type: 0x00
*		Code offset: 0x00004D28
008C	28 4D 00 00 

*
*	2 REFERENCE(S) TO 16-BIT VAR AT BYTE #14 OF DATA BLOCK %M110
0090	00 00 6E 00 0E 00 00 00 00 02 02 00 

*		Instruction type: 0x00
*		Code offset: 0x00004D2C
009C	2C 4D 00 00 

*		Instruction type: 0x00
*		Code offset: 0x00006048
00A0	48 60 00 00 

*
*	3 REFERENCE(S) TO 8-BIT VAR AT BYTE #0 OF DATA BLOCK %Q1
00A4	00 00 01 00 00 00 00 00 02 01 03 00 

*		Instruction type: 0x00
*		Code offset: 0x00004D8C
00B0	8C 4D 00 00 

*		Instruction type: 0x00
*		Code offset: 0x00005E58
00B4	58 5E 00 00 

*		Instruction type: 0x00
*		Code offset: 0x000062B0
00B8	B0 62 00 00 

*
*	3 REFERENCE(S) TO 8-BIT VAR AT BYTE #1 OF DATA BLOCK %Q1
00BC	00 00 01 00 01 00 00 00 02 01 03 00 

*		Instruction type: 0x00
*		Code offset: 0x00004D90
00C8	90 4D 00 00 

*		Instruction type: 0x00
*		Code offset: 0x00005E5C
00CC	5C 5E 00 00 

*		Instruction type: 0x00
*		Code offset: 0x000062B4
00D0	B4 62 00 00 

*
*	3 REFERENCE(S) TO 8-BIT VAR AT BYTE #2 OF DATA BLOCK %Q1
00D4	00 00 01 00 02 00 00 00 02 01 03 00 

*		Instruction type: 0x00
*		Code offset: 0x00004D94
00E0	94 4D 00 00 

*		Instruction type: 0x00
*		Code offset: 0x00005F48
00E4	48 5F 00 00 

*		Instruction type: 0x00
*		Code offset: 0x000062B8
00E8	B8 62 00 00 

*
*	1 REFERENCE(S) TO 8-BIT VAR AT BYTE #1 OF DATA BLOCK %I0
00EC	00 00 00 00 01 00 00 00 01 01 01 00 

*		Instruction type: 0x00
*		Code offset: 0x00006398
00F8	98 63 00 00 

*
*	1 REFERENCE(S) TO 16-BIT VAR AT BYTE #2 OF DATA BLOCK %M110
00FC	00 00 6E 00 02 00 00 00 00 02 01 00 

*		Instruction type: 0x00
*		Code offset: 0x00006044
0108	44 60 00 00 

*
*	1 REFERENCE(S) TO 32-BIT VAR AT BYTE #24 OF DATA BLOCK %M110
010C	00 00 6E 00 18 00 00 00 00 04 01 00 

*		Instruction type: 0x00
*		Code offset: 0x00006298
0118	98 62 00 00 

*
*	1 REFERENCE(S) TO 32-BIT VAR AT BYTE #20 OF DATA BLOCK %M110
011C	00 00 6E 00 14 00 00 00 00 04 01 00 

*		Instruction type: 0x00
*		Code offset: 0x00006294
0128	94 62 00 00 

*
*	1 REFERENCE(S) TO 8-BIT VAR AT BYTE #0 OF DATA BLOCK %I0
012C	00 00 00 00 00 00 00 00 01 01 01 00 

*		Instruction type: 0x00
*		Code offset: 0x00006394
0138	94 63 00 00 

*
*	1 REFERENCE(S) TO 8-BIT VAR AT BYTE #2 OF DATA BLOCK %I0
013C	00 00 00 00 02 00 00 00 01 01 01 00 

*		Instruction type: 0x00
*		Code offset: 0x0000639C
0148	9C 63 00 00 

*
*	1 REFERENCE(S) TO 8-BIT VAR AT BYTE #3 OF DATA BLOCK %I0
014C	00 00 00 00 03 00 00 00 01 01 01 00 

*		Instruction type: 0x00
*		Code offset: 0x000063A0
0158	A0 63 00 00 

*
*	1 REFERENCE(S) TO 8-BIT VAR AT BYTE #4 OF DATA BLOCK %I0
015C	00 00 00 00 04 00 00 00 01 01 01 00 

*		Instruction type: 0x00
*		Code offset: 0x000063A4
0168	A4 63 00 00 

*
*	1 REFERENCE(S) TO 8-BIT VAR AT BYTE #5 OF DATA BLOCK %I0
016C	00 00 00 00 05 00 00 00 01 01 01 00 

*		Instruction type: 0x00
*		Code offset: 0x000063A8
0178	A8 63 00 00 

*
*	1 REFERENCE(S) TO 8-BIT VAR AT BYTE #6 OF DATA BLOCK %I0
017C	00 00 00 00 06 00 00 00 01 01 01 00 

*		Instruction type: 0x00
*		Code offset: 0x000063AC
0188	AC 63 00 00 

*
*	1 REFERENCE(S) TO 8-BIT VAR AT BYTE #7 OF DATA BLOCK %I0
018C	00 00 00 00 07 00 00 00 01 01 01 00 

*		Instruction type: 0x00
*		Code offset: 0x000063B0
0198	B0 63 00 00 

*
*	1 REFERENCE(S) TO 8-BIT VAR AT BYTE #8 OF DATA BLOCK %I0
019C	00 00 00 00 08 00 00 00 01 01 01 00 

*		Instruction type: 0x00
*		Code offset: 0x000063B4
01A8	B4 63 00 00 

*
*	1 REFERENCE(S) TO 8-BIT VAR AT BYTE #9 OF DATA BLOCK %I0
01AC	00 00 00 00 09 00 00 00 01 01 01 00 

*		Instruction type: 0x00
*		Code offset: 0x000063B8
01B8	B8 63 00 00 

*
*	1 REFERENCE(S) TO 8-BIT VAR AT BYTE #10 OF DATA BLOCK %I0
01BC	00 00 00 00 0A 00 00 00 01 01 01 00 

*		Instruction type: 0x00
*		Code offset: 0x000063BC
01C8	BC 63 00 00 

*
*	1 REFERENCE(S) TO 16-BIT VAR AT BYTE #0 OF DATA BLOCK %I1
01CC	00 00 01 00 00 00 00 00 01 02 01 00 

*		Instruction type: 0x00
*		Code offset: 0x000063C0
01D8	C0 63 00 00 


***************************************************
	 FUNCTION PATCHES
***************************************************

NAME: sysDBase_SetExtTable  - NUM: 1
	 Patch - TYPE: 0x0 - CODE OFFSET: 0x000044E0

NAME: UDINT_TO_REAL  - NUM: 2
	 Patch - TYPE: 0x0 - CODE OFFSET: 0x00006068
	 Patch - TYPE: 0x0 - CODE OFFSET: 0x000062A4

NAME: REAL_TO_DINT  - NUM: 1
	 Patch - TYPE: 0x0 - CODE OFFSET: 0x00006070

NAME: DINT_TO_REAL  - NUM: 1
	 Patch - TYPE: 0x0 - CODE OFFSET: 0x0000606C

NAME: ADD_REAL  - NUM: 1
	 Patch - TYPE: 0x0 - CODE OFFSET: 0x000062A8

NAME: DIV_REAL  - NUM: 2
	 Patch - TYPE: 0x0 - CODE OFFSET: 0x00006074
	 Patch - TYPE: 0x0 - CODE OFFSET: 0x000062AC
